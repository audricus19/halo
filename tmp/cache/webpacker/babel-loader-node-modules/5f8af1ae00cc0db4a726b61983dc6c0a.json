{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/ResultRow/ResultRow.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Button, Grid } from \"semantic-ui-react\";\nimport verifiedPartnerIcon from '../../../../images/icons/verified_partner_icon.svg';\nimport { COLORS } from '../../../../constants';\nvar styles = StyleSheet.create({\n  ResultRow_resultContainer: {\n    border: \"1px solid \".concat(COLORS.lightGray),\n    margin: '20px auto',\n    height: '200px',\n    ':hover': {\n      boxShadow: \"0 6px 12px 0 \".concat(COLORS.lightGray)\n    }\n  },\n  ResultRow_grid: {\n    padding: '24px 24px 28px 24px',\n    margin: 0,\n    position: 'relative'\n  },\n  ResultRow_gridRow: {\n    margin: 0,\n    padding: 0,\n    display: 'block'\n  },\n  ResultRow_companyName: {\n    fontSize: '14px',\n    lineHeight: '24px',\n    color: COLORS.gray\n  },\n  ResultRow_saveButtonContainer: {\n    padding: 0\n  },\n  ResultRow_saveButton: {\n    fontSize: '13px',\n    fontWeight: 500,\n    lineHeight: '15px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    padding: '5px 20px'\n  },\n  ResultRow_title: {\n    fontSize: '14px',\n    fontWeight: 600,\n    color: COLORS.lightBlack,\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap'\n  },\n  ResultRow_summary: {\n    fontSize: '13px',\n    marginBottom: '18px',\n    color: COLORS.lightBlack,\n    display: '-webkit-box',\n    '-webkit-line-clamp': '2',\n    '-webkit-box-orient': 'vertical',\n    overflow: 'hidden'\n  },\n  ResultRow_therapeuticArea: {\n    fontSize: '11px',\n    marginTop: '5px',\n    marginRight: '10px',\n    padding: '4px 10px',\n    color: COLORS.lightBlue,\n    border: \"1px solid \".concat(COLORS.lightBlue),\n    borderRadius: '4px',\n    width: 'fit-content',\n    display: 'inline-block'\n  },\n  ResultRow_innovationType: {\n    fontSize: '11px',\n    display: 'inline-block',\n    padding: '4px 10px',\n    color: COLORS.lightBlack,\n    border: \"1px solid \".concat(COLORS.lightBlack),\n    borderRadius: '4px',\n    width: 'fit-content',\n    marginRight: '10px'\n  },\n  ResultRow_bottomRow: {},\n  ResultRow_verifiedIcon: {\n    marginLeft: '5px',\n    marginRight: '5px'\n  }\n});\n\nvar ResultRow =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ResultRow, _PureComponent);\n\n  function ResultRow(props) {\n    var _this;\n\n    _classCallCheck(this, ResultRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResultRow).call(this, props));\n\n    _this.authenticityToken = function () {\n      var token = document.querySelector('meta[name=\"csrf-token\"]');\n\n      if (token && token instanceof window.HTMLMetaElement) {\n        return token.content;\n      }\n\n      return null;\n    };\n\n    _this.handleSave = function _callee(e, id) {\n      var _this$props, isSaved, saveRFP, unsaveRFP, rfpId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.cancelBubble = true;\n\n              if (e.stopPropagation) {\n                e.preventDefault();\n                e.stopPropagation();\n              }\n\n              _this$props = _this.props, isSaved = _this$props.isSaved, saveRFP = _this$props.saveRFP, unsaveRFP = _this$props.unsaveRFP, rfpId = _this$props.rfpId;\n\n              if (!isSaved) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(unsaveRFP(rfpId));\n\n            case 6:\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(saveRFP(rfpId));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      isSubmitting: false,\n      savedRFPs: gon.saved_rfps\n    };\n    return _this;\n  }\n\n  _createClass(ResultRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          company = _this$props2.company,\n          title = _this$props2.title,\n          summary = _this$props2.summary,\n          therapeuticArea = _this$props2.therapeuticArea,\n          innovationTypes = _this$props2.innovationTypes,\n          rfpId = _this$props2.rfpId,\n          isUpdatingSaveRFP = _this$props2.isUpdatingSaveRFP,\n          isSaved = _this$props2.isSaved,\n          isPartner = _this$props2.isPartner;\n      return React.createElement(\"div\", {\n        className: css(styles.ResultRow_resultContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: css(styles.ResultRow_grid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 16,\n        className: css(styles.ResultRow_gridRow),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 8,\n        textAlign: \"left\",\n        className: css(styles.ResultRow_companyName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, company, isPartner && React.createElement(\"span\", {\n        className: css(styles.ResultRow_verifiedIcon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: verifiedPartnerIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })))), gon.logged_in && React.createElement(Grid.Column, {\n        width: 8,\n        textAlign: \"right\",\n        className: css(styles.ResultRow_saveButtonContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: css(styles.ResultRow_saveButton),\n        disabled: isUpdatingSaveRFP,\n        onClick: function onClick(e) {\n          return _this2.handleSave(e, rfpId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, isSaved ? \"Unsave\" : \"Save\"))), React.createElement(Grid.Row, {\n        className: css(styles.ResultRow_gridRow),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.ResultRow_title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: css(styles.ResultRow_summary),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, summary))), React.createElement(Grid.Row, {\n        className: css(styles.ResultRow_gridRow, styles.ResultRow_bottomRow),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, therapeuticArea && React.createElement(\"div\", {\n        className: css(styles.ResultRow_therapeuticArea),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, therapeuticArea), innovationTypes && innovationTypes.slice(0, 4).map(function (innovationType) {\n        return innovationType && React.createElement(\"div\", {\n          key: \"innovation-type-\".concat(innovationType),\n          className: css(styles.ResultRow_innovationType),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, innovationType);\n      })))));\n    }\n  }]);\n\n  return ResultRow;\n}(PureComponent);\n\nResultRow.propTypes = {\n  rfpId: PropTypes.number,\n  title: PropTypes.string,\n  company: PropTypes.string,\n  summary: PropTypes.string,\n  therapeuticArea: PropTypes.string,\n  innovationTypes: PropTypes.arrayOf(PropTypes.string),\n  isPreview: PropTypes.bool,\n  saveRFP: PropTypes.func,\n  unsaveRFP: PropTypes.func,\n  isUpdatingSaveRFP: PropTypes.bool,\n  isSaved: PropTypes.bool,\n  isPartner: PropTypes.bool\n};\nexport default ResultRow;","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/ResultRow/ResultRow.jsx"],"names":["React","PureComponent","PropTypes","css","StyleSheet","Button","Grid","verifiedPartnerIcon","COLORS","styles","create","ResultRow_resultContainer","border","lightGray","margin","height","boxShadow","ResultRow_grid","padding","position","ResultRow_gridRow","display","ResultRow_companyName","fontSize","lineHeight","color","gray","ResultRow_saveButtonContainer","ResultRow_saveButton","fontWeight","background","lightBlue","backgroundImage","white","ResultRow_title","lightBlack","textOverflow","overflowX","whiteSpace","ResultRow_summary","marginBottom","overflow","ResultRow_therapeuticArea","marginTop","marginRight","borderRadius","width","ResultRow_innovationType","ResultRow_bottomRow","ResultRow_verifiedIcon","marginLeft","ResultRow","props","authenticityToken","token","document","querySelector","window","HTMLMetaElement","content","handleSave","e","id","cancelBubble","stopPropagation","preventDefault","isSaved","saveRFP","unsaveRFP","rfpId","state","isSubmitting","savedRFPs","gon","saved_rfps","company","title","summary","therapeuticArea","innovationTypes","isUpdatingSaveRFP","isPartner","logged_in","slice","map","innovationType","propTypes","number","string","arrayOf","isPreview","bool","func"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Button, Grid } from \"semantic-ui-react\";\n\nimport verifiedPartnerIcon from '../../../../images/icons/verified_partner_icon.svg';\nimport { COLORS } from '../../../../constants';\n\nconst styles = StyleSheet.create({\n  ResultRow_resultContainer: {\n    border: `1px solid ${COLORS.lightGray}`,\n    margin: '20px auto',\n    height: '200px',\n    ':hover': {\n      boxShadow: `0 6px 12px 0 ${COLORS.lightGray}`,\n    },\n  },\n  ResultRow_grid: {\n    padding: '24px 24px 28px 24px',\n    margin: 0,\n    position: 'relative',\n  },\n  ResultRow_gridRow: {\n    margin: 0,\n    padding: 0,\n    display: 'block',\n  },\n  ResultRow_companyName: {\n    fontSize: '14px',\n    lineHeight: '24px',\n    color: COLORS.gray,\n  },\n  ResultRow_saveButtonContainer: {\n    padding: 0,\n  },\n  ResultRow_saveButton: {\n    fontSize: '13px',\n    fontWeight: 500,\n    lineHeight: '15px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    padding: '5px 20px',\n  },\n  ResultRow_title: {\n    fontSize: '14px',\n    fontWeight: 600,\n    color: COLORS.lightBlack,\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  ResultRow_summary: {\n    fontSize: '13px',\n    marginBottom: '18px',\n    color: COLORS.lightBlack,\n    display: '-webkit-box',\n    '-webkit-line-clamp': '2',\n    '-webkit-box-orient': 'vertical',\n    overflow: 'hidden',\n  },\n  ResultRow_therapeuticArea: {\n    fontSize: '11px',\n    marginTop: '5px',\n    marginRight: '10px',\n    padding: '4px 10px',\n    color: COLORS.lightBlue,\n    border: `1px solid ${COLORS.lightBlue}`,\n    borderRadius: '4px',\n    width: 'fit-content',\n    display: 'inline-block',\n  },\n  ResultRow_innovationType: {\n    fontSize: '11px',\n    display: 'inline-block',\n    padding: '4px 10px',\n    color: COLORS.lightBlack,\n    border: `1px solid ${COLORS.lightBlack}`,\n    borderRadius: '4px',\n    width: 'fit-content',\n    marginRight: '10px',\n  },\n  ResultRow_bottomRow: {\n\n  },\n  ResultRow_verifiedIcon: {\n    marginLeft: '5px',\n    marginRight: '5px',\n  },\n});\n\nclass ResultRow extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitting: false,\n      savedRFPs: gon.saved_rfps,\n    };\n  }\n\n  authenticityToken = () => {\n    const token = document.querySelector('meta[name=\"csrf-token\"]');\n    if (token && (token instanceof window.HTMLMetaElement)) {\n      return token.content;\n    }\n    return null;\n  };\n\n  handleSave = async (e, id) => {\n    e.cancelBubble = true;\n    if (e.stopPropagation) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    const {\n      isSaved,\n      saveRFP,\n      unsaveRFP,\n      rfpId,\n    } = this.props;\n\n    if (isSaved) {\n      await unsaveRFP(rfpId);\n    } else {\n      await saveRFP(rfpId);\n    }\n  };\n\n  render() {\n    const {\n      company,\n      title,\n      summary,\n      therapeuticArea,\n      innovationTypes,\n      rfpId,\n      isUpdatingSaveRFP,\n      isSaved,\n      isPartner,\n    } = this.props;\n\n    return (\n      <div className={css(styles.ResultRow_resultContainer)}>\n        <Grid className={css(styles.ResultRow_grid)}>\n          <Grid.Row columns={16} className={css(styles.ResultRow_gridRow)}>\n            <Grid.Column width={8} textAlign=\"left\" className={css(styles.ResultRow_companyName)}>\n              <div>\n                {company}\n                {isPartner &&\n                  <span className={css(styles.ResultRow_verifiedIcon)}><img src={verifiedPartnerIcon} /></span>}\n              </div>\n            </Grid.Column>\n            {gon.logged_in &&\n              <Grid.Column width={8} textAlign=\"right\" className={css(styles.ResultRow_saveButtonContainer)}>\n                <Button\n                  className={css(styles.ResultRow_saveButton)}\n                  disabled={isUpdatingSaveRFP}\n                  onClick={(e) => this.handleSave(e, rfpId)}\n                >\n                  {isSaved ? \"Unsave\" : \"Save\"}\n                </Button>\n              </Grid.Column>}\n          </Grid.Row>\n          <Grid.Row className={css(styles.ResultRow_gridRow)}>\n            <Grid.Column width={16}>\n              <div className={css(styles.ResultRow_title)}>\n                {title}\n              </div>\n              <div className={css(styles.ResultRow_summary)}>\n                {summary}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className={css(styles.ResultRow_gridRow, styles.ResultRow_bottomRow)}>\n            <Grid.Column width={16}>\n              {therapeuticArea &&\n                <div className={css(styles.ResultRow_therapeuticArea)}>\n                  {therapeuticArea}\n                </div>\n              }\n              {innovationTypes && innovationTypes.slice(0, 4).map((innovationType) => (\n                innovationType &&\n                  <div key={`innovation-type-${innovationType}`} className={css(styles.ResultRow_innovationType)}>\n                    {innovationType}\n                  </div>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nResultRow.propTypes = {\n  rfpId: PropTypes.number,\n  title: PropTypes.string,\n  company: PropTypes.string,\n  summary: PropTypes.string,\n  therapeuticArea: PropTypes.string,\n  innovationTypes: PropTypes.arrayOf(PropTypes.string),\n  isPreview: PropTypes.bool,\n  saveRFP: PropTypes.func,\n  unsaveRFP: PropTypes.func,\n  isUpdatingSaveRFP: PropTypes.bool,\n  isSaved: PropTypes.bool,\n  isPartner: PropTypes.bool,\n};\n\nexport default ResultRow;\n"]},"metadata":{},"sourceType":"module"}