{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { emptyActionGenerator, payloadActionGenerator } from '../utils/redux';\nimport { authenticityToken } from '../utils/requests';\nexport var LOAD_REQUEST_FOR_PROPOSALS = 'LOAD_REQUEST_FOR_PROPOSALS';\nexport var SET_REQUEST_FOR_PROPOSALS = 'SET_REQUEST_FOR_PROPOSALS';\nexport var LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH = 'LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH';\nexport var SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH = 'SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH';\nexport var LOAD_PROPOSALS = 'LOAD_PROPOSALS';\nexport var SET_PROPOSALS = 'SET_PROPOSALS';\nexport var SET_REVIEWER_DASHBOARD_RFP = 'SET_REVIEWER_DASHBOARD_RFP';\nexport var SET_PROPOSAL_DASHBOARD_RFP = 'SET_PROPOSAL_DASHBOARD_RFP';\nexport var loadRequestForProposals = payloadActionGenerator(LOAD_REQUEST_FOR_PROPOSALS);\nexport var setRequestForProposals = payloadActionGenerator(SET_REQUEST_FOR_PROPOSALS);\nexport var loadRequestForProposalsByResearch = payloadActionGenerator(LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH);\nexport var setRequestForProposalsByResearch = payloadActionGenerator(SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH);\nexport var loadProposals = payloadActionGenerator(LOAD_PROPOSALS);\nexport var setProposals = payloadActionGenerator(SET_PROPOSALS);\nexport var setReviewerDashboardRFP = payloadActionGenerator(SET_REVIEWER_DASHBOARD_RFP);\nexport var setProposalDashboardRFP = payloadActionGenerator(SET_PROPOSAL_DASHBOARD_RFP);\nexport var fetchRequestForProposals = function fetchRequestForProposals(companyId) {\n  return function _callee(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(loadRequestForProposals());\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/request_for_proposals?company_id=\".concat(companyId), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context.sent;\n            dispatch(setRequestForProposals(responseJson.request_for_proposals));\n            return _context.abrupt(\"return\", responseJson.request_for_proposals);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var fetchRequestForProposalsByResearchArea = function fetchRequestForProposalsByResearchArea(researchArea) {\n  return function _callee2(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch(loadRequestForProposalsByResearch());\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/request_for_proposals?research_area=\".concat(researchArea, \"&enabled=true\"), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context2.sent;\n            dispatch(setRequestForProposalsByResearch(responseJson.request_for_proposals));\n            return _context2.abrupt(\"return\", responseJson.request_for_proposals);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var fetchProposals = function fetchProposals(rfpId) {\n  return function _callee3(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch(loadProposals());\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/proposals?request_for_proposal_id=\".concat(rfpId), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context3.sent;\n            dispatch(setProposals(responseJson.proposals));\n            return _context3.abrupt(\"return\", responseJson.proposals);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/actions/companyActions.jsx"],"names":["emptyActionGenerator","payloadActionGenerator","authenticityToken","LOAD_REQUEST_FOR_PROPOSALS","SET_REQUEST_FOR_PROPOSALS","LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH","SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH","LOAD_PROPOSALS","SET_PROPOSALS","SET_REVIEWER_DASHBOARD_RFP","SET_PROPOSAL_DASHBOARD_RFP","loadRequestForProposals","setRequestForProposals","loadRequestForProposalsByResearch","setRequestForProposalsByResearch","loadProposals","setProposals","setReviewerDashboardRFP","setProposalDashboardRFP","fetchRequestForProposals","companyId","dispatch","fetch","method","headers","response","json","responseJson","request_for_proposals","fetchRequestForProposalsByResearchArea","researchArea","fetchProposals","rfpId","proposals"],"mappings":"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","sourcesContent":["import {\n  emptyActionGenerator,\n  payloadActionGenerator\n} from '../utils/redux';\nimport { authenticityToken } from '../utils/requests';\n\nexport const LOAD_REQUEST_FOR_PROPOSALS = 'LOAD_REQUEST_FOR_PROPOSALS';\nexport const SET_REQUEST_FOR_PROPOSALS = 'SET_REQUEST_FOR_PROPOSALS';\nexport const LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH = 'LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH';\nexport const SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH = 'SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH';\nexport const LOAD_PROPOSALS = 'LOAD_PROPOSALS';\nexport const SET_PROPOSALS = 'SET_PROPOSALS';\nexport const SET_REVIEWER_DASHBOARD_RFP = 'SET_REVIEWER_DASHBOARD_RFP';\nexport const SET_PROPOSAL_DASHBOARD_RFP = 'SET_PROPOSAL_DASHBOARD_RFP';\n\nexport const loadRequestForProposals = payloadActionGenerator(LOAD_REQUEST_FOR_PROPOSALS);\nexport const setRequestForProposals = payloadActionGenerator(SET_REQUEST_FOR_PROPOSALS);\nexport const loadRequestForProposalsByResearch = payloadActionGenerator(LOAD_REQUEST_FOR_PROPOSALS_BY_RESEARCH);\nexport const setRequestForProposalsByResearch = payloadActionGenerator(SET_REQUEST_FOR_PROPOSALS_BY_RESEARCH);\nexport const loadProposals = payloadActionGenerator(LOAD_PROPOSALS);\nexport const setProposals = payloadActionGenerator(SET_PROPOSALS);\nexport const setReviewerDashboardRFP = payloadActionGenerator(SET_REVIEWER_DASHBOARD_RFP);\nexport const setProposalDashboardRFP = payloadActionGenerator(SET_PROPOSAL_DASHBOARD_RFP);\n\nexport const fetchRequestForProposals = (companyId) => {\n  return async (dispatch) => {\n    dispatch(loadRequestForProposals());\n\n    const response = await fetch(`/request_for_proposals?company_id=${companyId}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n    const responseJson = await response.json();\n\n    dispatch(setRequestForProposals(responseJson.request_for_proposals));\n\n    return responseJson.request_for_proposals;\n  }\n}\n\nexport const fetchRequestForProposalsByResearchArea = (researchArea) => {\n  return async (dispatch) => {\n    dispatch(loadRequestForProposalsByResearch());\n\n    const response = await fetch(`/request_for_proposals?research_area=${researchArea}&enabled=true`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n    const responseJson = await response.json();\n\n    dispatch(setRequestForProposalsByResearch(responseJson.request_for_proposals));\n\n    return responseJson.request_for_proposals;\n  }\n}\n\nexport const fetchProposals = (rfpId) => {\n  return async (dispatch) => {\n    dispatch(loadProposals());\n\n    const response = await fetch(`/proposals?request_for_proposal_id=${rfpId}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n    const responseJson = await response.json();\n\n    dispatch(setProposals(responseJson.proposals));\n\n    return responseJson.proposals;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}