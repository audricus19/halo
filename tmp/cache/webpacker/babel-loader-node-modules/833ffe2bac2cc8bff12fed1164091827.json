{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/LoginModal/LoginModal.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport PropTypes from 'prop-types';\nimport { Container, Grid, Button, Form, Input, Message, Modal } from 'semantic-ui-react';\nimport Validator from 'validator';\nimport { COLORS } from '../../../../constants';\nimport haloLogo from '../../../../images/logos/halo_logo.svg';\nimport signUpGraphic from '../../../../images/backgrounds/sign_up_graphic.svg';\nimport verifiedPartnerIcon from '../../../../images/icons/verified_partner_icon.svg';\nimport { toggleLoginModal as toggleLoginModalAction } from '../../actions/profileActions';\nimport { authenticityToken } from '../../utils/requests';\nvar styles = StyleSheet.create({\n  LoginModal_modal: {},\n  LoginModal_container: {\n    height: '100%',\n    paddingBottom: '1px'\n  },\n  LoginModal_backgroundPane: {\n    width: '100%',\n    height: '100%',\n    display: 'inline-block',\n    position: 'absolute',\n    backgroundColor: COLORS.darkBlue,\n    backgroundImage: \"url(\".concat(signUpGraphic, \")\"),\n    backgroundSize: 'cover',\n    zIndex: -100\n  },\n  LoginModal_innerContainer: {\n    backgroundColor: 'white',\n    padding: '10px',\n    margin: '1.5em auto'\n  },\n  LoginModal_grid: {},\n  LoginModal_logoContainer: {\n    marginTop: '25px',\n    textAlign: 'center'\n  },\n  LoginModal_hero: {\n    marginTop: '40px'\n  },\n  LoginModal_headline: {\n    color: COLORS.lightBlack,\n    fontSize: '36px',\n    fontWeight: 'bold',\n    lineHeight: '48px',\n    marginBottom: '10px',\n    textAlign: 'center'\n  },\n  LoginModal_subheadline: {\n    color: COLORS.darkGray,\n    fontSize: '18px',\n    lineHeight: '24px',\n    marginBottom: '20px',\n    textAlign: 'center'\n  },\n  LoginModal_innerLeftPane: {\n    width: '50%',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    padding: '30px 10px 30px 0'\n  },\n  LoginModal_innerRightPane: {\n    width: '50%',\n    display: 'inline-block'\n  },\n  LoginModal_signupPanel: {},\n  LoginModal_orcidButton: {\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    padding: '12px',\n    width: '100%',\n    borderRadius: '4px',\n    height: '48px',\n    fontSize: '14px'\n  },\n  LoginModal_alreadyHaveAccount: {\n    textAlign: 'center',\n    display: 'inline-block',\n    fontSize: '13px',\n    fontWeight: 'bold',\n    lineHeight: '24px',\n    width: '100%',\n    color: COLORS.lightBlack\n  },\n  LoginModal_signInLink: _defineProperty({\n    marginLeft: '5px',\n    display: 'inline-block',\n    fontWeight: 'normal',\n    textDecoration: 'none',\n    color: COLORS.lightBlack,\n    cursor: 'pointer'\n  }, \"textDecoration\", 'underline'),\n  LoginModal_label: {\n    display: 'block',\n    color: COLORS.darkGray,\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: 500\n  },\n  LoginModal_footerText: {\n    color: COLORS.lightBlack,\n    fontSize: '12px'\n  },\n  LoginModal_inputField: {\n    width: '100%',\n    border: \"1px solid \".concat(COLORS.lightGray),\n    padding: '5px 12px',\n    borderRadius: '4px',\n    height: '48px',\n    fontSize: '14px'\n  },\n  LoginModal_submitButton: {\n    marginTop: '10px',\n    width: '100%',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    padding: '12px',\n    borderRadius: '4px',\n    height: '48px',\n    fontSize: '14px'\n  },\n  LoginModal_formField: {\n    marginTop: '15px',\n    marginBottom: '15px'\n  },\n  LoginModal_forgotPasswordContainer: {\n    textAlign: 'center',\n    marginTop: '10px'\n  },\n  LoginModal_forgotPassword: {\n    textDecoration: 'underline',\n    color: COLORS.darkGray,\n    fontSize: '12px',\n    lineHeight: '24px'\n  },\n  LoginModal_modalText: {\n    color: COLORS.lightBlack,\n    fontSize: '16px',\n    width: '90%',\n    marginBottom: '30px',\n    display: 'flex'\n  },\n  LoginModal_lineItem: {\n    marginLeft: '5px'\n  },\n  LoginModal_horizontalRule: {\n    marginTop: '20px',\n    marginBottom: '16px'\n  }\n});\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(LoginModal, _PureComponent);\n\n  function LoginModal(props) {\n    var _this;\n\n    _classCallCheck(this, LoginModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginModal).call(this, props));\n\n    _this.openORCID = function (e) {\n      e.preventDefault();\n      var clientId = process.env.ORCID_CLIENT_ID;\n      window.open(\"https://\".concat(process.env.ORCID_URL, \"/oauth/authorize?client_id=\").concat(process.env.ORCID_CLIENT_ID, \"&response_type=code&scope=/authenticate&redirect_uri=\").concat(process.env.ORCID_REDIRECT), \"_blank\", \"toolbar=no, scrollbars=yes, width=500, height=600, top=500, left=500\");\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({\n        hasSubmitted: false\n      }, e.target.name, e.target.value));\n    };\n\n    _this.handleLogin = function _callee() {\n      var toggleLoginModal, _this$state, email, password, formData, loginResponse, responseJson;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              toggleLoginModal = _this.props.toggleLoginModal;\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n\n              _this.setState({\n                isSubmitting: true,\n                error: '',\n                hasSubmitted: true\n              });\n\n              formData = new FormData();\n              formData.append('user[email]', email);\n              formData.append('user[password]', password);\n              _context.prev = 6;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(fetch('/users/sign_in', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 9:\n              loginResponse = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(loginResponse.json());\n\n            case 12:\n              responseJson = _context.sent;\n\n              if (responseJson.error) {\n                _this.setState({\n                  isSubmitting: false,\n                  error: responseJson.error\n                });\n              } else {\n                toggleLoginModal(false);\n                window.location.reload();\n              }\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](6);\n\n              _this.setState({\n                isSubmitting: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[6, 16]]);\n    };\n\n    _this.handleRegister = function _callee2() {\n      var _this$state2, email, password, toggleLoginModal, formData, createUserResponse, responseJson;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state2 = _this.state, email = _this$state2.email, password = _this$state2.password;\n              toggleLoginModal = _this.props.toggleLoginModal;\n\n              _this.setState({\n                isSubmitting: true,\n                errors: {},\n                hasSubmitted: true\n              });\n\n              formData = new FormData();\n              formData.append('user[email]', email);\n              formData.append('user[password]', password);\n              _context2.prev = 6;\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(fetch('/users', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 9:\n              createUserResponse = _context2.sent;\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(createUserResponse.json());\n\n            case 12:\n              responseJson = _context2.sent;\n\n              if (responseJson.errors) {\n                _this.setState({\n                  isSubmitting: false,\n                  errors: responseJson.errors\n                });\n              } else {\n                toggleLoginModal(false);\n                window.location.reload();\n              }\n\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](6);\n\n              _this.setState({\n                isSubmitting: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[6, 16]]);\n    };\n\n    _this.state = {\n      password: '',\n      email: '',\n      isSubmitting: false,\n      hasSubmitted: false,\n      isLogin: props.startOnLogin,\n      error: '',\n      errors: undefined\n    };\n    return _this;\n  }\n\n  _createClass(LoginModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          isSubmitting = _this$state3.isSubmitting,\n          hasSubmitted = _this$state3.hasSubmitted,\n          error = _this$state3.error,\n          isLogin = _this$state3.isLogin,\n          errors = _this$state3.errors;\n      var _this$props = this.props,\n          toggleLoginModal = _this$props.toggleLoginModal,\n          loginModalOpen = _this$props.loginModalOpen,\n          startPage = _this$props.startPage,\n          signupHeadline = _this$props.signupHeadline,\n          loginHeadline = _this$props.loginHeadline,\n          lineItems = _this$props.lineItems;\n      var hasErrors = hasSubmitted && (error && error.length > 0 || errors && Object.keys(errors).length > 0);\n      return React.createElement(Modal, {\n        open: loginModalOpen,\n        onClose: function onClose() {\n          toggleLoginModal(false);\n        },\n        size: \"small\",\n        className: css(styles.LoginModal_modal),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.LoginModal_innerContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.LoginModal_logoContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: haloLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        centered: true,\n        columns: 2,\n        className: css(styles.LoginModal_grid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        centered: true,\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.LoginModal_hero),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.LoginModal_subheadline),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, isLogin ? loginHeadline : signupHeadline), !isLogin && React.createElement(\"div\", {\n        className: css(styles.LoginModal_subheadline),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/universities/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Not a scientist? Sign up as a university partner\"))), React.createElement(\"div\", {\n        className: css(styles.LoginModal_innerLeftPane),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, lineItems.map(function (lineItem, i) {\n        return React.createElement(\"div\", {\n          key: \"lineItem-\".concat(i),\n          className: css(styles.LoginModal_modalText),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: verifiedPartnerIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: css(styles.LoginModal_lineItem),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, lineItem));\n      })), React.createElement(\"div\", {\n        className: css(styles.LoginModal_innerRightPane),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.LoginModal_signupPanel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: isLogin ? this.handleLogin : this.handleRegister,\n        error: hasErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Message, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Message.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, isLogin ? \"Login invalid\" : \"Registration invalid\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, isLogin ? \"Something went wrong, please check password and try again.\" : \"That account may already be taken or password is not long enough, please try logging in or try registering with another email.\")), React.createElement(Form.Field, {\n        className: css(styles.LoginModal_formField),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: css(styles.LoginModal_inputField),\n        name: \"email\",\n        value: email,\n        placeholder: \"E-mail\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        className: css(styles.LoginModal_formField),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: css(styles.LoginModal_inputField),\n        name: \"password\",\n        value: password,\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: isSubmitting,\n        loading: isSubmitting,\n        className: css(styles.LoginModal_submitButton),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, isLogin ? \"Sign in\" : \"Create Account\")), React.createElement(\"div\", {\n        className: css(styles.LoginModal_forgotPasswordContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, !isLogin && React.createElement(\"div\", {\n        className: css(styles.LoginModal_footerText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"By signing up you agree to the \"), isLogin ? React.createElement(\"a\", {\n        className: css(styles.LoginModal_forgotPassword),\n        href: \"/users/password/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Forgot password?\") : React.createElement(\"a\", {\n        className: css(styles.LoginModal_forgotPassword),\n        href: \"/terms\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Terms of Service\"), !isLogin && React.createElement(\"span\", {\n        className: css(styles.LoginPage_footerText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, ' & '), !isLogin && React.createElement(\"a\", {\n        className: css(styles.LoginModal_forgotPassword),\n        href: \"/privacy_policy\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Privacy Policy\")))), React.createElement(\"hr\", {\n        className: css(styles.LoginModal_horizontalRule),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: css(styles.LoginModal_alreadyHaveAccount),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, isLogin ? \"Don’t have an account?\" : \"Already have an account?\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.LoginModal_signInLink),\n        onClick: function onClick() {\n          return _this2.setState({\n            isLogin: !_this2.state.isLogin,\n            errors: {},\n            error: undefined\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \" \", isLogin ? \"Sign up\" : \"Sign in\"))))))));\n    }\n  }]);\n\n  return LoginModal;\n}(PureComponent);\n\nLoginModal.defaultProps = {\n  startOnLogin: false,\n  loginHeadline: \"Enter your details below to sign in.\",\n  lineItems: []\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginModalOpen: state.profiles.loginModalOpen\n  };\n};\n\nvar mapDispatchToProps = {\n  toggleLoginModal: toggleLoginModalAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModal);","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/LoginModal/LoginModal.jsx"],"names":["React","PureComponent","connect","css","StyleSheet","PropTypes","Container","Grid","Button","Form","Input","Message","Modal","Validator","COLORS","haloLogo","signUpGraphic","verifiedPartnerIcon","toggleLoginModal","toggleLoginModalAction","authenticityToken","styles","create","LoginModal_modal","LoginModal_container","height","paddingBottom","LoginModal_backgroundPane","width","display","position","backgroundColor","darkBlue","backgroundImage","backgroundSize","zIndex","LoginModal_innerContainer","padding","margin","LoginModal_grid","LoginModal_logoContainer","marginTop","textAlign","LoginModal_hero","LoginModal_headline","color","lightBlack","fontSize","fontWeight","lineHeight","marginBottom","LoginModal_subheadline","darkGray","LoginModal_innerLeftPane","verticalAlign","LoginModal_innerRightPane","LoginModal_signupPanel","LoginModal_orcidButton","background","lightBlue","white","borderRadius","LoginModal_alreadyHaveAccount","LoginModal_signInLink","marginLeft","textDecoration","cursor","LoginModal_label","LoginModal_footerText","LoginModal_inputField","border","lightGray","LoginModal_submitButton","LoginModal_formField","LoginModal_forgotPasswordContainer","LoginModal_forgotPassword","LoginModal_modalText","LoginModal_lineItem","LoginModal_horizontalRule","LoginModal","props","openORCID","e","preventDefault","clientId","process","env","ORCID_CLIENT_ID","window","open","ORCID_URL","ORCID_REDIRECT","handleChange","setState","hasSubmitted","target","name","value","handleLogin","state","email","password","isSubmitting","error","formData","FormData","append","fetch","method","body","headers","loginResponse","json","responseJson","location","reload","handleRegister","errors","createUserResponse","isLogin","startOnLogin","undefined","loginModalOpen","startPage","signupHeadline","loginHeadline","lineItems","hasErrors","length","Object","keys","map","lineItem","i","LoginPage_footerText","defaultProps","mapStateToProps","profiles","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport PropTypes from 'prop-types';\nimport { Container, Grid, Button, Form, Input, Message, Modal } from 'semantic-ui-react'\nimport Validator from 'validator';\n\nimport { COLORS } from '../../../../constants';\nimport haloLogo from '../../../../images/logos/halo_logo.svg';\nimport signUpGraphic from '../../../../images/backgrounds/sign_up_graphic.svg';\nimport verifiedPartnerIcon from '../../../../images/icons/verified_partner_icon.svg';\nimport {\n  toggleLoginModal as toggleLoginModalAction,\n} from '../../actions/profileActions';\nimport {\n  authenticityToken,\n} from '../../utils/requests';\n\nconst styles = StyleSheet.create({\n  LoginModal_modal: {\n\n  },\n  LoginModal_container: {\n    height: '100%',\n    paddingBottom: '1px',\n  },\n  LoginModal_backgroundPane: {\n    width: '100%',\n    height: '100%',\n    display: 'inline-block',\n    position: 'absolute',\n    backgroundColor: COLORS.darkBlue,\n    backgroundImage: `url(${signUpGraphic})`,\n    backgroundSize: 'cover',\n    zIndex: -100,\n  },\n  LoginModal_innerContainer: {\n    backgroundColor: 'white',\n    padding: '10px',\n    margin: '1.5em auto'\n  },\n  LoginModal_grid: {\n\n  },\n  LoginModal_logoContainer: {\n    marginTop: '25px',\n    textAlign: 'center',\n  },\n  LoginModal_hero: {\n    marginTop: '40px',\n  },\n  LoginModal_headline: {\n    color: COLORS.lightBlack,\n    fontSize: '36px',\n    fontWeight: 'bold',\n    lineHeight: '48px',\n    marginBottom: '10px',\n    textAlign: 'center',\n  },\n  LoginModal_subheadline: {\n    color: COLORS.darkGray,\n    fontSize: '18px',\n    lineHeight: '24px',\n    marginBottom: '20px',\n    textAlign: 'center',\n  },\n  LoginModal_innerLeftPane: {\n    width: '50%',\n    display: 'inline-block',\n    verticalAlign: 'top',\n    padding: '30px 10px 30px 0',\n  },\n  LoginModal_innerRightPane: {\n    width: '50%',\n    display: 'inline-block',\n  },\n  LoginModal_signupPanel: {\n\n  },\n  LoginModal_orcidButton: {\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    padding: '12px',\n    width: '100%',\n    borderRadius: '4px',\n    height: '48px',\n    fontSize: '14px',\n  },\n  LoginModal_alreadyHaveAccount: {\n    textAlign: 'center',\n    display: 'inline-block',\n    fontSize: '13px',\n    fontWeight: 'bold',\n    lineHeight: '24px',\n    width: '100%',\n    color: COLORS.lightBlack,\n  },\n  LoginModal_signInLink: {\n    marginLeft: '5px',\n    display: 'inline-block',\n    fontWeight: 'normal',\n    textDecoration: 'none',\n    color: COLORS.lightBlack,\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  LoginModal_label: {\n    display: 'block',\n    color: COLORS.darkGray,\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: 500,\n  },\n  LoginModal_footerText: {\n    color: COLORS.lightBlack,\n    fontSize: '12px',\n  },\n  LoginModal_inputField: {\n    width: '100%',\n    border: `1px solid ${COLORS.lightGray}`,\n    padding: '5px 12px',\n    borderRadius: '4px',\n    height: '48px',\n    fontSize: '14px',\n  },\n  LoginModal_submitButton: {\n    marginTop: '10px',\n    width: '100%',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    padding: '12px',\n    borderRadius: '4px',\n    height: '48px',\n    fontSize: '14px',\n  },\n  LoginModal_formField: {\n    marginTop: '15px',\n    marginBottom: '15px',\n  },\n  LoginModal_forgotPasswordContainer: {\n    textAlign: 'center',\n    marginTop: '10px',\n  },\n  LoginModal_forgotPassword: {\n    textDecoration: 'underline',\n    color: COLORS.darkGray,\n    fontSize: '12px',\n    lineHeight: '24px',\n  },\n  LoginModal_modalText: {\n    color: COLORS.lightBlack,\n    fontSize: '16px',\n    width: '90%',\n    marginBottom: '30px',\n    display: 'flex',\n  },\n  LoginModal_lineItem: {\n    marginLeft: '5px',\n  },\n  LoginModal_horizontalRule: {\n    marginTop: '20px',\n    marginBottom: '16px',\n  },\n});\n\nclass LoginModal extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      email: '',\n      isSubmitting: false,\n      hasSubmitted: false,\n      isLogin: props.startOnLogin,\n      error: '',\n      errors: undefined,\n    };\n  }\n\n  openORCID = (e) => {\n    e.preventDefault();\n    const clientId = process.env.ORCID_CLIENT_ID;\n\n    window.open(\n      `https://${process.env.ORCID_URL}/oauth/authorize?client_id=${process.env.ORCID_CLIENT_ID}&response_type=code&scope=/authenticate&redirect_uri=${process.env.ORCID_REDIRECT}`,\n      \"_blank\",\n      \"toolbar=no, scrollbars=yes, width=500, height=600, top=500, left=500\");\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      hasSubmitted: false,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleLogin = async () => {\n    const { toggleLoginModal } = this.props;\n    const { email, password } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n      error: '',\n      hasSubmitted: true,\n    });\n\n    const formData = new FormData();\n    formData.append('user[email]', email);\n    formData.append('user[password]', password);\n\n    try {\n      const loginResponse = await fetch('/users/sign_in', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n      const responseJson = await loginResponse.json();\n      if (responseJson.error) {\n        this.setState({\n          isSubmitting: false,\n          error: responseJson.error,\n        });\n      } else {\n        toggleLoginModal(false);\n        window.location.reload();\n      }\n    } catch(err) {\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  handleRegister = async () => {\n    const { email, password } = this.state;\n    const { toggleLoginModal } = this.props;\n\n    this.setState({\n      isSubmitting: true,\n      errors: {},\n      hasSubmitted: true,\n    });\n\n    const formData = new FormData();\n    formData.append('user[email]', email);\n    formData.append('user[password]', password);\n\n    try {\n      const createUserResponse = await fetch('/users', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n      const responseJson = await createUserResponse.json();\n      if (responseJson.errors) {\n        this.setState({\n          isSubmitting: false,\n          errors: responseJson.errors,\n        });\n      } else {\n        toggleLoginModal(false);\n        window.location.reload();\n      }\n    } catch(err) {\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  render() {\n    const {\n      email,\n      password,\n      isSubmitting,\n      hasSubmitted,\n      error,\n      isLogin,\n      errors,\n    } = this.state;\n    const {\n      toggleLoginModal,\n      loginModalOpen,\n      startPage,\n      signupHeadline,\n      loginHeadline,\n      lineItems,\n    } = this.props;\n\n    const hasErrors = hasSubmitted && ((error && error.length > 0) || (errors && Object.keys(errors).length > 0));\n\n    return (\n      <Modal\n        open={loginModalOpen}\n        onClose={() => { toggleLoginModal(false) }}\n        size=\"small\"\n        className={css(styles.LoginModal_modal)}\n      >\n        <div className={css(styles.LoginModal_innerContainer)}>\n          <div className={css(styles.LoginModal_logoContainer)}>\n            <a href=\"/\">\n              <img src={haloLogo} />\n            </a>\n          </div>\n          <Grid centered columns={2} className={css(styles.LoginModal_grid)}>\n            <Grid.Row centered columns={2}>\n              <Grid.Column width={15}>\n                <div className={css(styles.LoginModal_hero)}>\n                  <div className={css(styles.LoginModal_subheadline)}>\n                    {isLogin ? loginHeadline : signupHeadline}\n                  </div>\n                  {!isLogin &&\n                    <div className={css(styles.LoginModal_subheadline)}>\n                      <a href=\"/universities/register\">Not a scientist? Sign up as a university partner</a>\n                    </div>}\n                </div>\n                <div className={css(styles.LoginModal_innerLeftPane)}>\n                  {lineItems.map((lineItem, i) => {\n                    return (\n                      <div key={`lineItem-${i}`} className={css(styles.LoginModal_modalText)}>\n                        <span><img src={verifiedPartnerIcon} /></span><div className={css(styles.LoginModal_lineItem)}>{lineItem}</div>\n                      </div>\n                    )\n                  })}\n                </div>\n                <div className={css(styles.LoginModal_innerRightPane)}>\n                  <div className={css(styles.LoginModal_signupPanel)}>\n                    <Form onSubmit={isLogin ? this.handleLogin : this.handleRegister} error={hasErrors}>\n                      <Message\n                        error\n                      >\n                        <Message.Header>{isLogin ? \"Login invalid\" : \"Registration invalid\"}</Message.Header>\n                        <p>{isLogin ? \"Something went wrong, please check password and try again.\" : \"That account may already be taken or password is not long enough, please try logging in or try registering with another email.\"}</p>\n                      </Message>\n                      <Form.Field className={css(styles.LoginModal_formField)}>\n                        <input\n                          className={css(styles.LoginModal_inputField)}\n                          name='email'\n                          value={email}\n                          placeholder='E-mail'\n                          onChange={this.handleChange}\n                        />\n                      </Form.Field>\n                      <Form.Field className={css(styles.LoginModal_formField)}>\n                        <input\n                          className={css(styles.LoginModal_inputField)}\n                          name='password'\n                          value={password}\n                          type=\"password\"\n                          placeholder='Password'\n                          onChange={this.handleChange}\n                        />\n                      </Form.Field>\n                      <Button\n                        disabled={isSubmitting}\n                        loading={isSubmitting}\n                        className={css(styles.LoginModal_submitButton)}\n                        type='submit'\n                      >\n                        {isLogin ? \"Sign in\" : \"Create Account\"}\n                      </Button>\n                    </Form>\n                    <div className={css(styles.LoginModal_forgotPasswordContainer)}>\n                      {!isLogin && <div className={css(styles.LoginModal_footerText)}>By signing up you agree to the </div>}\n                      {isLogin ? (\n                        <a\n                          className={css(styles.LoginModal_forgotPassword)}\n                          href=\"/users/password/new\"\n                        >\n                          Forgot password?\n                        </a>\n                      ) : (\n                        <a\n                          className={css(styles.LoginModal_forgotPassword)}\n                          href=\"/terms\"\n                          target=\"_blank\"\n                        >\n                          Terms of Service\n                        </a>\n                      )}\n                      {!isLogin && <span className={css(styles.LoginPage_footerText)}>{' & '}</span>}\n                      {!isLogin &&\n                        <a\n                          className={css(styles.LoginModal_forgotPassword)}\n                          href=\"/privacy_policy\"\n                          target=\"_blank\"\n                        >\n                          Privacy Policy\n                        </a>}\n                    </div>\n                  </div>\n                </div>\n                <hr className={css(styles.LoginModal_horizontalRule)}/>\n                <div className={css(styles.LoginModal_alreadyHaveAccount)}>\n                  {isLogin ? \"Don’t have an account?\" : \"Already have an account?\"}\n                  <span>\n                    <div className={css(styles.LoginModal_signInLink)} onClick={() => this.setState({ isLogin: !this.state.isLogin, errors: {}, error: undefined })}> {isLogin ? \"Sign up\" : \"Sign in\"}</div>\n                  </span>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nLoginModal.defaultProps = {\n  startOnLogin: false,\n  loginHeadline: \"Enter your details below to sign in.\",\n  lineItems: [],\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loginModalOpen: state.profiles.loginModalOpen,\n  };\n};\n\nconst mapDispatchToProps = {\n  toggleLoginModal: toggleLoginModalAction,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginModal);\n"]},"metadata":{},"sourceType":"module"}