{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/ProfilePage/ProfilePage.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport moment from 'moment';\nimport { Container, Grid, Tab, Menu, Button, Icon, Input, TextArea } from 'semantic-ui-react';\nimport { styles as modalStyles } from '../Modal';\nimport { authenticityToken } from '../../utils/requests';\nimport { COLORS } from '../../../../constants';\nimport { getUrlParameter } from '../../utils/requests';\nimport { toggleFundingModal as toggleFundingModalAction, togglePublicationModal as togglePublicationModalAction, togglePatentModal as togglePatentModalAction, fetchUser as fetchUserAction, setCurrentUser as setCurrentUserAction, fetchPublications as fetchPublicationsAction, fetchPatents as fetchPatentsAction, fetchFundings as fetchFundingsAction } from '../../actions/profileActions';\nimport NewFundingModal from '../NewFundingModal';\nimport NewPublicationModal from '../NewPublicationModal';\nimport NewPatentModal from '../NewPatentModal';\nimport EmbeddedTextInput from '../EmbeddedTextInput';\nimport ProfileList from './ProfileList';\nvar styles = StyleSheet.create({\n  ProfilePage_mainPanes: {\n    marginTop: 0\n  },\n  ProfilePage_menuItem: {\n    fontSize: '14px',\n    paddingLeft: '40px',\n    paddingRight: '40px'\n  },\n  ProfilePage_tabMenu: {},\n  ProfilePage_input: {\n    width: '100%',\n    margin: 'auto',\n    padding: '10px',\n    height: '50px',\n    fontSize: '14px',\n    lineHeight: '20px',\n    borderStyle: 'solid',\n    borderColor: COLORS.gray,\n    borderRadius: '5px',\n    borderWidth: '1px'\n  },\n  ProfilePage_sectionHeader: {\n    color: COLORS.lightBlack,\n    fontSize: '14px',\n    fontWeight: 'bold',\n    marginTop: '80px',\n    marginBottom: '20px',\n    display: 'inline-block'\n  },\n  ProfilePage_addButton: {\n    fontSize: '14px',\n    padding: '10px 35px',\n    borderRadius: '4px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white\n  },\n  ProfilePage_leftAlign: {\n    marginTop: '40px',\n    textAlign: 'left'\n  },\n  ProfilePage_rightAlign: {\n    marginTop: '30px',\n    textAlign: 'right'\n  },\n  ProfilePage_editButton: {\n    color: COLORS.gray,\n    marginLeft: '10px',\n    fontSize: '14px',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  ProfilePage_importPublicationInput: {\n    display: 'inline-block',\n    width: '80%'\n  },\n  ProfilePage_importPublicationButton: {\n    fontSize: '14px',\n    borderRadius: '4px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    width: '20%',\n    display: 'inline-block',\n    margin: '0',\n    padding: '19px 0 19px'\n  },\n  ProfilePage_headline: {\n    fontSize: '18px',\n    color: COLORS.lightBlack,\n    height: '50px'\n  },\n  ProfilePage_about: {\n    fontSize: '14px',\n    height: '92px',\n    marginTop: '-10px'\n  },\n  ProfilePage_headlineUpdateStatus: {\n    fontSize: '12px',\n    fontWeight: 'light',\n    verticalAlign: 'middle',\n    lineHeight: '70px'\n  },\n  ProfilePage_aboutUpdateStatus: {\n    fontSize: '12px',\n    fontWeight: 'light',\n    verticalAlign: 'middle',\n    lineHeight: '50px'\n  },\n  ProfilePage_overviewInputCol: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginTop: '-7px',\n    marginBottom: '1em'\n  },\n  ProfilePage_overview: {\n    marginTop: '17px'\n  },\n  ProfilePage_disabledEmbeddedTextInput: {\n    ':hover': {\n      borderColor: COLORS.white\n    }\n  },\n  ProfilePage_awardTag: {\n    color: COLORS.gray,\n    fontSize: '10px',\n    fontWeight: 'bold',\n    paddingLeft: '1rem',\n    position: 'relative',\n    top: '16px',\n    ':nth-child(1n) > i': {\n      display: 'inline-block',\n      height: '15px',\n      width: '15px',\n      position: 'relative',\n      top: '2px',\n      left: '2px'\n    }\n  }\n});\n\nvar ProfilePage =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ProfilePage, _PureComponent);\n\n  function ProfilePage(props) {\n    var _this;\n\n    _classCallCheck(this, ProfilePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfilePage).call(this, props));\n\n    _this.handleTabClick = function (index) {\n      _this.setState({\n        activeTabIndex: index\n      });\n    };\n\n    _this.handleChange = function (e, attr) {\n      _this.setState(_defineProperty({}, attr, e.target.value));\n    };\n\n    _this.convertMonthName = function (month) {\n      return \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(month) / 3 + 1;\n    };\n\n    _this.importURL = function _callee(url) {\n      var togglePublicationModal, xmlParams, normalUrl, response, responseJson;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              togglePublicationModal = _this.props.togglePublicationModal;\n\n              _this.setState({\n                importingPublication: true\n              });\n\n              xmlParams = \"?report=xml&format=text\";\n\n              if (!url.endsWith(xmlParams)) {\n                normalUrl = url;\n                url += xmlParams;\n              } else {\n                normalUrl = url.split(xmlParams).join('');\n              }\n\n              if (!url.startsWith('http')) {\n                url = 'https://' + url;\n                normalUrl = 'https://' + normalUrl;\n              }\n\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(fetch(\"/import_pubmed?url=\".concat(encodeURI(url)), {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json'\n                }\n              }));\n\n            case 8:\n              response = _context.sent;\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 11:\n              responseJson = _context.sent;\n\n              _this.setState({\n                publicationTitle: responseJson.article_title || responseJson.book_title,\n                publicationName: responseJson.journal_title || responseJson.publisher_name,\n                publicationURL: normalUrl,\n                publicationAbstract: responseJson[\"abstract\"]\n              });\n\n              if (responseJson.pubdate_year) {\n                _this.setState({\n                  publicationYear: responseJson.pubdate_year,\n                  publicationMonth: String(_this.convertMonthName(responseJson.pubdate_month))\n                });\n              }\n\n              togglePublicationModal(true);\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0);\n\n            case 20:\n              _this.setState({\n                importingPublication: false\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 17]]);\n    };\n\n    _this.saveUserProfileInfo = function _callee2(fieldName, value) {\n      var _this$setState2;\n\n      var _this$props, currentUser, setCurrentUser, formData, textResponse, responseJson, _this$setState3, _this$setState4;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, currentUser = _this$props.currentUser, setCurrentUser = _this$props.setCurrentUser;\n\n              _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, \"\".concat(fieldName, \"Updating\"), true), _defineProperty(_this$setState2, \"\".concat(fieldName, \"UpdateError\"), false), _this$setState2));\n\n              formData = new FormData();\n              formData.append(fieldName, value);\n              formData.append('user_id', currentUser.id);\n              _context2.prev = 5;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(fetch(\"/user_profile_infos/\".concat(currentUser.id), {\n                method: 'PUT',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 8:\n              textResponse = _context2.sent;\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(textResponse.json());\n\n            case 11:\n              responseJson = _context2.sent;\n\n              if (!responseJson.success) {\n                _this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, \"\".concat(fieldName, \"UpdateError\"), true), _defineProperty(_this$setState3, \"\".concat(fieldName, \"Updating\"), false), _this$setState3));\n              } else {\n                setCurrentUser(responseJson.user);\n\n                _this.setState((_this$setState4 = {}, _defineProperty(_this$setState4, \"\".concat(fieldName, \"Updating\"), false), _defineProperty(_this$setState4, \"\".concat(fieldName, \"UpdateSuccess\"), true), _this$setState4));\n\n                setTimeout(function () {\n                  return _this.setState(_defineProperty({}, \"\".concat(fieldName, \"UpdateSuccess\"), null));\n                }, 2500);\n              }\n\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](5);\n\n              _this.setState(_defineProperty({}, \"\".concat(fieldName, \"UpdateError\"), true));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[5, 15]]);\n    };\n\n    _this.getPanes = function () {\n      var _this$props2 = _this.props,\n          fundings = _this$props2.fundings,\n          publications = _this$props2.publications,\n          patents = _this$props2.patents,\n          match = _this$props2.match,\n          togglePublicationModal = _this$props2.togglePublicationModal,\n          togglePatentModal = _this$props2.togglePatentModal,\n          toggleFundingModal = _this$props2.toggleFundingModal,\n          currentUser = _this$props2.currentUser;\n      var _this$state = _this.state,\n          importingPublication = _this$state.importingPublication,\n          publicationURL = _this$state.publicationURL;\n      var panes = [];\n      var pathId = match.params.id.split('-');\n      var currentUserId = pathId[pathId.length - 1];\n      var isUser = gon.current_user && String(gon.current_user.id) === currentUserId;\n      var isPublic = getUrlParameter('public') === 'true';\n\n      if (publications.length > 0 || isUser && !isPublic) {\n        panes.push({\n          menuItem: React.createElement(Menu.Item, {\n            className: css(styles.ProfilePage_menuItem),\n            onClick: function onClick() {\n              return _this.handleTabClick(0);\n            },\n            key: \"publications\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327\n            },\n            __self: this\n          }, \"Publications (\", publications.length, \")\"),\n          render: function render() {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 330\n              },\n              __self: this\n            }, isUser && !isPublic && React.createElement(\"div\", {\n              className: css(styles.ProfilePage_rightAlign),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: css(styles.ProfilePage_importPublicationInput),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 333\n              },\n              __self: this\n            }, React.createElement(Input, {\n              className: css(styles.ProfilePage_input),\n              transparent: true,\n              fluid: true,\n              name: \"email\",\n              icon: \"linkify\",\n              type: \"text\",\n              value: publicationURL || '',\n              placeholder: \"Paste publication link (e.g. https://www.ncbi.nlm.nih.gov/pubmed/31254486)\",\n              onChange: function onChange(e) {\n                return _this.handleChange(e, 'publicationURL');\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 334\n              },\n              __self: this\n            })), React.createElement(Button, {\n              className: css(styles.ProfilePage_importPublicationButton),\n              disabled: importingPublication || !publicationURL || publicationURL.length === 0,\n              onClick: function onClick() {\n                return _this.importURL(publicationURL);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 346\n              },\n              __self: this\n            }, \"Add\")), React.createElement(ProfileList, {\n              editMethod: function editMethod(id) {\n                return togglePublicationModal({\n                  open: true,\n                  currentPublicationId: id\n                });\n              },\n              isUser: isUser,\n              itemName: \"Publications\",\n              items: publications.map(function (p) {\n                return {\n                  header: p.title,\n                  body: p[\"abstract\"],\n                  url: p.url,\n                  id: p.id,\n                  footerElements: [p.date ? moment(p.date).format('MMM YYYY') : 'No Date', p.publication_name]\n                };\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 354\n              },\n              __self: this\n            }));\n          }\n        });\n      }\n\n      if (fundings.length > 0 || isUser && !isPublic) {\n        panes.push({\n          menuItem: React.createElement(Menu.Item, {\n            className: css(styles.ProfilePage_menuItem),\n            onClick: function onClick() {\n              return _this.handleTabClick(1);\n            },\n            key: \"saved\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376\n            },\n            __self: this\n          }, \"Funding (\", fundings.length, \")\"),\n          render: function render() {\n            // Create our number formatter.\n            var formatter = new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD'\n            });\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385\n              },\n              __self: this\n            }, isUser && !isPublic && React.createElement(\"div\", {\n              className: css(styles.ProfilePage_leftAlign),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 387\n              },\n              __self: this\n            }, React.createElement(Button, {\n              className: css(styles.ProfilePage_addButton),\n              onClick: function onClick() {\n                return toggleFundingModal(true);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 388\n              },\n              __self: this\n            }, \"Add Funding\")), React.createElement(ProfileList, {\n              editMethod: function editMethod(id) {\n                return toggleFundingModal({\n                  open: true,\n                  currentFundingId: id\n                });\n              },\n              isUser: isUser,\n              itemName: \"Fundings\",\n              items: fundings.map(function (f) {\n                var sponsorName = _.keys(f.sponsor).filter(function (key) {\n                  return key.match('name');\n                });\n\n                var startDate = f.date ? moment(f.date).format('MMM YYYY') : 'No Date';\n                var endDate = f.end_date ? moment(f.end_date).format('MMM YYYY') : 'Present';\n                var dateText = f.date ? startDate + ' - ' + endDate : 'No Date';\n                var amountEl = {\n                  text: \"\".concat(formatter.format(Number(f.amount)).split('.')[0]),\n                  width: 3\n                };\n                var sponsorText = (f.other_sponsor || (f.sponsor || {})[sponsorName]) + \" \" + (f.grant_type || '');\n                var awardRecipientTag = React.createElement(\"div\", {\n                  className: css(styles.ProfilePage_awardTag),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 403\n                  },\n                  __self: this\n                }, \"Award Recipient\", React.createElement(\"i\", {\n                  className: \"icon-medal\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 405\n                  },\n                  __self: this\n                }));\n                return {\n                  header: f.title,\n                  body: f.description,\n                  url: f.url,\n                  id: f.id,\n                  tagElement: f.award_recipient_id === currentUser.id ? awardRecipientTag : '',\n                  footerElements: [{\n                    width: 6,\n                    text: dateText\n                  }, amountEl, {\n                    width: 7,\n                    text: sponsorText\n                  }]\n                };\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 390\n              },\n              __self: this\n            }));\n          }\n        });\n      }\n\n      if (patents.length > 0 || isUser && !isPublic) {\n        panes.push({\n          menuItem: React.createElement(Menu.Item, {\n            className: css(styles.ProfilePage_menuItem),\n            onClick: function onClick() {\n              return _this.handleTabClick(2);\n            },\n            key: \"partners\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431\n            },\n            __self: this\n          }, \"Patents (\", patents.length, \")\"),\n          render: function render() {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 434\n              },\n              __self: this\n            }, isUser && !isPublic && React.createElement(\"div\", {\n              className: css(styles.ProfilePage_leftAlign),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 436\n              },\n              __self: this\n            }, React.createElement(Button, {\n              className: css(styles.ProfilePage_addButton),\n              onClick: function onClick() {\n                return togglePatentModal({\n                  open: true\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 437\n              },\n              __self: this\n            }, \"Add Patent\")), React.createElement(ProfileList, {\n              isUser: isUser,\n              editMethod: function editMethod(id) {\n                return togglePatentModal({\n                  open: true,\n                  currentPatentId: id\n                });\n              },\n              itemName: \"Patents\",\n              items: patents.map(function (p) {\n                var patentStatus = gon.patent_statuses.find(function (ps) {\n                  return ps.key === p.status;\n                });\n                var statusText = 'Status: ' + (patentStatus ? patentStatus.text : 'None');\n                var patentFilingDate = p.filing_date ? 'Filing Date: ' + moment.utc(p.filing_date).format('MMM DD, YYYY') : 'No Date';\n                return {\n                  header: p.title,\n                  body: p[\"abstract\"],\n                  url: p.url,\n                  id: p.id,\n                  footerElements: [{\n                    text: patentFilingDate,\n                    width: 6\n                  }, {\n                    text: statusText,\n                    width: 10\n                  }]\n                };\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 439\n              },\n              __self: this\n            }));\n          }\n        });\n      }\n\n      return panes;\n    };\n\n    _this.renderUpdateStatus = function (fieldName) {\n      var message;\n\n      if (_this.state[fieldName + 'UpdateError']) {\n        message = 'failed to save';\n      } else if (_this.state[fieldName + 'Updating']) {\n        message = 'saving...';\n      } else if (_this.state[fieldName + 'UpdateSuccess']) {\n        message = 'autosaved';\n      }\n\n      return React.createElement(\"span\", {\n        className: css(styles[\"ProfilePage_\".concat(fieldName, \"UpdateStatus\")]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, message);\n    };\n\n    _this.renderHeadline = function () {\n      var currentUser = _this.props.currentUser;\n      var isPublic = getUrlParameter('public') === 'true';\n      var isUser = gon.current_user && gon.current_user.id === currentUser.id;\n      var canEdit = isUser && !isPublic && currentUser;\n      var inputClassName = css(styles.ProfilePage_headline, !canEdit && styles.ProfilePage_disabledEmbeddedTextInput);\n      var headline = currentUser && currentUser.profile_info && currentUser.profile_info.headline ? currentUser.profile_info.headline : undefined;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(EmbeddedTextInput, {\n        className: inputClassName,\n        disabled: !canEdit,\n        maxLength: \"75\",\n        defaultValue: headline,\n        placeholder: \"Write a headline about your research\",\n        onBlur: function onBlur(e) {\n          return _this.saveUserProfileInfo('headline', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      })), _this.renderUpdateStatus('headline'));\n    };\n\n    _this.renderAbout = function () {\n      var currentUser = _this.props.currentUser;\n      var isPublic = getUrlParameter('public') === 'true';\n      var isUser = gon.current_user && gon.current_user.id === currentUser.id;\n      var canEdit = isUser && !isPublic && currentUser;\n      var inputClassName = css(styles.ProfilePage_about, !canEdit && styles.ProfilePage_disabledEmbeddedTextInput);\n      var about = currentUser && currentUser.profile_info && currentUser.profile_info.about ? currentUser.profile_info.about : '';\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        className: css(styles.ProfilePage_overviewInputCol),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(EmbeddedTextInput, {\n        className: inputClassName,\n        disabled: !canEdit,\n        maxLength: \"300\",\n        placeholder: \"Provide a short summary\",\n        defaultValue: about,\n        onBlur: function onBlur(e) {\n          return _this.saveUserProfileInfo('about', e.currentTarget.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      })), _this.renderUpdateStatus('about'));\n    };\n\n    _this.state = {\n      activeTabIndex: 0,\n      aboutEdit: false,\n      aboutEditModalOpen: false,\n      importingPublication: false,\n      publicationTitle: undefined,\n      publicationName: undefined,\n      publicationURL: undefined,\n      publicationAbstract: undefined,\n      publicationYear: undefined,\n      publicationMonth: undefined\n    };\n    return _this;\n  }\n\n  _createClass(ProfilePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3, fetchUser, fetchPublications, fetchPatents, fetchFundings, match, pathId, currentUserId;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props3 = this.props, fetchUser = _this$props3.fetchUser, fetchPublications = _this$props3.fetchPublications, fetchPatents = _this$props3.fetchPatents, fetchFundings = _this$props3.fetchFundings, match = _this$props3.match;\n              pathId = match.params.id.split('-');\n              currentUserId = pathId[pathId.length - 1];\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(fetchUser(currentUserId));\n\n            case 5:\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(fetchPublications(currentUserId));\n\n            case 7:\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(fetchPatents(currentUserId));\n\n            case 9:\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(fetchFundings(currentUserId));\n\n            case 11:\n              window.scrollTo(0, 0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          currentUser = _this$props4.currentUser,\n          match = _this$props4.match;\n      var _this$state2 = this.state,\n          activeTabIndex = _this$state2.activeTabIndex,\n          aboutEdit = _this$state2.aboutEdit,\n          aboutEditModalOpen = _this$state2.aboutEditModalOpen,\n          publicationTitle = _this$state2.publicationTitle,\n          publicationName = _this$state2.publicationName,\n          publicationURL = _this$state2.publicationURL,\n          publicationAbstract = _this$state2.publicationAbstract,\n          publicationYear = _this$state2.publicationYear,\n          publicationMonth = _this$state2.publicationMonth;\n      var pathId = match.params.id.split('-');\n      var currentUserId = pathId[pathId.length - 1];\n      var isUser = gon.current_user && String(gon.current_user.id) === currentUserId;\n      var isPublic = getUrlParameter('public') === 'true';\n      var hasAbout = currentUser.profile_info && currentUser.profile_info.about && currentUser.profile_info.about.trim().length > 0;\n      var hasHeadline = currentUser.profile_info && currentUser.profile_info.headline && currentUser.profile_info.headline.trim().length > 0;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(NewFundingModal, {\n        title: \"Add Grants\",\n        currentUserId: currentUser.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }), React.createElement(NewPublicationModal, {\n        title: \"Confirm Publication\",\n        currentUserId: currentUser.id,\n        publicationTitle: publicationTitle,\n        publicationName: publicationName,\n        publicationURL: publicationURL,\n        publicationAbstract: publicationAbstract,\n        publicationMonth: publicationMonth,\n        publicationYear: publicationYear,\n        clearUrl: function clearUrl() {\n          _this2.setState({\n            publicationURL: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }), React.createElement(NewPatentModal, {\n        currentUserId: currentUser.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), (isUser && !isPublic || currentUser && currentUser.profile_info && hasAbout && hasHeadline) && React.createElement(\"div\", {\n        className: css(styles.ProfilePage_overview),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, this.renderHeadline(), this.renderAbout()), React.createElement(\"div\", {\n        className: css(styles.ProfilePage_mainPanes),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        className: css(styles.ProfilePage_tabMenu),\n        activeIndex: activeTabIndex,\n        menu: {\n          secondary: true,\n          pointing: true\n        },\n        panes: this.getPanes(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ProfilePage;\n}(PureComponent);\n\nProfilePage.defaultProps = {\n  fundings: [],\n  publications: [],\n  patents: [],\n  currentUser: {}\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.profiles.currentUser,\n    fundings: state.profiles.fundings,\n    publications: state.profiles.publications,\n    patents: state.profiles.patents\n  };\n};\n\nvar mapDispatchToProps = {\n  toggleFundingModal: toggleFundingModalAction,\n  togglePublicationModal: togglePublicationModalAction,\n  togglePatentModal: togglePatentModalAction,\n  fetchUser: fetchUserAction,\n  setCurrentUser: setCurrentUserAction,\n  fetchPublications: fetchPublicationsAction,\n  fetchPatents: fetchPatentsAction,\n  fetchFundings: fetchFundingsAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/ProfilePage/ProfilePage.jsx"],"names":["React","PureComponent","PropTypes","connect","css","StyleSheet","moment","Container","Grid","Tab","Menu","Button","Icon","Input","TextArea","styles","modalStyles","authenticityToken","COLORS","getUrlParameter","toggleFundingModal","toggleFundingModalAction","togglePublicationModal","togglePublicationModalAction","togglePatentModal","togglePatentModalAction","fetchUser","fetchUserAction","setCurrentUser","setCurrentUserAction","fetchPublications","fetchPublicationsAction","fetchPatents","fetchPatentsAction","fetchFundings","fetchFundingsAction","NewFundingModal","NewPublicationModal","NewPatentModal","EmbeddedTextInput","ProfileList","create","ProfilePage_mainPanes","marginTop","ProfilePage_menuItem","fontSize","paddingLeft","paddingRight","ProfilePage_tabMenu","ProfilePage_input","width","margin","padding","height","lineHeight","borderStyle","borderColor","gray","borderRadius","borderWidth","ProfilePage_sectionHeader","color","lightBlack","fontWeight","marginBottom","display","ProfilePage_addButton","background","lightBlue","backgroundImage","white","ProfilePage_leftAlign","textAlign","ProfilePage_rightAlign","ProfilePage_editButton","marginLeft","cursor","ProfilePage_importPublicationInput","ProfilePage_importPublicationButton","ProfilePage_headline","ProfilePage_about","ProfilePage_headlineUpdateStatus","verticalAlign","ProfilePage_aboutUpdateStatus","ProfilePage_overviewInputCol","paddingTop","paddingBottom","ProfilePage_overview","ProfilePage_disabledEmbeddedTextInput","ProfilePage_awardTag","position","top","left","ProfilePage","props","handleTabClick","index","setState","activeTabIndex","handleChange","e","attr","target","value","convertMonthName","month","indexOf","importURL","url","importingPublication","xmlParams","endsWith","normalUrl","split","join","startsWith","fetch","encodeURI","method","headers","response","json","responseJson","publicationTitle","article_title","book_title","publicationName","journal_title","publisher_name","publicationURL","publicationAbstract","pubdate_year","publicationYear","publicationMonth","String","pubdate_month","console","log","saveUserProfileInfo","fieldName","currentUser","formData","FormData","append","id","body","textResponse","success","user","setTimeout","getPanes","fundings","publications","patents","match","state","panes","pathId","params","currentUserId","length","isUser","gon","current_user","isPublic","push","menuItem","render","open","currentPublicationId","map","p","header","title","footerElements","date","format","publication_name","formatter","Intl","NumberFormat","style","currency","currentFundingId","f","sponsorName","_","keys","sponsor","filter","key","startDate","endDate","end_date","dateText","amountEl","text","Number","amount","sponsorText","other_sponsor","grant_type","awardRecipientTag","description","tagElement","award_recipient_id","currentPatentId","patentStatus","patent_statuses","find","ps","status","statusText","patentFilingDate","filing_date","utc","renderUpdateStatus","message","renderHeadline","canEdit","inputClassName","headline","profile_info","undefined","currentTarget","renderAbout","about","aboutEdit","aboutEditModalOpen","window","scrollTo","hasAbout","trim","hasHeadline","secondary","pointing","defaultProps","mapStateToProps","profiles","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport moment from 'moment';\nimport { Container, Grid, Tab, Menu, Button, Icon, Input, TextArea } from 'semantic-ui-react';\nimport { styles as modalStyles } from '../Modal'\n\nimport { authenticityToken } from '../../utils/requests';\nimport { COLORS } from '../../../../constants';\nimport { getUrlParameter } from '../../utils/requests';\nimport {\n  toggleFundingModal as toggleFundingModalAction,\n  togglePublicationModal as togglePublicationModalAction,\n  togglePatentModal as togglePatentModalAction,\n  fetchUser as fetchUserAction,\n  setCurrentUser as setCurrentUserAction,\n  fetchPublications as fetchPublicationsAction,\n  fetchPatents as fetchPatentsAction,\n  fetchFundings as fetchFundingsAction,\n} from '../../actions/profileActions';\nimport NewFundingModal from '../NewFundingModal';\nimport NewPublicationModal from '../NewPublicationModal';\nimport NewPatentModal from '../NewPatentModal';\nimport EmbeddedTextInput from '../EmbeddedTextInput';\nimport ProfileList from './ProfileList';\n\n\nconst styles = StyleSheet.create({\n  ProfilePage_mainPanes: {\n    marginTop: 0,\n  },\n  ProfilePage_menuItem: {\n    fontSize: '14px',\n    paddingLeft: '40px',\n    paddingRight: '40px',\n  },\n  ProfilePage_tabMenu: {\n\n  },\n  ProfilePage_input: {\n    width: '100%',\n    margin: 'auto',\n    padding: '10px',\n    height: '50px',\n    fontSize: '14px',\n    lineHeight: '20px',\n    borderStyle: 'solid',\n    borderColor: COLORS.gray,\n    borderRadius: '5px',\n    borderWidth: '1px',\n  },\n  ProfilePage_sectionHeader: {\n    color: COLORS.lightBlack,\n    fontSize: '14px',\n    fontWeight: 'bold',\n    marginTop: '80px',\n    marginBottom: '20px',\n    display: 'inline-block',\n  },\n  ProfilePage_addButton: {\n    fontSize: '14px',\n    padding: '10px 35px',\n    borderRadius: '4px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n  },\n  ProfilePage_leftAlign: {\n    marginTop: '40px',\n    textAlign: 'left',\n  },\n  ProfilePage_rightAlign: {\n    marginTop: '30px',\n    textAlign: 'right',\n  },\n  ProfilePage_editButton: {\n    color: COLORS.gray,\n    marginLeft: '10px',\n    fontSize: '14px',\n    display: 'inline-block',\n    cursor: 'pointer',\n  },\n  ProfilePage_importPublicationInput: {\n    display: 'inline-block',\n    width: '80%',\n  },\n  ProfilePage_importPublicationButton: {\n    fontSize: '14px',\n    borderRadius: '4px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    width: '20%',\n    display: 'inline-block',\n    margin: '0',\n    padding: '19px 0 19px',\n  },\n  ProfilePage_headline: {\n    fontSize: '18px',\n    color: COLORS.lightBlack,\n    height: '50px'\n  },\n  ProfilePage_about: {\n    fontSize: '14px',\n    height: '92px',\n    marginTop: '-10px'\n  },\n  ProfilePage_headlineUpdateStatus: {\n    fontSize: '12px',\n    fontWeight: 'light',\n    verticalAlign: 'middle',\n    lineHeight: '70px'\n  },\n  ProfilePage_aboutUpdateStatus: {\n    fontSize: '12px',\n    fontWeight: 'light',\n    verticalAlign: 'middle',\n    lineHeight: '50px'\n  },\n  ProfilePage_overviewInputCol: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginTop: '-7px',\n    marginBottom: '1em'\n  },\n  ProfilePage_overview: {\n    marginTop: '17px'\n  },\n  ProfilePage_disabledEmbeddedTextInput: {\n    ':hover' : {\n      borderColor: COLORS.white,\n    },\n  },\n  ProfilePage_awardTag: {\n    color: COLORS.gray,\n    fontSize: '10px',\n    fontWeight: 'bold',\n    paddingLeft: '1rem',\n    position: 'relative',\n    top: '16px',\n    ':nth-child(1n) > i': {\n      display: 'inline-block',\n      height: '15px',\n      width: '15px',\n      position: 'relative',\n      top: '2px',\n      left: '2px',\n    }\n  }\n});\n\nclass ProfilePage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabIndex: 0,\n      aboutEdit: false,\n      aboutEditModalOpen: false,\n      importingPublication: false,\n      publicationTitle: undefined,\n      publicationName: undefined,\n      publicationURL: undefined,\n      publicationAbstract: undefined,\n      publicationYear: undefined,\n      publicationMonth: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      fetchUser,\n      fetchPublications,\n      fetchPatents,\n      fetchFundings,\n      match,\n    } = this.props;\n\n    const pathId = match.params.id.split('-');\n    const currentUserId = pathId[pathId.length - 1];\n\n    await fetchUser(currentUserId);\n    await fetchPublications(currentUserId);\n    await fetchPatents(currentUserId);\n    await fetchFundings(currentUserId);\n\n    window.scrollTo(0, 0);\n  }\n\n  handleTabClick = (index) => {\n    this.setState({ activeTabIndex: index });\n  }\n\n  handleChange = (e, attr) => {\n    this.setState({ [attr]: e.target.value });\n  };\n\n  convertMonthName = (month) => {\n    return \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(month) / 3 + 1;\n  }\n\n  importURL = async (url) => {\n    const {\n      togglePublicationModal\n    } = this.props;\n\n    this.setState({\n      importingPublication: true,\n    });\n\n    const xmlParams = \"?report=xml&format=text\";\n\n    let normalUrl;\n    if (!url.endsWith(xmlParams)) {\n      normalUrl = url;\n      url += xmlParams;\n    } else {\n      normalUrl = url.split(xmlParams).join('');\n    }\n\n    if (!url.startsWith('http')) {\n      url = 'https://' + url;\n      normalUrl = 'https://' + normalUrl;\n    }\n\n    try {\n      const response = await fetch(`/import_pubmed?url=${encodeURI(url)}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n        }\n      });\n      const responseJson = await response.json();\n\n      this.setState({\n        publicationTitle: responseJson.article_title || responseJson.book_title,\n        publicationName: responseJson.journal_title || responseJson.publisher_name,\n        publicationURL: normalUrl,\n        publicationAbstract: responseJson.abstract,\n      });\n\n      if (responseJson.pubdate_year) {\n        this.setState({\n          publicationYear: responseJson.pubdate_year,\n          publicationMonth: String(this.convertMonthName(responseJson.pubdate_month)),\n        });\n      }\n\n      togglePublicationModal(true)\n    } catch (err) {\n      console.log(err);\n    }\n\n    this.setState({\n      importingPublication: false,\n    });\n  }\n\n  saveUserProfileInfo = async (fieldName, value) => {\n    const {\n      currentUser,\n      setCurrentUser\n    } = this.props;\n\n    this.setState({\n      [`${fieldName}Updating`]: true,\n      [`${fieldName}UpdateError`]: false\n    });\n\n    const formData = new FormData();\n    formData.append(fieldName, value);\n    formData.append('user_id', currentUser.id);\n\n    try {\n      const textResponse = await fetch(`/user_profile_infos/${currentUser.id}`, {\n        method: 'PUT',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n\n      const responseJson = await textResponse.json();\n      if (!responseJson.success) {\n        this.setState({\n          [`${fieldName}UpdateError`]: true,\n          [`${fieldName}Updating`]: false,\n        });\n      } else {\n        setCurrentUser(responseJson.user)\n        this.setState({\n          [`${fieldName}Updating`]: false,\n          [`${fieldName}UpdateSuccess`]: true,\n        });\n        setTimeout(() => this.setState({ [`${fieldName}UpdateSuccess`]: null }), 2500)\n      }\n    } catch(err) {\n      this.setState({ [`${fieldName}UpdateError`]: true });\n    }\n  }\n\n  getPanes = () => {\n    const {\n      fundings,\n      publications,\n      patents,\n      match,\n      togglePublicationModal,\n      togglePatentModal,\n      toggleFundingModal,\n      currentUser\n    } = this.props;\n    const {\n      importingPublication,\n      publicationURL,\n    } = this.state;\n\n    const panes = [];\n    const pathId = match.params.id.split('-');\n    const currentUserId = pathId[pathId.length - 1];\n    const isUser = gon.current_user && String(gon.current_user.id) === currentUserId;\n    const isPublic = getUrlParameter('public') === 'true';\n\n    if (publications.length > 0 || (isUser && !isPublic)) {\n      panes.push({\n        menuItem: <Menu.Item className={css(styles.ProfilePage_menuItem)} onClick={() => this.handleTabClick(0)} key=\"publications\">Publications ({publications.length})</Menu.Item>,\n        render: () => {\n          return (\n            <div>\n              {isUser && !isPublic && (\n                <div className={css(styles.ProfilePage_rightAlign)}>\n                  <div className={css(styles.ProfilePage_importPublicationInput)}>\n                    <Input\n                      className={css(styles.ProfilePage_input)}\n                      transparent\n                      fluid\n                      name='email'\n                      icon=\"linkify\"\n                      type=\"text\"\n                      value={publicationURL || ''}\n                      placeholder='Paste publication link (e.g. https://www.ncbi.nlm.nih.gov/pubmed/31254486)'\n                      onChange={(e) => this.handleChange(e, 'publicationURL')}\n                    />\n                  </div>\n                  <Button\n                    className={css(styles.ProfilePage_importPublicationButton)}\n                    disabled={importingPublication || !publicationURL || publicationURL.length === 0}\n                    onClick={() => this.importURL(publicationURL)}\n                  >\n                    Add\n                  </Button>\n                </div>)}\n              <ProfileList\n                editMethod={(id) => togglePublicationModal({ open: true, currentPublicationId: id })}\n                isUser={isUser}\n                itemName='Publications'\n                items={publications.map((p) => {\n                  return {\n                    header: p.title,\n                    body: p.abstract,\n                    url: p.url,\n                    id: p.id,\n                    footerElements: [p.date ? moment(p.date).format('MMM YYYY') : 'No Date', p.publication_name],\n                  };\n                })}\n              />\n            </div>\n          );\n        },\n      });\n    }\n\n    if (fundings.length > 0 || (isUser && !isPublic)) {\n      panes.push({\n        menuItem: <Menu.Item className={css(styles.ProfilePage_menuItem)} onClick={() => this.handleTabClick(1)} key=\"saved\">Funding ({fundings.length})</Menu.Item>,\n        render: () => {\n          // Create our number formatter.\n          const formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n          });\n\n          return (\n            <div>\n              {isUser && !isPublic && (\n                <div className={css(styles.ProfilePage_leftAlign)}>\n                  <Button className={css(styles.ProfilePage_addButton)} onClick={() => toggleFundingModal(true)}>Add Funding</Button>\n                </div>)}\n              <ProfileList\n                editMethod={(id) => toggleFundingModal({ open: true, currentFundingId: id })}\n                isUser={isUser}\n                itemName='Fundings'\n                items={fundings.map((f) => {\n                  const sponsorName = _.keys(f.sponsor).filter((key) => key.match('name'));\n                  const startDate = f.date ? moment(f.date).format('MMM YYYY') : 'No Date';\n                  const endDate = f.end_date ? moment(f.end_date).format('MMM YYYY') : 'Present';\n                  const dateText = f.date ? startDate + ' - ' + endDate : 'No Date';\n                  const amountEl = { text: `${formatter.format(Number(f.amount)).split('.')[0]}`, width: 3 };\n                  const sponsorText = (f.other_sponsor || (f.sponsor || {})[sponsorName]) + \" \" + (f.grant_type || '');\n\n                  const awardRecipientTag = (\n                    <div className={css(styles.ProfilePage_awardTag)}>\n                      Award Recipient\n                      <i className='icon-medal' />\n                    </div>\n                  );\n\n                  return {\n                    header: f.title,\n                    body: f.description,\n                    url: f.url,\n                    id: f.id,\n                    tagElement: f.award_recipient_id === currentUser.id ? awardRecipientTag : '',\n                    footerElements: [\n                      { width: 6, text: dateText },\n                      amountEl,\n                      { width: 7, text: sponsorText }\n                    ]\n                  };\n                })}\n              />\n            </div>\n          );\n        }\n      });\n    }\n\n    if (patents.length > 0 || (isUser && !isPublic)) {\n      panes.push({\n        menuItem: <Menu.Item className={css(styles.ProfilePage_menuItem)} onClick={() => this.handleTabClick(2)} key=\"partners\">Patents ({patents.length})</Menu.Item>,\n        render: () => {\n          return (\n            <div>\n              {isUser && !isPublic && (\n                <div className={css(styles.ProfilePage_leftAlign)}>\n                  <Button className={css(styles.ProfilePage_addButton)} onClick={() => togglePatentModal({ open: true })}>Add Patent</Button>\n                </div>)}\n              <ProfileList\n                isUser={isUser}\n                editMethod={(id) => togglePatentModal({ open: true, currentPatentId: id })}\n                itemName='Patents'\n                items={patents.map((p) => {\n                  const patentStatus = gon.patent_statuses.find(ps => ps.key === p.status);\n                  const statusText = 'Status: ' + (patentStatus ? patentStatus.text : 'None');\n                  const patentFilingDate = (p.filing_date ? 'Filing Date: ' + moment.utc(p.filing_date).format('MMM DD, YYYY') : 'No Date');\n                  return {\n                    header: p.title,\n                    body: p.abstract,\n                    url: p.url,\n                    id: p.id,\n                    footerElements: [\n                      { text: patentFilingDate, width: 6 },\n                      { text: statusText, width: 10 }\n                    ]\n                  };\n                })}\n              />\n            </div>\n          );\n        }\n      });\n    }\n\n    return panes;\n  };\n\n  renderUpdateStatus = (fieldName) => {\n    let message;\n    if (this.state[fieldName + 'UpdateError']) {\n        message = 'failed to save'\n    } else if (this.state[fieldName + 'Updating']) {\n        message = 'saving...'\n    } else if (this.state[fieldName + 'UpdateSuccess']) {\n        message = 'autosaved'\n    }\n\n    return <span className={css(styles[`ProfilePage_${fieldName}UpdateStatus`])}>{message}</span>;\n  }\n\n  renderHeadline = () => {\n    const {\n      currentUser\n    } = this.props;\n\n    const isPublic = getUrlParameter('public') === 'true';\n    const isUser = gon.current_user && gon.current_user.id === currentUser.id;\n    const canEdit = isUser && !isPublic && currentUser;\n    const inputClassName = css(\n      styles.ProfilePage_headline,\n      !canEdit && styles.ProfilePage_disabledEmbeddedTextInput\n    )\n\n    const headline = currentUser && currentUser.profile_info && currentUser.profile_info.headline ? currentUser.profile_info.headline : undefined;\n    return (\n      <Grid>\n        <Grid.Column width={12}>\n          <EmbeddedTextInput\n            className={inputClassName}\n            disabled={!canEdit}\n            maxLength=\"75\"\n            defaultValue={headline}\n            placeholder='Write a headline about your research'\n            onBlur={(e) => this.saveUserProfileInfo('headline', e.currentTarget.value)}\n          />\n        </Grid.Column>\n        {this.renderUpdateStatus('headline')}\n      </Grid>\n    );\n  }\n\n  renderAbout = () => {\n    const {\n      currentUser\n    } = this.props;\n\n    const isPublic = getUrlParameter('public') === 'true';\n    const isUser = gon.current_user && gon.current_user.id === currentUser.id;\n    const canEdit = isUser && !isPublic && currentUser;\n    const inputClassName = css(\n      styles.ProfilePage_about,\n      !canEdit && styles.ProfilePage_disabledEmbeddedTextInput\n    )\n    const about = currentUser && currentUser.profile_info && currentUser.profile_info.about ? currentUser.profile_info.about : '';\n\n    return (\n      <Grid>\n        <Grid.Column width={12} className={css(styles.ProfilePage_overviewInputCol)}>\n          <EmbeddedTextInput\n            className={inputClassName}\n            disabled={!canEdit}\n            maxLength=\"300\"\n            placeholder='Provide a short summary'\n            defaultValue={about}\n            onBlur={(e) => this.saveUserProfileInfo('about', e.currentTarget.value)}\n          />\n        </Grid.Column>\n        {this.renderUpdateStatus('about')}\n      </Grid>\n    );\n  }\n\n  render() {\n    const {\n      currentUser,\n      match,\n    } = this.props;\n    const {\n      activeTabIndex,\n      aboutEdit,\n      aboutEditModalOpen,\n      publicationTitle,\n      publicationName,\n      publicationURL,\n      publicationAbstract,\n      publicationYear,\n      publicationMonth,\n    } = this.state;\n\n    const pathId = match.params.id.split('-');\n    const currentUserId = pathId[pathId.length - 1];\n    const isUser = gon.current_user && String(gon.current_user.id) === currentUserId;\n    const isPublic = getUrlParameter('public') === 'true';\n    const hasAbout = (currentUser.profile_info && currentUser.profile_info.about && currentUser.profile_info.about.trim().length > 0);\n    const hasHeadline = (currentUser.profile_info && currentUser.profile_info.headline && currentUser.profile_info.headline.trim().length > 0);\n\n    return (\n      <Container>\n        <NewFundingModal title=\"Add Grants\" currentUserId={currentUser.id} />\n        <NewPublicationModal\n          title=\"Confirm Publication\"\n          currentUserId={currentUser.id}\n          publicationTitle={publicationTitle}\n          publicationName={publicationName}\n          publicationURL={publicationURL}\n          publicationAbstract={publicationAbstract}\n          publicationMonth={publicationMonth}\n          publicationYear={publicationYear}\n          clearUrl={() => {\n            this.setState({ publicationURL: '' })\n          }}\n        />\n        <NewPatentModal currentUserId={currentUser.id} />\n        {((isUser && !isPublic) || (currentUser && currentUser.profile_info && hasAbout && hasHeadline)) && (\n          <div className={css(styles.ProfilePage_overview)}>\n            {this.renderHeadline()}\n            {this.renderAbout()}\n          </div>\n        )}\n        <div className={css(styles.ProfilePage_mainPanes)}>\n          <Grid>\n            <Grid.Column width={12}>\n              <Tab className={css(styles.ProfilePage_tabMenu)} activeIndex={activeTabIndex} menu={{ secondary: true, pointing: true }} panes={this.getPanes()} />\n            </Grid.Column>\n          </Grid>\n        </div>\n      </Container>\n    );\n  }\n}\n\nProfilePage.defaultProps = {\n  fundings: [],\n  publications: [],\n  patents: [],\n  currentUser: {},\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.profiles.currentUser,\n    fundings: state.profiles.fundings,\n    publications: state.profiles.publications,\n    patents: state.profiles.patents,\n  };\n};\n\nconst mapDispatchToProps = {\n  toggleFundingModal: toggleFundingModalAction,\n  togglePublicationModal: togglePublicationModalAction,\n  togglePatentModal: togglePatentModalAction,\n  fetchUser: fetchUserAction,\n  setCurrentUser: setCurrentUserAction,\n  fetchPublications: fetchPublicationsAction,\n  fetchPatents: fetchPatentsAction,\n  fetchFundings: fetchFundingsAction,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}