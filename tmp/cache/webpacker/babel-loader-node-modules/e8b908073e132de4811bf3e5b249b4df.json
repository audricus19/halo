{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/Sidebar/ExpertiseEditModal.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Modal, Button, Dropdown } from 'semantic-ui-react';\nimport moment from 'moment';\nimport _, { debounce } from 'lodash';\nimport { COLORS } from '../../../../constants';\nimport { authenticityToken } from '../../utils/requests';\nvar styles = StyleSheet.create({\n  ExpertiseEditModal_modal: {\n    overflow: 'visible'\n  },\n  ExpertiseEditModal_modalHeader: {\n    fontWeight: 500,\n    fontSize: '24px',\n    lineHeight: '32px',\n    color: COLORS.lightBlack,\n    marginBottom: '32px'\n  },\n  ExpertiseEditModal_modalFieldLabel: {\n    textAlign: 'left',\n    margin: '10px 0 6px',\n    width: '100%',\n    fontSize: '12px',\n    fontWeight: 500,\n    lineHeight: '16px',\n    color: COLORS.labelGray\n  },\n  ExpertiseEditModal_modalTextInput: {\n    width: '100%',\n    margin: 'auto',\n    padding: '10px',\n    fontSize: '14px',\n    lineHeight: '20px',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    color: COLORS.lightBlack,\n    borderColor: COLORS.gray\n  },\n  ExpertiseEditModal_modalSubmitButton: {\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    display: 'inline-block',\n    height: '48px',\n    textAlign: 'center',\n    color: COLORS.white,\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    padding: '5px 50px'\n  },\n  ExpertiseEditModal_modalButtonHolder: {\n    width: '100%',\n    display: 'inline-block',\n    textAlign: 'right',\n    marginTop: '36px'\n  },\n  ExpertiseEditModal_modalCancelButton: {\n    height: '48px',\n    textAlign: 'center',\n    color: COLORS.lightBlack,\n    backgroundColor: COLORS.white,\n    display: 'inline-block',\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    padding: '5px 50px'\n  },\n  ExpertiseEditModal_dropdown: {\n    width: '100%',\n    display: 'flex',\n    height: '48px',\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    borderColor: COLORS.gray,\n    margin: 'auto',\n    fontSize: '14px'\n  },\n  ExpertiseEditModal_input: {\n    width: '100%',\n    margin: 'auto',\n    padding: '10px',\n    fontSize: '14px',\n    marginTop: '10px'\n  }\n});\n\nvar ExpertiseEditModal =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ExpertiseEditModal, _PureComponent);\n\n  function ExpertiseEditModal(props) {\n    var _this;\n\n    _classCallCheck(this, ExpertiseEditModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExpertiseEditModal).call(this, props));\n\n    _this.handleSubmitMessage = function _callee(e) {\n      var currentUser, _this$state, expertise, otherSpecialty, formData, expertiseResponse, responseJson;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currentUser = _this.props.currentUser;\n\n              if (currentUser) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              e.preventDefault();\n              _this$state = _this.state, expertise = _this$state.expertise, otherSpecialty = _this$state.otherSpecialty;\n\n              _this.setState({\n                expertiseEditModalLoading: true\n              });\n\n              formData = new FormData();\n              formData.append('area_of_expertise', expertise.map(function (exp) {\n                return exp.replace('other_specialty', otherSpecialty);\n              }));\n              _context.prev = 8;\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(fetch(\"/user_profile_infos/\".concat(currentUser.id), {\n                method: 'PUT',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 11:\n              expertiseResponse = _context.sent;\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(expertiseResponse.json());\n\n            case 14:\n              responseJson = _context.sent;\n\n              if (!responseJson.success) {\n                _this.setState({\n                  expertiseEditModalLoading: false\n                });\n              } else {\n                _this.setState({\n                  expertiseEditModalLoading: false\n                });\n\n                window.location.reload();\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](8);\n\n              _this.setState({\n                expertiseEditModalLoading: false\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[8, 18]]);\n    };\n\n    _this.handleExpertise = function (e, selection) {\n      _this.setState({\n        expertise: selection.value\n      });\n    };\n\n    _this.handleOtherSpecialty = function (e, selection) {\n      _this.setState({\n        otherSpecialty: e.target.value\n      });\n    };\n\n    var areasOfExpertise = props.currentUser && props.currentUser.profile_info ? props.currentUser.profile_info.area_of_expertise : '';\n    var parsedOtherSpecialty = '';\n\n    if (areasOfExpertise) {\n      var areasOfExpertiseArray = areasOfExpertise.split(',');\n      parsedOtherSpecialty = areasOfExpertiseArray.filter(function (exp) {\n        return !gon.areas_of_expertise.map(function (opt) {\n          return opt.text;\n        }).includes(exp);\n      });\n\n      if (parsedOtherSpecialty && parsedOtherSpecialty.length > 0) {\n        parsedOtherSpecialty = parsedOtherSpecialty[0];\n        areasOfExpertise = areasOfExpertise.replace(parsedOtherSpecialty, 'Other Research Area').split(',');\n      } else {\n        parsedOtherSpecialty = '';\n        areasOfExpertise = areasOfExpertise.split(',');\n      }\n\n      areasOfExpertise = areasOfExpertise.map(function (exp) {\n        return gon.areas_of_expertise_inverse_mapping[exp];\n      });\n    }\n\n    _this.state = {\n      expertiseEditModalLoading: false,\n      expertise: areasOfExpertise || '',\n      otherSpecialty: parsedOtherSpecialty || '',\n      expertiseOptions: gon.areas_of_expertise\n    };\n    return _this;\n  }\n\n  _createClass(ExpertiseEditModal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.currentUser && this.props.currentUser.profile_info && (!prevProps.currentUser || !prevProps.currentUser.profile_info || prevProps.currentUser.profile_info.area_of_expertise !== this.props.currentUser.profile_info.area_of_expertise)) {\n        var areasOfExpertise = this.props.currentUser.profile_info.area_of_expertise;\n        var parsedOtherSpecialty = '';\n\n        if (areasOfExpertise) {\n          var areasOfExpertiseArray = areasOfExpertise.split(',');\n          parsedOtherSpecialty = areasOfExpertiseArray.filter(function (exp) {\n            return !gon.areas_of_expertise.map(function (opt) {\n              return opt.text;\n            }).includes(exp);\n          });\n\n          if (parsedOtherSpecialty && parsedOtherSpecialty.length > 0) {\n            parsedOtherSpecialty = parsedOtherSpecialty[0];\n            areasOfExpertise = areasOfExpertise.replace(parsedOtherSpecialty, 'Other Research Area').split(',');\n          } else {\n            parsedOtherSpecialty = '';\n            areasOfExpertise = areasOfExpertise.split(',');\n          }\n\n          areasOfExpertise = areasOfExpertise.map(function (exp) {\n            return gon.areas_of_expertise_inverse_mapping[exp];\n          });\n        }\n\n        this.setState({\n          expertise: areasOfExpertise || '',\n          otherSpecialty: parsedOtherSpecialty || ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          degree = _this$props.degree,\n          closeModal = _this$props.closeModal;\n      var _this$state2 = this.state,\n          expertise = _this$state2.expertise,\n          expertiseOptions = _this$state2.expertiseOptions,\n          expertiseEditModalLoading = _this$state2.expertiseEditModalLoading,\n          otherSpecialty = _this$state2.otherSpecialty;\n      return React.createElement(Modal, {\n        open: open,\n        onClose: closeModal,\n        size: \"small\",\n        closeOnDimmerClick: false,\n        className: \"\".concat(css(styles.ExpertiseEditModal_modal), \" scrolling\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.ExpertiseEditModal_modalHeader),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"What are your areas of expertise?\"), React.createElement(\"div\", {\n        className: \"onboarding-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        className: css(styles.ExpertiseEditModal_dropdown),\n        icon: \"chevron down\",\n        placeholder: \"Area of expertise\",\n        fluid: true,\n        selection: true,\n        multiple: true,\n        value: expertise,\n        options: expertiseOptions,\n        onChange: this.handleExpertise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })), expertise.includes('other_specialty') && React.createElement(\"input\", {\n        className: css(styles.ExpertiseEditModal_input),\n        placeholder: \"Specify your specialty...\",\n        value: otherSpecialty,\n        onChange: this.handleOtherSpecialty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: css(styles.ExpertiseEditModal_modalButtonHolder),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: css(styles.ExpertiseEditModal_modalCancelButton),\n        type: \"submit\",\n        onClick: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: css(styles.ExpertiseEditModal_modalSubmitButton),\n        type: \"submit\",\n        disabled: !expertise || expertiseEditModalLoading || expertise.includes('other_specialty') && !otherSpecialty,\n        onClick: this.handleSubmitMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return ExpertiseEditModal;\n}(PureComponent);\n\nExpertiseEditModal.propTypes = {\n  education: PropTypes.object,\n  open: PropTypes.bool,\n  closeModal: PropTypes.func\n};\nexport default ExpertiseEditModal;","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/Sidebar/ExpertiseEditModal.jsx"],"names":["React","PureComponent","PropTypes","connect","css","StyleSheet","Modal","Button","Dropdown","moment","_","debounce","COLORS","authenticityToken","styles","create","ExpertiseEditModal_modal","overflow","ExpertiseEditModal_modalHeader","fontWeight","fontSize","lineHeight","color","lightBlack","marginBottom","ExpertiseEditModal_modalFieldLabel","textAlign","margin","width","labelGray","ExpertiseEditModal_modalTextInput","padding","borderStyle","borderWidth","borderColor","gray","ExpertiseEditModal_modalSubmitButton","background","lightBlue","backgroundImage","display","height","white","ExpertiseEditModal_modalButtonHolder","marginTop","ExpertiseEditModal_modalCancelButton","backgroundColor","ExpertiseEditModal_dropdown","alignItems","ExpertiseEditModal_input","ExpertiseEditModal","props","handleSubmitMessage","e","currentUser","preventDefault","state","expertise","otherSpecialty","setState","expertiseEditModalLoading","formData","FormData","append","map","exp","replace","fetch","id","method","body","headers","expertiseResponse","json","responseJson","success","window","location","reload","handleExpertise","selection","value","handleOtherSpecialty","target","areasOfExpertise","profile_info","area_of_expertise","parsedOtherSpecialty","areasOfExpertiseArray","split","filter","gon","areas_of_expertise","opt","text","includes","length","areas_of_expertise_inverse_mapping","expertiseOptions","prevProps","open","degree","closeModal","propTypes","education","object","bool","func"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Modal, Button, Dropdown } from 'semantic-ui-react';\nimport moment from 'moment';\nimport _, { debounce } from 'lodash';\nimport { COLORS } from '../../../../constants';\nimport {\n  authenticityToken,\n} from '../../utils/requests';\n\nconst styles = StyleSheet.create({\n  ExpertiseEditModal_modal: {\n    overflow: 'visible',\n  },\n  ExpertiseEditModal_modalHeader: {\n    fontWeight: 500,\n    fontSize: '24px',\n    lineHeight: '32px',\n    color: COLORS.lightBlack,\n    marginBottom: '32px',\n  },\n  ExpertiseEditModal_modalFieldLabel: {\n    textAlign: 'left',\n    margin: '10px 0 6px',\n    width: '100%',\n    fontSize: '12px',\n    fontWeight: 500,\n    lineHeight: '16px',\n    color: COLORS.labelGray,\n  },\n  ExpertiseEditModal_modalTextInput: {\n    width: '100%',\n    margin: 'auto',\n    padding: '10px',\n    fontSize: '14px',\n    lineHeight: '20px',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    color: COLORS.lightBlack,\n    borderColor: COLORS.gray,\n  },\n  ExpertiseEditModal_modalSubmitButton: {\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    display: 'inline-block',\n    height: '48px',\n    textAlign: 'center',\n    color: COLORS.white,\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    padding: '5px 50px',\n  },\n  ExpertiseEditModal_modalButtonHolder: {\n    width: '100%',\n    display: 'inline-block',\n    textAlign: 'right',\n    marginTop: '36px',\n  },\n  ExpertiseEditModal_modalCancelButton: {\n    height: '48px',\n    textAlign: 'center',\n    color: COLORS.lightBlack,\n    backgroundColor: COLORS.white,\n    display: 'inline-block',\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    padding: '5px 50px',\n  },\n  ExpertiseEditModal_dropdown: {\n    width: '100%',\n    display: 'flex',\n    height: '48px',\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    borderColor: COLORS.gray,\n    margin: 'auto',\n    fontSize: '14px',\n  },\n  ExpertiseEditModal_input: {\n    width: '100%',\n    margin: 'auto',\n    padding: '10px',\n    fontSize: '14px',\n    marginTop: '10px',\n  },\n});\n\nclass ExpertiseEditModal extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    let areasOfExpertise = props.currentUser && props.currentUser.profile_info ? props.currentUser.profile_info.area_of_expertise : '';\n    let parsedOtherSpecialty = '';\n    if (areasOfExpertise) {\n      const areasOfExpertiseArray = areasOfExpertise.split(',');\n      parsedOtherSpecialty = areasOfExpertiseArray.filter((exp) => !gon.areas_of_expertise.map((opt) => opt.text).includes(exp));\n\n      if (parsedOtherSpecialty && parsedOtherSpecialty.length > 0) {\n        parsedOtherSpecialty = parsedOtherSpecialty[0];\n        areasOfExpertise = areasOfExpertise.replace(parsedOtherSpecialty, 'Other Research Area').split(',');\n      } else {\n        parsedOtherSpecialty = '';\n        areasOfExpertise = areasOfExpertise.split(',');\n      }\n      areasOfExpertise = areasOfExpertise.map((exp) => gon.areas_of_expertise_inverse_mapping[exp]);\n    }\n\n    this.state = {\n      expertiseEditModalLoading: false,\n      expertise: areasOfExpertise || '',\n      otherSpecialty: parsedOtherSpecialty || '',\n      expertiseOptions: gon.areas_of_expertise,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentUser &&\n        this.props.currentUser.profile_info &&\n        (!prevProps.currentUser ||\n         !prevProps.currentUser.profile_info ||\n         prevProps.currentUser.profile_info.area_of_expertise !== this.props.currentUser.profile_info.area_of_expertise)) {\n\n      let areasOfExpertise = this.props.currentUser.profile_info.area_of_expertise;\n      let parsedOtherSpecialty = '';\n      if (areasOfExpertise) {\n        const areasOfExpertiseArray = areasOfExpertise.split(',');\n        parsedOtherSpecialty = areasOfExpertiseArray.filter((exp) => !gon.areas_of_expertise.map((opt) => opt.text).includes(exp));\n        if (parsedOtherSpecialty && parsedOtherSpecialty.length > 0) {\n          parsedOtherSpecialty = parsedOtherSpecialty[0];\n          areasOfExpertise = areasOfExpertise.replace(parsedOtherSpecialty, 'Other Research Area').split(',');\n        } else {\n          parsedOtherSpecialty = '';\n          areasOfExpertise = areasOfExpertise.split(',');\n        }\n\n        areasOfExpertise = areasOfExpertise.map((exp) => gon.areas_of_expertise_inverse_mapping[exp]);\n      }\n\n      this.setState({\n        expertise: areasOfExpertise || '',\n        otherSpecialty: parsedOtherSpecialty || '',\n      });\n    }\n  }\n\n  handleSubmitMessage = async (e) => {\n    const {\n      currentUser,\n    } = this.props;\n\n    if (!currentUser) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const {\n      expertise,\n      otherSpecialty,\n    } = this.state;\n\n    this.setState({\n      expertiseEditModalLoading: true,\n    });\n\n    const formData = new FormData();\n    formData.append('area_of_expertise', expertise.map((exp) => exp.replace('other_specialty', otherSpecialty)));\n    try {\n      const expertiseResponse = await fetch(\n        `/user_profile_infos/${currentUser.id}`,\n        {\n          method: 'PUT',\n          body: formData,\n          headers: {\n            'Accept': 'application/json',\n            'X-CSRF-Token': authenticityToken(),\n          }\n        }\n      );\n      const responseJson = await expertiseResponse.json();\n      if (!responseJson.success) {\n        this.setState({\n          expertiseEditModalLoading: false,\n        });\n      } else {\n        this.setState({\n          expertiseEditModalLoading: false,\n        });\n        window.location.reload();\n      }\n    } catch(err) {\n      this.setState({ expertiseEditModalLoading: false });\n    }\n  }\n\n  handleExpertise = (e, selection) => {\n    this.setState({\n      expertise: selection.value,\n    });\n  };\n\n  handleOtherSpecialty = (e, selection) => {\n    this.setState({\n      otherSpecialty: e.target.value,\n    })\n  };\n\n  render() {\n    const {\n      open,\n      degree,\n      closeModal,\n    } = this.props;\n\n    const {\n      expertise,\n      expertiseOptions,\n      expertiseEditModalLoading,\n      otherSpecialty,\n    } = this.state;\n\n    return (\n      <Modal\n        open={open}\n        onClose={closeModal}\n        size=\"small\"\n        closeOnDimmerClick={false}\n        className={`${css(styles.ExpertiseEditModal_modal)} scrolling`}\n      >\n        <Modal.Content>\n          <div className={css(styles.ExpertiseEditModal_modalHeader)}>\n            What are your areas of expertise?\n          </div>\n          <div className=\"onboarding-dropdown\">\n            <Dropdown\n              className={css(styles.ExpertiseEditModal_dropdown)}\n              icon=\"chevron down\"\n              placeholder='Area of expertise'\n              fluid\n              selection\n              multiple\n              value={expertise}\n              options={expertiseOptions}\n              onChange={this.handleExpertise}\n            />\n          </div>\n          {expertise.includes('other_specialty') &&\n            <input\n              className={css(styles.ExpertiseEditModal_input)}\n              placeholder='Specify your specialty...'\n              value={otherSpecialty}\n              onChange={this.handleOtherSpecialty}\n            />}\n          <div className={css(styles.ExpertiseEditModal_modalButtonHolder)}>\n            <Button\n              className={css(styles.ExpertiseEditModal_modalCancelButton)}\n              type='submit'\n              onClick={closeModal}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={css(styles.ExpertiseEditModal_modalSubmitButton)}\n              type='submit'\n              disabled={\n                !expertise ||\n                expertiseEditModalLoading ||\n                (expertise.includes('other_specialty') && !otherSpecialty)\n              }\n              onClick={this.handleSubmitMessage}\n            >\n              Save\n            </Button>\n          </div>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nExpertiseEditModal.propTypes = {\n  education: PropTypes.object,\n  open: PropTypes.bool,\n  closeModal: PropTypes.func,\n};\n\nexport default ExpertiseEditModal;\n"]},"metadata":{},"sourceType":"module"}