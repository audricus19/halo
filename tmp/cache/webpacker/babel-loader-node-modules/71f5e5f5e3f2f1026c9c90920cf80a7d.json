{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/NewPatentModal/NewPatentModal.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Modal, Button, Dropdown, Icon } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport styles from './styles';\nimport { styles as modalStyles } from '../Modal';\nimport { fetchPatents as fetchPatentsAction, togglePatentModal as togglePatentModalAction } from '../../actions/profileActions';\nimport { authenticityToken } from '../../utils/requests';\n\nvar yearOptions = _.range(new Date().getFullYear(), 1950, -1).map(function (year) {\n  return {\n    key: year,\n    text: year,\n    value: String(year)\n  };\n});\n\nmoment.locale('en');\nvar monthOptions = moment.monthsShort('-MMM-').map(function (month, index) {\n  return {\n    key: month,\n    text: month,\n    value: String(index + 1)\n  };\n});\n\nvar dayOptions = function dayOptions() {\n  var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n  var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2019;\n  var daysInMonth = moment(\"\".concat(year, \"-\").concat(month), 'YYYY-MM').daysInMonth();\n  return _.range(1, daysInMonth + 1).map(function (day, index) {\n    return {\n      key: day,\n      text: day,\n      value: String(day)\n    };\n  });\n};\n\nvar defaultState = {\n  patentModalLoading: false,\n  patentTitle: '',\n  patentUrl: '',\n  patentAbstract: '',\n  patentStatus: null,\n  patentFilingMonth: null,\n  patentFilingYear: null,\n  patentFilingDay: null\n};\n\nvar NewPatentModal =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(NewPatentModal, _PureComponent);\n\n  function NewPatentModal(props) {\n    var _this;\n\n    _classCallCheck(this, NewPatentModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPatentModal).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (prevProps.patentModalOpen) return; // skip updating state if modal already open\n\n      var _this$props = _this.props,\n          currentPatentId = _this$props.currentPatentId,\n          patents = _this$props.patents,\n          inEditMode = _this$props.inEditMode,\n          patentModalOpen = _this$props.patentModalOpen;\n\n      if (inEditMode) {\n        // when OPENING modal to edit patent\n        var patent = _.find(patents, ['id', currentPatentId]);\n\n        var date = moment.utc(patent.filing_date);\n\n        _this.setState({\n          patentTitle: patent.title,\n          patentUrl: patent.url,\n          patentAbstract: patent[\"abstract\"],\n          patentStatus: patent.status,\n          patentFilingMonth: date.format('M'),\n          patentFilingYear: date.format('YYYY'),\n          patentFilingDay: date.format('D')\n        });\n      } else if (!inEditMode) {\n        // when creating new patent\n        _this.setState(defaultState);\n      }\n    };\n\n    _this.handleSubmitPatent = function _callee(e) {\n      var _this$props2, fetchPatents, currentUserId, currentPatentId, togglePatentModal, inEditMode, _this$state, patentTitle, patentStatus, patentUrl, patentAbstract, patentFilingMonth, patentFilingYear, patentFilingDay, patentFilingDate, url, formData, patentResponse, responseJson;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props2 = _this.props, fetchPatents = _this$props2.fetchPatents, currentUserId = _this$props2.currentUserId, currentPatentId = _this$props2.currentPatentId, togglePatentModal = _this$props2.togglePatentModal, inEditMode = _this$props2.inEditMode;\n              e.preventDefault();\n              _this$state = _this.state, patentTitle = _this$state.patentTitle, patentStatus = _this$state.patentStatus, patentUrl = _this$state.patentUrl, patentAbstract = _this$state.patentAbstract, patentFilingMonth = _this$state.patentFilingMonth, patentFilingYear = _this$state.patentFilingYear, patentFilingDay = _this$state.patentFilingDay;\n\n              _this.setState({\n                patentModalLoading: true\n              });\n\n              patentFilingDate = \"\".concat(patentFilingYear, \"-\").concat(patentFilingMonth, \"-\").concat(patentFilingDay);\n              url = inEditMode ? \"/patents/\".concat(currentPatentId) : '/patents';\n              formData = new FormData();\n              formData.append('patent[patentTitle]', patentTitle);\n              formData.append('patent[patentStatus]', patentStatus);\n              formData.append('patent[patentUrl]', patentUrl);\n              formData.append('patent[patentAbstract]', patentAbstract);\n              formData.append('patent[patentFilingDate]', patentFilingDate);\n              _context.prev = 12;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: inEditMode ? 'PATCH' : 'POST',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 15:\n              patentResponse = _context.sent;\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(patentResponse.json());\n\n            case 18:\n              responseJson = _context.sent;\n\n              if (responseJson.success) {\n                _context.next = 23;\n                break;\n              }\n\n              _this.setState({\n                patentModalLoading: false\n              });\n\n              _context.next = 27;\n              break;\n\n            case 23:\n              _context.next = 25;\n              return _regeneratorRuntime.awrap(fetchPatents(currentUserId));\n\n            case 25:\n              _this.setState({\n                patentTitle: '',\n                patentUrl: '',\n                patentAbstract: '',\n                patentModalLoading: false,\n                patentFilingMonth: undefined,\n                patentFilingYear: undefined\n              });\n\n              togglePatentModal({\n                open: false\n              });\n\n            case 27:\n              _context.next = 32;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](12);\n\n              _this.setState({\n                patentModalLoading: false\n              });\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[12, 29]]);\n    };\n\n    _this.handleDeletePatent = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!confirm(\"Are you sure you want to delete that?\")) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"/patents/\".concat(_this.props.currentPatentId), {\n                method: 'DELETE',\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 3:\n              window.location.reload();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleChange = function (e, attr) {\n      _this.setState(_defineProperty({}, attr, e.target.value));\n    };\n\n    _this.handleDropdownChange = function (e, selection, attr) {\n      _this.setState(_defineProperty({}, attr, selection.value));\n    };\n\n    _this.getDayOptions = function (month, year) {\n      return dayOptions(month, year);\n    };\n\n    _this.renderPatentStatusField = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalFieldLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Dropdown, {\n        className: css(styles.NewPatentModal_statusDropdown),\n        icon: \"chevron down\",\n        fluid: true,\n        selection: true,\n        value: _this.state.patentStatus,\n        options: gon.patent_statuses,\n        onChange: function onChange(e, selection) {\n          return _this.handleDropdownChange(e, selection, 'patentStatus');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = defaultState;\n    return _this;\n  }\n\n  _createClass(NewPatentModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          title = _this$props3.title,\n          patentModalOpen = _this$props3.patentModalOpen,\n          togglePatentModal = _this$props3.togglePatentModal,\n          inEditMode = _this$props3.inEditMode;\n      var _this$state2 = this.state,\n          patentModalLoading = _this$state2.patentModalLoading,\n          patentTitle = _this$state2.patentTitle,\n          patentStatus = _this$state2.patentStatus,\n          patentUrl = _this$state2.patentUrl,\n          patentAbstract = _this$state2.patentAbstract,\n          patentFilingMonth = _this$state2.patentFilingMonth,\n          patentFilingYear = _this$state2.patentFilingYear,\n          patentFilingDay = _this$state2.patentFilingDay;\n      var validPatent = patentTitle && patentUrl && patentAbstract && patentFilingYear && patentFilingMonth && patentFilingDay && patentStatus;\n      return React.createElement(Modal, {\n        open: patentModalOpen,\n        onClose: function onClose() {\n          return togglePatentModal({\n            open: false\n          });\n        },\n        size: \"small\",\n        closeOnDimmerClick: false,\n        className: \"\".concat(css(styles.NewPatentModal_modal), \" scrolling\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalHeader),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, inEditMode ? 'Update Patent' : 'Add Patent'), this.renderPatentStatusField(), React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalFieldLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: css(styles.NewPatentModal_modalInput),\n        placeholder: \"e.g. Inducible DNA binding proteins and genome perturbation tools\",\n        type: \"text\",\n        value: patentTitle,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'patentTitle');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalFieldLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"URL\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: css(styles.NewPatentModal_modalInput),\n        placeholder: \"e.g. https://patents.google.com/patent/US20170166903A1\",\n        type: \"text\",\n        value: patentUrl,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'patentUrl');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalFieldLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Abstract\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: css(styles.NewPatentModal_modalTextArea),\n        rows: \"4\",\n        value: patentAbstract,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'patentAbstract');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalFieldLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Date Filed\"), React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_dateField),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        className: css(styles.NewPatentModal_dateDropdown),\n        icon: \"chevron down\",\n        fluid: true,\n        selection: true,\n        placeholder: \"Month\",\n        value: patentFilingMonth || '',\n        options: monthOptions,\n        onChange: function onChange(e, selection) {\n          return _this2.handleDropdownChange(e, selection, 'patentFilingMonth');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        className: css(styles.NewPatentModal_dateDropdown),\n        icon: \"chevron down\",\n        disabled: !patentFilingMonth,\n        fluid: true,\n        selection: true,\n        placeholder: \"Day\",\n        value: patentFilingDay || '',\n        options: this.getDayOptions(patentFilingMonth, patentFilingYear),\n        onChange: function onChange(e, selection) {\n          return _this2.handleDropdownChange(e, selection, 'patentFilingDay');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        className: css(styles.NewPatentModal_dateDropdown),\n        icon: \"chevron down\",\n        fluid: true,\n        placeholder: \"Year\",\n        selection: true,\n        value: patentFilingYear || '',\n        options: yearOptions,\n        onChange: function onChange(e, selection) {\n          return _this2.handleDropdownChange(e, selection, 'patentFilingYear');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css(styles.NewPatentModal_modalButtonHolder),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, inEditMode && React.createElement(Button, {\n        className: css(modalStyles.Modal_deleteButton),\n        type: \"submit\",\n        disabled: patentModalLoading,\n        onClick: this.handleDeletePatent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Button, {\n        className: css(styles.NewPatentModal_modalCancelButton),\n        type: \"submit\",\n        onClick: function onClick() {\n          return togglePatentModal({\n            open: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: css(styles.NewPatentModal_modalSubmitButton),\n        type: \"submit\",\n        disabled: patentModalLoading || !validPatent,\n        onClick: this.handleSubmitPatent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, inEditMode ? 'Update' : 'Submit'))));\n    }\n  }]);\n\n  return NewPatentModal;\n}(PureComponent);\n\nNewPatentModal.propTypes = {\n  title: PropTypes.string,\n  fetchPatents: PropTypes.func,\n  togglePatentModal: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    patentModalOpen: state.profiles.patentModalOpen,\n    currentPatentId: state.profiles.currentPatentId,\n    inEditMode: !!state.profiles.currentPatentId,\n    patents: state.profiles.patents\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchPatents: fetchPatentsAction,\n  togglePatentModal: togglePatentModalAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPatentModal);","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/NewPatentModal/NewPatentModal.jsx"],"names":["React","PureComponent","PropTypes","connect","css","StyleSheet","Modal","Button","Dropdown","Icon","_","DatePicker","moment","styles","modalStyles","fetchPatents","fetchPatentsAction","togglePatentModal","togglePatentModalAction","authenticityToken","yearOptions","range","Date","getFullYear","map","year","key","text","value","String","locale","monthOptions","monthsShort","month","index","dayOptions","daysInMonth","day","defaultState","patentModalLoading","patentTitle","patentUrl","patentAbstract","patentStatus","patentFilingMonth","patentFilingYear","patentFilingDay","NewPatentModal","props","componentDidUpdate","prevProps","patentModalOpen","currentPatentId","patents","inEditMode","patent","find","date","utc","filing_date","setState","title","url","status","format","handleSubmitPatent","e","currentUserId","preventDefault","state","patentFilingDate","formData","FormData","append","fetch","method","body","headers","patentResponse","json","responseJson","success","undefined","open","handleDeletePatent","confirm","window","location","reload","handleChange","attr","target","handleDropdownChange","selection","getDayOptions","renderPatentStatusField","NewPatentModal_modalFieldLabel","NewPatentModal_statusDropdown","gon","patent_statuses","validPatent","NewPatentModal_modal","NewPatentModal_modalHeader","NewPatentModal_modalInput","NewPatentModal_modalTextArea","NewPatentModal_dateField","NewPatentModal_dateDropdown","NewPatentModal_modalButtonHolder","Modal_deleteButton","NewPatentModal_modalCancelButton","NewPatentModal_modalSubmitButton","propTypes","string","func","mapStateToProps","profiles","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,WAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,IAAlC,QAA8C,mBAA9C;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASA,MAAM,IAAIC,WAAnB,QAAsC,UAAtC;AACA,SACEC,YAAY,IAAIC,kBADlB,EAEEC,iBAAiB,IAAIC,uBAFvB,QAGO,8BAHP;AAIA,SACEC,iBADF,QAEO,sBAFP;;AAKA,IAAMC,WAAW,GAAGV,CAAC,CAACW,KAAF,CAAQ,IAAIC,IAAJ,GAAWC,WAAX,EAAR,EAAkC,IAAlC,EAAwC,CAAC,CAAzC,EAA4CC,GAA5C,CAAgD,UAACC,IAAD,EAAU;AAC5E,SAAO;AACLC,IAAAA,GAAG,EAAED,IADA;AAELE,IAAAA,IAAI,EAAEF,IAFD;AAGLG,IAAAA,KAAK,EAAEC,MAAM,CAACJ,IAAD;AAHR,GAAP;AAKD,CANmB,CAApB;;AAQAb,MAAM,CAACkB,MAAP,CAAc,IAAd;AACA,IAAMC,YAAY,GAAGnB,MAAM,CAACoB,WAAP,CAAmB,OAAnB,EAA4BR,GAA5B,CAAgC,UAACS,KAAD,EAAQC,KAAR,EAAkB;AACrE,SAAO;AACLR,IAAAA,GAAG,EAAEO,KADA;AAELN,IAAAA,IAAI,EAAEM,KAFD;AAGLL,IAAAA,KAAK,EAAEC,MAAM,CAACK,KAAK,GAAG,CAAT;AAHR,GAAP;AAKD,CANoB,CAArB;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA6B;AAAA,MAA5BF,KAA4B,uEAApB,EAAoB;AAAA,MAAhBR,IAAgB,uEAAT,IAAS;AAC9C,MAAMW,WAAW,GAAGxB,MAAM,WAAIa,IAAJ,cAAYQ,KAAZ,GAAqB,SAArB,CAAN,CAAsCG,WAAtC,EAApB;AACA,SAAO1B,CAAC,CAACW,KAAF,CAAQ,CAAR,EAAWe,WAAW,GAAG,CAAzB,EAA4BZ,GAA5B,CAAgC,UAACa,GAAD,EAAMH,KAAN,EAAgB;AACrD,WAAO;AACLR,MAAAA,GAAG,EAAEW,GADA;AAELV,MAAAA,IAAI,EAAEU,GAFD;AAGLT,MAAAA,KAAK,EAAEC,MAAM,CAACQ,GAAD;AAHR,KAAP;AAKD,GANM,CAAP;AAOD,CATD;;AAWA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,KADD;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,cAAc,EAAE,EAJG;AAKnBC,EAAAA,YAAY,EAAE,IALK;AAMnBC,EAAAA,iBAAiB,EAAE,IANA;AAOnBC,EAAAA,gBAAgB,EAAE,IAPC;AAQnBC,EAAAA,eAAe,EAAE;AARE,CAArB;;IAWMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UAKnBC,kBALmB,GAKE,UAACC,SAAD,EAAe;AAClC,UAAIA,SAAS,CAACC,eAAd,EAA+B,OADG,CAElC;;AAFkC,wBAS9B,MAAKH,KATyB;AAAA,UAKhCI,eALgC,eAKhCA,eALgC;AAAA,UAMhCC,OANgC,eAMhCA,OANgC;AAAA,UAOhCC,UAPgC,eAOhCA,UAPgC;AAAA,UAQhCH,eARgC,eAQhCA,eARgC;;AAWlC,UAAGG,UAAH,EAAe;AACb;AACA,YAAMC,MAAM,GAAG7C,CAAC,CAAC8C,IAAF,CAAOH,OAAP,EAAgB,CAAC,IAAD,EAAOD,eAAP,CAAhB,CAAf;;AACA,YAAMK,IAAI,GAAG7C,MAAM,CAAC8C,GAAP,CAAWH,MAAM,CAACI,WAAlB,CAAb;;AAEA,cAAKC,QAAL,CAAc;AACZpB,UAAAA,WAAW,EAAEe,MAAM,CAACM,KADR;AAEZpB,UAAAA,SAAS,EAAEc,MAAM,CAACO,GAFN;AAGZpB,UAAAA,cAAc,EAAEa,MAAM,YAHV;AAIZZ,UAAAA,YAAY,EAAEY,MAAM,CAACQ,MAJT;AAKZnB,UAAAA,iBAAiB,EAAEa,IAAI,CAACO,MAAL,CAAY,GAAZ,CALP;AAMZnB,UAAAA,gBAAgB,EAAEY,IAAI,CAACO,MAAL,CAAY,MAAZ,CANN;AAOZlB,UAAAA,eAAe,EAAEW,IAAI,CAACO,MAAL,CAAY,GAAZ;AAPL,SAAd;AASD,OAdD,MAcO,IAAI,CAACV,UAAL,EAAiB;AACtB;AACA,cAAKM,QAAL,CAActB,YAAd;AACD;AACF,KAlCkB;;AAAA,UAoCnB2B,kBApCmB,GAoCE,iBAAOC,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAOf,MAAKlB,KAPU,EAEjBjC,YAFiB,gBAEjBA,YAFiB,EAGjBoD,aAHiB,gBAGjBA,aAHiB,EAIjBf,eAJiB,gBAIjBA,eAJiB,EAKjBnC,iBALiB,gBAKjBA,iBALiB,EAMjBqC,UANiB,gBAMjBA,UANiB;AASnBY,cAAAA,CAAC,CAACE,cAAF;AATmB,4BAmBf,MAAKC,KAnBU,EAYjB7B,WAZiB,eAYjBA,WAZiB,EAajBG,YAbiB,eAajBA,YAbiB,EAcjBF,SAdiB,eAcjBA,SAdiB,EAejBC,cAfiB,eAejBA,cAfiB,EAgBjBE,iBAhBiB,eAgBjBA,iBAhBiB,EAiBjBC,gBAjBiB,eAiBjBA,gBAjBiB,EAkBjBC,eAlBiB,eAkBjBA,eAlBiB;;AAqBnB,oBAAKc,QAAL,CAAc;AACZrB,gBAAAA,kBAAkB,EAAE;AADR,eAAd;;AAIM+B,cAAAA,gBAzBa,aAyBSzB,gBAzBT,cAyB6BD,iBAzB7B,cAyBkDE,eAzBlD;AA0BbgB,cAAAA,GA1Ba,GA0BNR,UAAU,sBAAeF,eAAf,IAAmC,UA1BvC;AA4BbmB,cAAAA,QA5Ba,GA4BF,IAAIC,QAAJ,EA5BE;AA6BnBD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCjC,WAAvC;AACA+B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,sBAAhB,EAAwC9B,YAAxC;AACA4B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,mBAAhB,EAAqChC,SAArC;AACA8B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,wBAAhB,EAA0C/B,cAA1C;AACA6B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,0BAAhB,EAA4CH,gBAA5C;AAjCmB;AAAA;AAAA,+CAoCYI,KAAK,CAACZ,GAAD,EAAM;AACtCa,gBAAAA,MAAM,EAAGrB,UAAU,GAAG,OAAH,GAAa,MADM;AAEtCsB,gBAAAA,IAAI,EAAEL,QAFgC;AAGtCM,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB1D,iBAAiB;AAF1B;AAH6B,eAAN,CApCjB;;AAAA;AAoCX2D,cAAAA,cApCW;AAAA;AAAA,+CA4CUA,cAAc,CAACC,IAAf,EA5CV;;AAAA;AA4CXC,cAAAA,YA5CW;;AAAA,kBA6CZA,YAAY,CAACC,OA7CD;AAAA;AAAA;AAAA;;AA8Cf,oBAAKrB,QAAL,CAAc;AACZrB,gBAAAA,kBAAkB,EAAE;AADR,eAAd;;AA9Ce;AAAA;;AAAA;AAAA;AAAA,+CAkDTxB,YAAY,CAACoD,aAAD,CAlDH;;AAAA;AAoDf,oBAAKP,QAAL,CAAc;AACZpB,gBAAAA,WAAW,EAAE,EADD;AAEZC,gBAAAA,SAAS,EAAE,EAFC;AAGZC,gBAAAA,cAAc,EAAE,EAHJ;AAIZH,gBAAAA,kBAAkB,EAAE,KAJR;AAKZK,gBAAAA,iBAAiB,EAAEsC,SALP;AAMZrC,gBAAAA,gBAAgB,EAAEqC;AANN,eAAd;;AAQAjE,cAAAA,iBAAiB,CAAC;AAAEkE,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAjB;;AA5De;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA+DjB,oBAAKvB,QAAL,CAAc;AAAErB,gBAAAA,kBAAkB,EAAE;AAAtB,eAAd;;AA/DiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApCF;;AAAA,UAuGnB6C,kBAvGmB,GAuGE;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfC,OAAO,CAAC,uCAAD,CADQ;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEXX,KAAK,oBAAa,MAAK1B,KAAL,CAAWI,eAAxB,GAA2C;AACpDuB,gBAAAA,MAAM,EAAE,QAD4C;AAEpDE,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB1D,iBAAiB;AAF1B;AAF2C,eAA3C,CAFM;;AAAA;AASjBmE,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvGF;;AAAA,UAoHnBC,YApHmB,GAoHJ,UAACvB,CAAD,EAAIwB,IAAJ,EAAa;AAC1B,YAAK9B,QAAL,qBAAiB8B,IAAjB,EAAwBxB,CAAC,CAACyB,MAAF,CAAS/D,KAAjC;AACD,KAtHkB;;AAAA,UAwHnBgE,oBAxHmB,GAwHI,UAAC1B,CAAD,EAAI2B,SAAJ,EAAeH,IAAf,EAAwB;AAC7C,YAAK9B,QAAL,qBAAiB8B,IAAjB,EAAwBG,SAAS,CAACjE,KAAlC;AACD,KA1HkB;;AAAA,UA4HnBkE,aA5HmB,GA4HH,UAAC7D,KAAD,EAAQR,IAAR,EAAiB;AAC/B,aAAOU,UAAU,CAACF,KAAD,EAAQR,IAAR,CAAjB;AACD,KA9HkB;;AAAA,UAgInBsE,uBAhImB,GAgIO,YAAM;AAC9B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE3F,GAAG,CAACS,MAAM,CAACmF,8BAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAE5F,GAAG,CAACS,MAAM,CAACoF,6BAAR,CADhB;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,KAAK,EAAE,MAAK5B,KAAL,CAAW1B,YALpB;AAME,QAAA,OAAO,EAAEuD,GAAG,CAACC,eANf;AAOE,QAAA,QAAQ,EAAE,kBAACjC,CAAD,EAAI2B,SAAJ;AAAA,iBAAkB,MAAKD,oBAAL,CAA0B1B,CAA1B,EAA6B2B,SAA7B,EAAwC,cAAxC,CAAlB;AAAA,SAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAcD,KA/IkB;;AAEjB,UAAKxB,KAAL,GAAa/B,YAAb;AAFiB;AAGlB;;;;6BA8IQ;AAAA;;AAAA,yBAMH,KAAKU,KANF;AAAA,UAELa,KAFK,gBAELA,KAFK;AAAA,UAGLV,eAHK,gBAGLA,eAHK;AAAA,UAILlC,iBAJK,gBAILA,iBAJK;AAAA,UAKLqC,UALK,gBAKLA,UALK;AAAA,yBAiBH,KAAKe,KAjBF;AAAA,UASL9B,kBATK,gBASLA,kBATK;AAAA,UAULC,WAVK,gBAULA,WAVK;AAAA,UAWLG,YAXK,gBAWLA,YAXK;AAAA,UAYLF,SAZK,gBAYLA,SAZK;AAAA,UAaLC,cAbK,gBAaLA,cAbK;AAAA,UAcLE,iBAdK,gBAcLA,iBAdK;AAAA,UAeLC,gBAfK,gBAeLA,gBAfK;AAAA,UAgBLC,eAhBK,gBAgBLA,eAhBK;AAmBP,UAAMsD,WAAW,GACf5D,WAAW,IACXC,SADA,IAEAC,cAFA,IAGAG,gBAHA,IAIAD,iBAJA,IAKAE,eALA,IAMAH,YAPF;AAUA,aACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAEQ,eADR;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMlC,iBAAiB,CAAC;AAAEkE,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAvB;AAAA,SAFX;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,kBAAkB,EAAE,KAJtB;AAKE,QAAA,SAAS,YAAK/E,GAAG,CAACS,MAAM,CAACwF,oBAAR,CAAR,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEjG,GAAG,CAACS,MAAM,CAACyF,0BAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyDhD,UAAU,GAAG,eAAH,GAAqB,YAAxF,CADF,EAGG,KAAKyC,uBAAL,EAHH,EAKE;AAAK,QAAA,SAAS,EAAE3F,GAAG,CAACS,MAAM,CAACmF,8BAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAE5F,GAAG,CAACS,MAAM,CAAC0F,yBAAR,CADhB;AAEE,QAAA,WAAW,EAAC,mEAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAE/D,WAJT;AAKE,QAAA,QAAQ,EAAE,kBAAC0B,CAAD;AAAA,iBAAO,MAAI,CAACuB,YAAL,CAAkBvB,CAAlB,EAAqB,aAArB,CAAP;AAAA,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,EAiBE;AAAK,QAAA,SAAS,EAAE9D,GAAG,CAACS,MAAM,CAACmF,8BAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAE5F,GAAG,CAACS,MAAM,CAAC0F,yBAAR,CADhB;AAEE,QAAA,WAAW,EAAC,wDAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAE9D,SAJT;AAKE,QAAA,QAAQ,EAAE,kBAACyB,CAAD;AAAA,iBAAO,MAAI,CAACuB,YAAL,CAAkBvB,CAAlB,EAAqB,WAArB,CAAP;AAAA,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApBF,EA6BE;AAAK,QAAA,SAAS,EAAE9D,GAAG,CAACS,MAAM,CAACmF,8BAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAE5F,GAAG,CAACS,MAAM,CAAC2F,4BAAR,CADhB;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,KAAK,EAAE9D,cAHT;AAIE,QAAA,QAAQ,EAAE,kBAACwB,CAAD;AAAA,iBAAO,MAAI,CAACuB,YAAL,CAAkBvB,CAAlB,EAAqB,gBAArB,CAAP;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhCF,EAwCE;AAAK,QAAA,SAAS,EAAE9D,GAAG,CAACS,MAAM,CAACmF,8BAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxCF,EA2CE;AAAK,QAAA,SAAS,EAAE5F,GAAG,CAACS,MAAM,CAAC4F,wBAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAErG,GAAG,CAACS,MAAM,CAAC6F,2BAAR,CADhB;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,WAAW,EAAC,OALd;AAME,QAAA,KAAK,EAAE9D,iBAAiB,IAAI,EAN9B;AAOE,QAAA,OAAO,EAAEb,YAPX;AAQE,QAAA,QAAQ,EAAE,kBAACmC,CAAD,EAAI2B,SAAJ;AAAA,iBAAkB,MAAI,CAACD,oBAAL,CAA0B1B,CAA1B,EAA6B2B,SAA7B,EAAwC,mBAAxC,CAAlB;AAAA,SARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAEzF,GAAG,CAACS,MAAM,CAAC6F,2BAAR,CADhB;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,QAAQ,EAAE,CAAC9D,iBAHb;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,SAAS,MALX;AAME,QAAA,WAAW,EAAC,KANd;AAOE,QAAA,KAAK,EAAEE,eAAe,IAAI,EAP5B;AAQE,QAAA,OAAO,EAAE,KAAKgD,aAAL,CAAmBlD,iBAAnB,EAAsCC,gBAAtC,CARX;AASE,QAAA,QAAQ,EAAE,kBAACqB,CAAD,EAAI2B,SAAJ;AAAA,iBAAkB,MAAI,CAACD,oBAAL,CAA0B1B,CAA1B,EAA6B2B,SAA7B,EAAwC,iBAAxC,CAAlB;AAAA,SATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAsBE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAEzF,GAAG,CAACS,MAAM,CAAC6F,2BAAR,CADhB;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,WAAW,EAAC,MAJd;AAKE,QAAA,SAAS,MALX;AAME,QAAA,KAAK,EAAE7D,gBAAgB,IAAI,EAN7B;AAOE,QAAA,OAAO,EAAEzB,WAPX;AAQE,QAAA,QAAQ,EAAE,kBAAC8C,CAAD,EAAI2B,SAAJ;AAAA,iBAAkB,MAAI,CAACD,oBAAL,CAA0B1B,CAA1B,EAA6B2B,SAA7B,EAAwC,kBAAxC,CAAlB;AAAA,SARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CA3CF,EA4EE;AAAK,QAAA,SAAS,EAAEzF,GAAG,CAACS,MAAM,CAAC8F,gCAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGrD,UAAU,IACT,oBAAC,MAAD;AACE,QAAA,SAAS,EAAElD,GAAG,CAACU,WAAW,CAAC8F,kBAAb,CADhB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAErE,kBAHZ;AAIE,QAAA,OAAO,EAAE,KAAK6C,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAYE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAEhF,GAAG,CAACS,MAAM,CAACgG,gCAAR,CADhB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM5F,iBAAiB,CAAC;AAAEkE,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAvB;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,EAoBE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAE/E,GAAG,CAACS,MAAM,CAACiG,gCAAR,CADhB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAEvE,kBAAkB,IAAI,CAAC6D,WAHnC;AAIE,QAAA,OAAO,EAAE,KAAKnC,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGX,UAAU,GAAG,QAAH,GAAc,QAN3B,CApBF,CA5EF,CAPF,CADF;AAoHD;;;;EAnS0BrD,a;;AAsS7B8C,cAAc,CAACgE,SAAf,GAA2B;AACzBlD,EAAAA,KAAK,EAAE3D,SAAS,CAAC8G,MADQ;AAEzBjG,EAAAA,YAAY,EAAEb,SAAS,CAAC+G,IAFC;AAGzBhG,EAAAA,iBAAiB,EAAEf,SAAS,CAAC+G;AAHJ,CAA3B;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAC7C,KAAD,EAAW;AACjC,SAAO;AACLlB,IAAAA,eAAe,EAAEkB,KAAK,CAAC8C,QAAN,CAAehE,eAD3B;AAELC,IAAAA,eAAe,EAAEiB,KAAK,CAAC8C,QAAN,CAAe/D,eAF3B;AAGLE,IAAAA,UAAU,EAAE,CAAC,CAACe,KAAK,CAAC8C,QAAN,CAAe/D,eAHxB;AAILC,IAAAA,OAAO,EAAEgB,KAAK,CAAC8C,QAAN,CAAe9D;AAJnB,GAAP;AAMD,CAPD;;AASA,IAAM+D,kBAAkB,GAAG;AACzBrG,EAAAA,YAAY,EAAEC,kBADW;AAEzBC,EAAAA,iBAAiB,EAAEC;AAFM,CAA3B;AAKA,eAAef,OAAO,CACpB+G,eADoB,EAEpBE,kBAFoB,CAAP,CAGbrE,cAHa,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Modal, Button, Dropdown, Icon } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport styles from './styles'\nimport { styles as modalStyles } from '../Modal'\nimport {\n  fetchPatents as fetchPatentsAction,\n  togglePatentModal as togglePatentModalAction,\n} from '../../actions/profileActions';\nimport {\n  authenticityToken,\n} from '../../utils/requests';\n\n\nconst yearOptions = _.range(new Date().getFullYear(), 1950, -1).map((year) => {\n  return {\n    key: year,\n    text: year,\n    value: String(year),\n  };\n});\n\nmoment.locale('en');\nconst monthOptions = moment.monthsShort('-MMM-').map((month, index) => {\n  return {\n    key: month,\n    text: month,\n    value: String(index + 1),\n  };\n});\n\nconst dayOptions = (month = 12, year = 2019) => {\n  const daysInMonth = moment(`${year}-${month}`, 'YYYY-MM').daysInMonth()\n  return _.range(1, daysInMonth + 1).map((day, index) => {\n    return {\n      key: day,\n      text: day,\n      value: String(day),\n    };\n  })\n};\n\nconst defaultState = {\n  patentModalLoading: false,\n  patentTitle: '',\n  patentUrl: '',\n  patentAbstract: '',\n  patentStatus: null,\n  patentFilingMonth: null,\n  patentFilingYear: null,\n  patentFilingDay: null,\n};\n\nclass NewPatentModal extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.patentModalOpen) return;\n    // skip updating state if modal already open\n\n    const {\n      currentPatentId,\n      patents,\n      inEditMode,\n      patentModalOpen\n    } = this.props;\n\n    if(inEditMode) {\n      // when OPENING modal to edit patent\n      const patent = _.find(patents, ['id', currentPatentId])\n      const date = moment.utc(patent.filing_date);\n\n      this.setState({\n        patentTitle: patent.title,\n        patentUrl: patent.url,\n        patentAbstract: patent.abstract,\n        patentStatus: patent.status,\n        patentFilingMonth: date.format('M'),\n        patentFilingYear: date.format('YYYY'),\n        patentFilingDay: date.format('D')\n      });\n    } else if (!inEditMode) {\n      // when creating new patent\n      this.setState(defaultState);\n    }\n  }\n\n  handleSubmitPatent = async (e) => {\n    const {\n      fetchPatents,\n      currentUserId,\n      currentPatentId,\n      togglePatentModal,\n      inEditMode\n    } = this.props;\n\n    e.preventDefault();\n\n    const {\n      patentTitle,\n      patentStatus,\n      patentUrl,\n      patentAbstract,\n      patentFilingMonth,\n      patentFilingYear,\n      patentFilingDay,\n    } = this.state;\n\n    this.setState({\n      patentModalLoading: true,\n    });\n\n    const patentFilingDate = `${patentFilingYear}-${patentFilingMonth}-${patentFilingDay}`;\n    const url = (inEditMode ? `/patents/${currentPatentId}` : '/patents')\n\n    const formData = new FormData();\n    formData.append('patent[patentTitle]', patentTitle);\n    formData.append('patent[patentStatus]', patentStatus);\n    formData.append('patent[patentUrl]', patentUrl);\n    formData.append('patent[patentAbstract]', patentAbstract);\n    formData.append('patent[patentFilingDate]', patentFilingDate);\n\n    try {\n      const patentResponse = await fetch(url, {\n        method: (inEditMode ? 'PATCH' : 'POST'),\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n      const responseJson = await patentResponse.json();\n      if (!responseJson.success) {\n        this.setState({\n          patentModalLoading: false,\n        });\n      } else {\n        await fetchPatents(currentUserId);\n\n        this.setState({\n          patentTitle: '',\n          patentUrl: '',\n          patentAbstract: '',\n          patentModalLoading: false,\n          patentFilingMonth: undefined,\n          patentFilingYear: undefined,\n        });\n        togglePatentModal({ open: false });\n      }\n    } catch(err) {\n      this.setState({ patentModalLoading: false });\n    }\n  }\n\n  handleDeletePatent = async () => {\n    if (confirm(\"Are you sure you want to delete that?\")) {\n      await fetch(`/patents/${this.props.currentPatentId}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n      window.location.reload();\n    }\n  }\n\n  handleChange = (e, attr) => {\n    this.setState({ [attr]: e.target.value });\n  };\n\n  handleDropdownChange = (e, selection, attr) => {\n    this.setState({ [attr]: selection.value });\n  };\n\n  getDayOptions = (month, year) => {\n    return dayOptions(month, year);\n  }\n\n  renderPatentStatusField = () => {\n    return (\n      <div>\n        <div className={css(styles.NewPatentModal_modalFieldLabel)}>Status</div>\n        <Dropdown\n          className={css(styles.NewPatentModal_statusDropdown)}\n          icon='chevron down'\n          fluid\n          selection\n          value={this.state.patentStatus}\n          options={gon.patent_statuses}\n          onChange={(e, selection) => this.handleDropdownChange(e, selection, 'patentStatus')}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const {\n      title,\n      patentModalOpen,\n      togglePatentModal,\n      inEditMode\n    } = this.props;\n\n    const {\n      patentModalLoading,\n      patentTitle,\n      patentStatus,\n      patentUrl,\n      patentAbstract,\n      patentFilingMonth,\n      patentFilingYear,\n      patentFilingDay,\n    } = this.state;\n\n    const validPatent = (\n      patentTitle &&\n      patentUrl &&\n      patentAbstract &&\n      patentFilingYear &&\n      patentFilingMonth &&\n      patentFilingDay &&\n      patentStatus\n    );\n\n    return (\n      <Modal\n        open={patentModalOpen}\n        onClose={() => togglePatentModal({ open: false })}\n        size=\"small\"\n        closeOnDimmerClick={false}\n        className={`${css(styles.NewPatentModal_modal)} scrolling`}\n      >\n        <Modal.Content>\n          <div className={css(styles.NewPatentModal_modalHeader)}>{inEditMode ? 'Update Patent' : 'Add Patent'}</div>\n\n          {this.renderPatentStatusField()}\n\n          <div className={css(styles.NewPatentModal_modalFieldLabel)}>\n            Title\n          </div>\n          <div>\n            <input\n              className={css(styles.NewPatentModal_modalInput)}\n              placeholder='e.g. Inducible DNA binding proteins and genome perturbation tools'\n              type='text'\n              value={patentTitle}\n              onChange={(e) => this.handleChange(e, 'patentTitle')}\n            />\n          </div>\n          <div className={css(styles.NewPatentModal_modalFieldLabel)}>\n            URL\n          </div>\n          <div>\n            <input\n              className={css(styles.NewPatentModal_modalInput)}\n              placeholder='e.g. https://patents.google.com/patent/US20170166903A1'\n              type='text'\n              value={patentUrl}\n              onChange={(e) => this.handleChange(e, 'patentUrl')}\n            />\n          </div>\n          <div className={css(styles.NewPatentModal_modalFieldLabel)}>\n            Abstract\n          </div>\n          <div>\n            <textarea\n              className={css(styles.NewPatentModal_modalTextArea)}\n              rows=\"4\"\n              value={patentAbstract}\n              onChange={(e) => this.handleChange(e, 'patentAbstract')}\n            />\n          </div>\n          <div className={css(styles.NewPatentModal_modalFieldLabel)}>\n            Date Filed\n          </div>\n          <div className={css(styles.NewPatentModal_dateField)}>\n            <Dropdown\n              className={css(styles.NewPatentModal_dateDropdown)}\n              icon='chevron down'\n              fluid\n              selection\n              placeholder=\"Month\"\n              value={patentFilingMonth || ''}\n              options={monthOptions}\n              onChange={(e, selection) => this.handleDropdownChange(e, selection, 'patentFilingMonth')}\n            />\n            <Dropdown\n              className={css(styles.NewPatentModal_dateDropdown)}\n              icon='chevron down'\n              disabled={!patentFilingMonth}\n              fluid\n              selection\n              placeholder=\"Day\"\n              value={patentFilingDay || ''}\n              options={this.getDayOptions(patentFilingMonth, patentFilingYear)}\n              onChange={(e, selection) => this.handleDropdownChange(e, selection, 'patentFilingDay')}\n            />\n            <Dropdown\n              className={css(styles.NewPatentModal_dateDropdown)}\n              icon='chevron down'\n              fluid\n              placeholder=\"Year\"\n              selection\n              value={patentFilingYear || ''}\n              options={yearOptions}\n              onChange={(e, selection) => this.handleDropdownChange(e, selection, 'patentFilingYear')}\n            />\n          </div>\n          <div className={css(styles.NewPatentModal_modalButtonHolder)}>\n            {inEditMode &&\n              <Button\n                className={css(modalStyles.Modal_deleteButton)}\n                type='submit'\n                disabled={patentModalLoading}\n                onClick={this.handleDeletePatent}\n                >\n                Delete\n              </Button>\n            }\n\n            <Button\n              className={css(styles.NewPatentModal_modalCancelButton)}\n              type='submit'\n              onClick={() => togglePatentModal({ open: false })}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              className={css(styles.NewPatentModal_modalSubmitButton)}\n              type='submit'\n              disabled={patentModalLoading || !validPatent}\n              onClick={this.handleSubmitPatent}\n            >\n              {inEditMode ? 'Update' : 'Submit'}\n            </Button>\n          </div>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nNewPatentModal.propTypes = {\n  title: PropTypes.string,\n  fetchPatents: PropTypes.func,\n  togglePatentModal: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    patentModalOpen: state.profiles.patentModalOpen,\n    currentPatentId: state.profiles.currentPatentId,\n    inEditMode: !!state.profiles.currentPatentId,\n    patents: state.profiles.patents\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchPatents: fetchPatentsAction,\n  togglePatentModal: togglePatentModalAction,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NewPatentModal);\n"]},"metadata":{},"sourceType":"module"}