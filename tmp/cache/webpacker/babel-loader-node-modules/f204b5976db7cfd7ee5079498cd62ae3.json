{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/Account/Account.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Container, Input, Button } from 'semantic-ui-react';\nimport Validator from 'validator';\nimport { COLORS } from '../../../../constants';\nimport { authenticityToken } from '../../utils/requests';\nvar styles = StyleSheet.create({\n  Account_innerContainer: {\n    width: '555px',\n    position: 'relative',\n    textAlign: 'left'\n  },\n  Account_inputGroup: {\n    display: 'inline-block',\n    width: '45%'\n  },\n  Account_inputGroupRight: {\n    display: 'inline-block',\n    width: '45%',\n    marginLeft: '10%'\n  },\n  Account_inlineSection: {},\n  Account_header: {\n    fontSize: '14px',\n    color: COLORS.lightBlack,\n    fontWeight: 'bold',\n    letterSpacing: '1px',\n    lineHeight: '20px',\n    marginBottom: '24px'\n  },\n  Account_label: {\n    lineHeight: '16px',\n    fontWeight: 500,\n    fontSize: '12px',\n    color: COLORS.darkGray,\n    marginBottom: '6px'\n  },\n  Account_error: {\n    color: COLORS.red,\n    fontSize: '12px',\n    fontWeight: 500,\n    marginTop: '-20px',\n    marginBottom: '20px'\n  },\n  Account_input: {\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    color: COLORS.darkGray,\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    height: '48px',\n    marginBottom: '24px',\n    padding: '14px 16px',\n    width: '100%'\n  },\n  Account_submitButton: {\n    padding: '12px 30px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    fontWeight: 500,\n    fontSize: '14px',\n    lineHeight: '24px',\n    \"float\": 'right'\n  },\n  Account_banner: {\n    textAlign: 'center',\n    width: '100%',\n    height: '48px',\n    backgroundColor: COLORS.green,\n    opacity: '0.8',\n    color: COLORS.white,\n    marginBottom: '24px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  Account_errorBanner: {\n    textAlign: 'center',\n    width: '100%',\n    height: '48px',\n    backgroundColor: COLORS.pink,\n    opacity: '0.8',\n    color: COLORS.white,\n    marginBottom: '24px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar Account =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Account, _PureComponent);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({\n        hasSubmitted: false,\n        success: false,\n        errorMessage: false\n      }, e.target.name, e.target.value));\n    };\n\n    _this.submitChanges = function _callee() {\n      var _this$state, firstName, lastName, email, phoneNumber, hasSubmitted, oldPassword, newPassword, repeatNewPassword, formData, updateResponse, responseJson;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, firstName = _this$state.firstName, lastName = _this$state.lastName, email = _this$state.email, phoneNumber = _this$state.phoneNumber, hasSubmitted = _this$state.hasSubmitted, oldPassword = _this$state.oldPassword, newPassword = _this$state.newPassword, repeatNewPassword = _this$state.repeatNewPassword;\n\n              _this.setState({\n                hasSubmitted: true\n              });\n\n              if (!(!_this.validEmail() || !_this.validPhone() || !_this.validNames())) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(newPassword.length > 0 && (oldPassword.length === 0 || !_this.validPassword()))) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _this.setState({\n                isSubmitting: true\n              });\n\n              formData = new FormData();\n              formData.append('first_name', firstName);\n              formData.append('last_name', lastName);\n              formData.append('email', email);\n\n              if (phoneNumber) {\n                formData.append('phone', phoneNumber);\n              }\n\n              if (oldPassword && oldPassword.length > 0 && newPassword && newPassword.length > 0) {\n                formData.append('old_password', oldPassword);\n                formData.append('password', newPassword);\n                formData.append('password_confirmation', repeatNewPassword);\n              }\n\n              _context.prev = 13;\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(fetch(\"/users/\".concat(gon.current_user.id), {\n                method: 'PUT',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 16:\n              updateResponse = _context.sent;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(updateResponse.json());\n\n            case 19:\n              responseJson = _context.sent;\n\n              if (!responseJson.success) {\n                _this.setState({\n                  isSubmitting: false,\n                  errorMessage: responseJson.errors\n                });\n              } else {\n                _this.setState({\n                  success: true,\n                  isSubmitting: false\n                });\n              }\n\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](13);\n\n              _this.setState({\n                isSubmitting: false,\n                errorMessage: 'Something went wrong. Try again.'\n              });\n\n            case 26:\n              _this.setState({\n                oldPassword: '',\n                newPassword: '',\n                repeatNewPassword: ''\n              });\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[13, 23]]);\n    };\n\n    _this.validNames = function () {\n      var _this$state2 = _this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName;\n      return (!gon.current_user.first_name || firstName.length > 0) && (!gon.current_user.last_name || lastName.length > 0);\n    };\n\n    _this.validEmail = function () {\n      var email = _this.state.email;\n      return email && Validator.isEmail(email);\n    };\n\n    _this.validPhone = function () {\n      var phoneNumber = _this.state.phoneNumber;\n      return !phoneNumber || Validator.isMobilePhone(phoneNumber);\n    };\n\n    _this.validPassword = function () {\n      var _this$state3 = _this.state,\n          newPassword = _this$state3.newPassword,\n          repeatNewPassword = _this$state3.repeatNewPassword;\n      return newPassword.length === 0 || Validator.isLength(newPassword, {\n        min: 6,\n        max: 30\n      }) && newPassword === repeatNewPassword;\n    };\n\n    if (!gon.current_user) {\n      window.location.href = \"/\";\n    }\n\n    _this.state = {\n      firstName: gon.current_user.first_name,\n      lastName: gon.current_user.last_name,\n      email: gon.current_user.email,\n      phoneNumber: gon.current_user.phone,\n      oldPassword: '',\n      newPassword: '',\n      repeatNewPassword: '',\n      hasSubmitted: false,\n      isSubmitting: false\n    };\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          firstName = _this$state4.firstName,\n          lastName = _this$state4.lastName,\n          email = _this$state4.email,\n          phoneNumber = _this$state4.phoneNumber,\n          hasSubmitted = _this$state4.hasSubmitted,\n          oldPassword = _this$state4.oldPassword,\n          newPassword = _this$state4.newPassword,\n          repeatNewPassword = _this$state4.repeatNewPassword,\n          isSubmitting = _this$state4.isSubmitting,\n          success = _this$state4.success,\n          errorMessage = _this$state4.errorMessage;\n\n      if (!gon.current_user) {\n        window.location.href = \"/\";\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: css(styles.Account_innerContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, success && React.createElement(\"div\", {\n        className: css(styles.Account_banner),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Successfully updated!\"), errorMessage && errorMessage.length > 0 && React.createElement(\"div\", {\n        className: css(styles.Account_errorBanner),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, errorMessage), React.createElement(\"div\", {\n        className: css(styles.Account_header),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"PERSONAL INFORMATION\"), React.createElement(\"div\", {\n        className: css(styles.Account_inlineSection),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.Account_inputGroup),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"firstName\",\n        type: \"text\",\n        value: firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css(styles.Account_inputGroupRight),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"lastName\",\n        type: \"text\",\n        value: lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }))), hasSubmitted && !this.validNames() && React.createElement(\"div\", {\n        className: css(styles.Account_error),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Please enter valid first and last name\"), React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"email\",\n        type: \"text\",\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), hasSubmitted && !this.validEmail() && React.createElement(\"div\", {\n        className: css(styles.Account_error),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Please enter a valid email\"), React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"phoneNumber\",\n        type: \"text\",\n        value: phoneNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), hasSubmitted && !this.validPhone() && React.createElement(\"div\", {\n        className: css(styles.Account_error),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Please enter a valid phone number\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: css(styles.Account_header),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"PASSWORD\"), React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Current\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"oldPassword\",\n        type: \"password\",\n        value: oldPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), hasSubmitted && newPassword.length > 0 && oldPassword.length === 0 && React.createElement(\"div\", {\n        className: css(styles.Account_error),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Please enter current password as well\"), React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"New Password\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"newPassword\",\n        type: \"password\",\n        value: newPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), hasSubmitted && !this.validPassword() && React.createElement(\"div\", {\n        className: css(styles.Account_error),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Please make sure new password is between 6 and 30 characters and matches below\"), React.createElement(\"div\", {\n        className: css(styles.Account_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Repeat New Password\"), React.createElement(\"input\", {\n        className: css(styles.Account_input),\n        onChange: this.handleChange,\n        name: \"repeatNewPassword\",\n        type: \"password\",\n        value: repeatNewPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.submitChanges,\n        disabled: isSubmitting,\n        className: css(styles.Account_submitButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Save Changes\")));\n    }\n  }]);\n\n  return Account;\n}(PureComponent);\n\nexport default Account;","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/Account/Account.jsx"],"names":["React","PureComponent","PropTypes","connect","css","StyleSheet","Container","Input","Button","Validator","COLORS","authenticityToken","styles","create","Account_innerContainer","width","position","textAlign","Account_inputGroup","display","Account_inputGroupRight","marginLeft","Account_inlineSection","Account_header","fontSize","color","lightBlack","fontWeight","letterSpacing","lineHeight","marginBottom","Account_label","darkGray","Account_error","red","marginTop","Account_input","borderStyle","borderWidth","height","padding","Account_submitButton","background","lightBlue","backgroundImage","white","Account_banner","backgroundColor","green","opacity","justifyContent","alignItems","Account_errorBanner","pink","Account","props","handleChange","e","setState","hasSubmitted","success","errorMessage","target","name","value","submitChanges","state","firstName","lastName","email","phoneNumber","oldPassword","newPassword","repeatNewPassword","validEmail","validPhone","validNames","length","validPassword","isSubmitting","formData","FormData","append","fetch","gon","current_user","id","method","body","headers","updateResponse","json","responseJson","errors","first_name","last_name","isEmail","isMobilePhone","isLength","min","max","window","location","href","phone"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Container, Input, Button } from 'semantic-ui-react';\nimport Validator from 'validator';\n\nimport { COLORS } from '../../../../constants';\nimport {\n  authenticityToken,\n} from '../../utils/requests';\n\nconst styles = StyleSheet.create({\n  Account_innerContainer: {\n    width: '555px',\n    position: 'relative',\n    textAlign: 'left',\n  },\n  Account_inputGroup: {\n    display: 'inline-block',\n    width: '45%',\n  },\n  Account_inputGroupRight: {\n    display: 'inline-block',\n    width: '45%',\n    marginLeft: '10%',\n  },\n  Account_inlineSection: {\n\n  },\n  Account_header: {\n    fontSize: '14px',\n    color: COLORS.lightBlack,\n    fontWeight: 'bold',\n    letterSpacing: '1px',\n    lineHeight: '20px',\n    marginBottom: '24px',\n  },\n  Account_label: {\n    lineHeight: '16px',\n    fontWeight: 500,\n    fontSize: '12px',\n    color: COLORS.darkGray,\n    marginBottom: '6px',\n  },\n  Account_error: {\n    color: COLORS.red,\n    fontSize: '12px',\n    fontWeight: 500,\n    marginTop: '-20px',\n    marginBottom: '20px',\n  },\n  Account_input: {\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    color: COLORS.darkGray,\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    height: '48px',\n    marginBottom: '24px',\n    padding: '14px 16px',\n    width: '100%',\n  },\n  Account_submitButton: {\n    padding: '12px 30px',\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    color: COLORS.white,\n    fontWeight: 500,\n    fontSize: '14px',\n    lineHeight: '24px',\n    float: 'right',\n  },\n  Account_banner: {\n    textAlign: 'center',\n    width: '100%',\n    height: '48px',\n    backgroundColor: COLORS.green,\n    opacity: '0.8',\n    color: COLORS.white,\n    marginBottom: '24px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  Account_errorBanner: {\n    textAlign: 'center',\n    width: '100%',\n    height: '48px',\n    backgroundColor: COLORS.pink,\n    opacity: '0.8',\n    color: COLORS.white,\n    marginBottom: '24px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nclass Account extends PureComponent {\n  constructor(props) {\n    super(props);\n    if (!gon.current_user) {\n      window.location.href = \"/\";\n    }\n\n    this.state = {\n      firstName: gon.current_user.first_name,\n      lastName: gon.current_user.last_name,\n      email: gon.current_user.email,\n      phoneNumber: gon.current_user.phone,\n      oldPassword: '',\n      newPassword: '',\n      repeatNewPassword: '',\n      hasSubmitted: false,\n      isSubmitting: false,\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      hasSubmitted: false,\n      success: false,\n      errorMessage: false,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  submitChanges = async () => {\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      hasSubmitted,\n      oldPassword,\n      newPassword,\n      repeatNewPassword,\n    } = this.state;\n\n    this.setState({ hasSubmitted: true });\n\n    if (!this.validEmail() || !this.validPhone() || !this.validNames()) {\n      return;\n    }\n\n    if (newPassword.length > 0 && (oldPassword.length === 0 || !this.validPassword())) {\n      return;\n    }\n\n    this.setState({\n      isSubmitting: true,\n    });\n\n    const formData = new FormData();\n    formData.append('first_name', firstName);\n    formData.append('last_name', lastName);\n    formData.append('email', email);\n    if (phoneNumber) {\n      formData.append('phone', phoneNumber);\n    }\n    if (oldPassword && oldPassword.length > 0 && newPassword && newPassword.length > 0) {\n      formData.append('old_password', oldPassword);\n      formData.append('password', newPassword);\n      formData.append('password_confirmation', repeatNewPassword);\n    }\n\n    try {\n      const updateResponse = await fetch(`/users/${gon.current_user.id}`, {\n        method: 'PUT',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n      const responseJson = await updateResponse.json();\n      if (!responseJson.success) {\n        this.setState({\n          isSubmitting: false,\n          errorMessage: responseJson.errors,\n        });\n      } else {\n        this.setState({\n          success: true,\n          isSubmitting: false,\n        });\n      }\n    } catch(err) {\n      this.setState({\n        isSubmitting: false,\n        errorMessage: 'Something went wrong. Try again.',\n      });\n    }\n    this.setState({\n      oldPassword: '',\n      newPassword: '',\n      repeatNewPassword: '',\n    });\n  };\n\n  validNames = () => {\n    const { firstName, lastName } = this.state;\n    return (!gon.current_user.first_name || firstName.length > 0) &&\n      (!gon.current_user.last_name || lastName.length > 0);\n  };\n\n  validEmail = () => {\n    const { email } = this.state;\n    return email && Validator.isEmail(email);\n  };\n\n  validPhone = () => {\n    const { phoneNumber } = this.state;\n    return !phoneNumber || Validator.isMobilePhone(phoneNumber);\n  };\n\n  validPassword = () => {\n    const { newPassword, repeatNewPassword } = this.state;\n    return newPassword.length === 0 || Validator.isLength(newPassword, { min: 6, max: 30 }) && newPassword === repeatNewPassword;\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      hasSubmitted,\n      oldPassword,\n      newPassword,\n      repeatNewPassword,\n      isSubmitting,\n      success,\n      errorMessage,\n    } = this.state;\n\n    if (!gon.current_user) {\n      window.location.href = \"/\";\n    }\n\n    return (\n      <Container>\n        <br />\n        <div className={css(styles.Account_innerContainer)}>\n          {success &&\n            <div className={css(styles.Account_banner)}>\n              Successfully updated!\n            </div>}\n          {errorMessage && errorMessage.length > 0 &&\n            <div className={css(styles.Account_errorBanner)}>\n              {errorMessage}\n            </div>\n          }\n          <div className={css(styles.Account_header)}>PERSONAL INFORMATION</div>\n          <div className={css(styles.Account_inlineSection)}>\n            <div className={css(styles.Account_inputGroup)}>\n              <div className={css(styles.Account_label)}>First Name</div>\n              <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"firstName\" type=\"text\" value={firstName} />\n            </div>\n            <div className={css(styles.Account_inputGroupRight)}>\n              <div className={css(styles.Account_label)}>Last Name</div>\n              <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"lastName\" type=\"text\" value={lastName} />\n            </div>\n          </div>\n          {hasSubmitted && !this.validNames() && <div className={css(styles.Account_error)}>Please enter valid first and last name</div>}\n          <div className={css(styles.Account_label)}>Email</div>\n          <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"email\" type=\"text\" value={email} />\n          {hasSubmitted && !this.validEmail() && <div className={css(styles.Account_error)}>Please enter a valid email</div>}\n          <div className={css(styles.Account_label)}>Phone Number</div>\n          <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"phoneNumber\" type=\"text\" value={phoneNumber} />\n          {hasSubmitted && !this.validPhone() && <div className={css(styles.Account_error)}>Please enter a valid phone number</div>}\n          <br />\n          <br />\n          <br />\n          <div className={css(styles.Account_header)}>PASSWORD</div>\n          <div className={css(styles.Account_label)}>Current</div>\n          <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"oldPassword\" type=\"password\" value={oldPassword} />\n          {hasSubmitted && newPassword.length > 0 && oldPassword.length === 0 && <div className={css(styles.Account_error)}>Please enter current password as well</div>}\n          <div className={css(styles.Account_label)}>New Password</div>\n          <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"newPassword\" type=\"password\" value={newPassword} />\n          {hasSubmitted && !this.validPassword() && <div className={css(styles.Account_error)}>Please make sure new password is between 6 and 30 characters and matches below</div>}\n          <div className={css(styles.Account_label)}>Repeat New Password</div>\n          <input className={css(styles.Account_input)} onChange={this.handleChange} name=\"repeatNewPassword\" type=\"password\" value={repeatNewPassword} />\n          <br />\n          <Button\n            onClick={this.submitChanges}\n            disabled={isSubmitting}\n            className={css(styles.Account_submitButton)}\n          >\n            Save Changes\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}