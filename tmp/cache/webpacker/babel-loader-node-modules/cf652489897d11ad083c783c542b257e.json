{"ast":null,"code":"import { WINDOW_DIMENSIONS } from '../../../constants';\nvar MOBILE = WINDOW_DIMENSIONS.MOBILE,\n    TABLET = WINDOW_DIMENSIONS.TABLET,\n    TABLET_LANDSCAPE = WINDOW_DIMENSIONS.TABLET_LANDSCAPE;\nexport var UPDATE_WINDOW_DIMENSION = 'UPDATE_WINDOW_DIMENSION';\nexport var UPDATE_SCROLL_POSITION = 'UPDATE_SCROLL_POSITION';\nvar WINDOW_HEIGHT = window.outerHeight * 0.50;\nvar NAV_BAR_HEIGHT = 100;\nexport var calculateScrollPercent = function calculateScrollPercent() {\n  var scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\n  return window.scrollY / scrollHeight * 100;\n};\nexport var updateWindowDimension = function updateWindowDimension() {\n  return function (dispatch) {\n    return dispatch({\n      type: UPDATE_WINDOW_DIMENSION,\n      payload: {\n        width: window.outerWidth,\n        height: window.outerHeight,\n        isMobile: window.outerWidth <= MOBILE,\n        isTablet: window.outerWidth <= TABLET,\n        isTabletLandscape: window.outerWidth <= TABLET_LANDSCAPE\n      }\n    });\n  };\n};\nexport var updateScrollPosition = function updateScrollPosition() {\n  return function (dispatch) {\n    return dispatch({\n      type: UPDATE_SCROLL_POSITION,\n      payload: {\n        scrollPercent: calculateScrollPercent(),\n        shouldRevealStickyNavBar: window.scrollY >= NAV_BAR_HEIGHT,\n        hasScrolledBelowFold: window.scrollY >= WINDOW_HEIGHT\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/actions/windowDimensionsActions.jsx"],"names":["WINDOW_DIMENSIONS","MOBILE","TABLET","TABLET_LANDSCAPE","UPDATE_WINDOW_DIMENSION","UPDATE_SCROLL_POSITION","WINDOW_HEIGHT","window","outerHeight","NAV_BAR_HEIGHT","calculateScrollPercent","scrollHeight","document","documentElement","innerHeight","scrollY","updateWindowDimension","dispatch","type","payload","width","outerWidth","height","isMobile","isTablet","isTabletLandscape","updateScrollPosition","scrollPercent","shouldRevealStickyNavBar","hasScrolledBelowFold"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,oBAAlC;IAEQC,M,GAAqCD,iB,CAArCC,M;IAAQC,M,GAA6BF,iB,CAA7BE,M;IAAQC,gB,GAAqBH,iB,CAArBG,gB;AAExB,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AAEP,IAAMC,aAAa,GAAGC,MAAM,CAACC,WAAP,GAAqB,IAA3C;AACA,IAAMC,cAAc,GAAG,GAAvB;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AAC1C,MAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAAzB,GAAwCJ,MAAM,CAACO,WAApE;AACA,SAAQP,MAAM,CAACQ,OAAP,GAAiBJ,YAAlB,GAAkC,GAAzC;AACD,CAHM;AAKP,OAAO,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SACnC,UAACC,QAAD;AAAA,WACEA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,uBADC;AAEPe,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAEb,MAAM,CAACc,UADP;AAEPC,QAAAA,MAAM,EAAEf,MAAM,CAACC,WAFR;AAGPe,QAAAA,QAAQ,EAAEhB,MAAM,CAACc,UAAP,IAAqBpB,MAHxB;AAIPuB,QAAAA,QAAQ,EAAEjB,MAAM,CAACc,UAAP,IAAqBnB,MAJxB;AAKPuB,QAAAA,iBAAiB,EAAElB,MAAM,CAACc,UAAP,IAAqBlB;AALjC;AAFF,KAAD,CADV;AAAA,GADmC;AAAA,CAA9B;AAaP,OAAO,IAAMuB,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAClC,UAACT,QAAD;AAAA,WACEA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,sBADC;AAEPc,MAAAA,OAAO,EAAE;AACPQ,QAAAA,aAAa,EAAEjB,sBAAsB,EAD9B;AAEPkB,QAAAA,wBAAwB,EAAErB,MAAM,CAACQ,OAAP,IAAkBN,cAFrC;AAGPoB,QAAAA,oBAAoB,EAAEtB,MAAM,CAACQ,OAAP,IAAkBT;AAHjC;AAFF,KAAD,CADV;AAAA,GADkC;AAAA,CAA7B","sourcesContent":["import { WINDOW_DIMENSIONS } from '../../../constants';\n\nconst { MOBILE, TABLET, TABLET_LANDSCAPE } = WINDOW_DIMENSIONS;\n\nexport const UPDATE_WINDOW_DIMENSION = 'UPDATE_WINDOW_DIMENSION';\nexport const UPDATE_SCROLL_POSITION = 'UPDATE_SCROLL_POSITION';\n\nconst WINDOW_HEIGHT = window.outerHeight * 0.50;\nconst NAV_BAR_HEIGHT = 100;\n\nexport const calculateScrollPercent = () => {\n  const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\n  return (window.scrollY / scrollHeight) * 100;\n}\n\nexport const updateWindowDimension = () =>\n  (dispatch) =>\n    dispatch({\n      type: UPDATE_WINDOW_DIMENSION,\n      payload: {\n        width: window.outerWidth,\n        height: window.outerHeight,\n        isMobile: window.outerWidth <= MOBILE,\n        isTablet: window.outerWidth <= TABLET,\n        isTabletLandscape: window.outerWidth <= TABLET_LANDSCAPE,\n      },\n    });\n\nexport const updateScrollPosition = () =>\n  (dispatch) =>\n    dispatch({\n      type: UPDATE_SCROLL_POSITION,\n      payload: {\n        scrollPercent: calculateScrollPercent(),\n        shouldRevealStickyNavBar: window.scrollY >= NAV_BAR_HEIGHT,\n        hasScrolledBelowFold: window.scrollY >= WINDOW_HEIGHT,\n      },\n    });\n"]},"metadata":{},"sourceType":"module"}