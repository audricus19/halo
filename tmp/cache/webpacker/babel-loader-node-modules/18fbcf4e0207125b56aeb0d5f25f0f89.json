{"ast":null,"code":"var _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/SearchBar/SearchBar.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Button, Container, Search, Grid, Header, Segment, Label, Form } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { searchTerm as searchTermAction } from '../../actions/defaultActions';\nvar styles = StyleSheet.create({\n  SearchBar_searchbar: {\n    width: '100%',\n    fontSize: '14px'\n  }\n});\n\nvar resultRenderer = function resultRenderer(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      company = _ref.company;\n  return React.createElement(\"div\", {\n    key: \"result-\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, company, \": \", title);\n};\n\nresultRenderer.propTypes = {\n  title: PropTypes.string\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SearchBar, _PureComponent);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.resetComponent = function () {\n      _this.setState({\n        isLoading: false,\n        results: gon.rfp_results.map(function (result) {\n          return _this.extractRFPResult(result);\n        }),\n        value: ''\n      });\n    };\n\n    _this.extractRFPResult = function (result) {\n      return {\n        key: \"rfp-\".concat(result.id),\n        title: result.title,\n        company: (result.company || {}).company_name\n      };\n    };\n\n    _this.handleResultSelect = function (e, _ref2) {\n      var result = _ref2.result;\n      var _this$props = _this.props,\n          searchTerm = _this$props.searchTerm,\n          onSelect = _this$props.onSelect;\n\n      _this.setState({\n        value: result.title\n      });\n\n      onSelect ? onSelect(result.id) : searchTerm(result.title);\n    };\n\n    _this.handleSearchChange = function (e, _ref3) {\n      var value = _ref3.value;\n      var searchTerm = _this.props.searchTerm;\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      });\n\n      if (value.length === 0) {\n        _this.resetComponent();\n\n        searchTerm('');\n      }\n\n      setTimeout(function () {\n        if (_this.state.value.length < 1) return _this.resetComponent();\n        var re = new RegExp(_.escapeRegExp(_this.state.value), 'i');\n\n        var isMatch = function isMatch(result) {\n          return re.test(result.title) || re.test(result.company.company_name);\n        };\n\n        _this.setState({\n          isLoading: false,\n          results: _.filter(gon.rfp_results, isMatch).map(function (result) {\n            return _this.extractRFPResult(result);\n          })\n        });\n      }, 300);\n    };\n\n    _this.handleSearch = function () {\n      var value = _this.state.value;\n      var searchTerm = _this.props.searchTerm;\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetComponent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n      var width = this.props.width;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Search, {\n        className: \"searchbar\",\n        style: {\n          fontSize: '14px'\n        },\n        fluid: true,\n        input: {\n          icon: 'search',\n          iconPosition: 'left',\n          input: 'text'\n        },\n        loading: isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.handleSearchChange, 500, {\n          leading: true,\n          trailing: true\n        }),\n        results: results,\n        placeholder: \"Find opportunities...\",\n        resultRenderer: resultRenderer,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        style: {\n          visibility: 'hidden',\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchBar;\n}(PureComponent);\n\nSearchBar.propTypes = {\n  width: PropTypes.number,\n  onSelect: PropTypes.func\n};\nSearchBar.defaultProps = {\n  width: 12\n};\nvar mapDispatchToProps = {\n  searchTerm: searchTermAction\n};\nexport default connect(null, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/components/SearchBar/SearchBar.jsx"],"names":["React","PureComponent","connect","PropTypes","css","StyleSheet","Button","Container","Search","Grid","Header","Segment","Label","Form","Link","_","searchTerm","searchTermAction","styles","create","SearchBar_searchbar","width","fontSize","resultRenderer","id","title","company","propTypes","string","SearchBar","resetComponent","setState","isLoading","results","gon","rfp_results","map","result","extractRFPResult","value","key","company_name","handleResultSelect","e","props","onSelect","handleSearchChange","length","setTimeout","state","re","RegExp","escapeRegExp","isMatch","test","filter","handleSearch","icon","iconPosition","input","debounce","leading","trailing","visibility","position","number","func","defaultProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { css, StyleSheet } from 'aphrodite';\nimport { Button, Container, Search, Grid, Header, Segment, Label, Form } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { searchTerm as searchTermAction } from '../../actions/defaultActions';\n\nconst styles = StyleSheet.create({\n  SearchBar_searchbar: {\n    width: '100%',\n    fontSize: '14px',\n  },\n});\n\nconst resultRenderer = ({ id, title, company }) => <div key={`result-${id}`}>{company}: {title}</div>\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n}\n\nclass SearchBar extends PureComponent {\n  componentWillMount() {\n    this.resetComponent();\n  }\n\n  resetComponent = () => {\n    this.setState({\n      isLoading: false,\n      results: gon.rfp_results.map(result => this.extractRFPResult(result)),\n      value: ''\n    });\n  }\n\n  extractRFPResult = (result) => {\n    return {\n      key: `rfp-${result.id}`,\n      title: result.title,\n      company: (result.company || {}).company_name,\n    };\n  }\n\n  handleResultSelect = (e, { result }) => {\n    const { searchTerm, onSelect } = this.props;\n    this.setState({ value: result.title });\n    onSelect ? onSelect(result.id) : searchTerm(result.title);\n  };\n\n  handleSearchChange = (e, { value }) => {\n    const { searchTerm } = this.props;\n    this.setState({ isLoading: true, value });\n\n    if (value.length === 0) {\n      this.resetComponent();\n      searchTerm('');\n    }\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.resetComponent();\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n      const isMatch = result => re.test(result.title) || re.test(result.company.company_name);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(gon.rfp_results, isMatch).map(result => this.extractRFPResult(result)),\n      });\n    }, 300);\n  };\n\n  handleSearch = () => {\n    const { value } = this.state;\n    const { searchTerm } = this.props;\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state;\n    const { width } = this.props;\n\n    return (\n      <Grid>\n        <Grid.Column width={width}>\n          <Form onSubmit={this.handleSearch}>\n            <Search\n              className={\"searchbar\"}\n              style={{ fontSize: '14px' }}\n              fluid\n              input={{ icon: 'search', iconPosition: 'left', input: 'text' }}\n              loading={isLoading}\n              onResultSelect={this.handleResultSelect}\n              onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                leading: true,\n                trailing: true,\n              })}\n              results={results}\n              placeholder=\"Find opportunities...\"\n              resultRenderer={resultRenderer}\n              value={value}\n            />\n            <input type=\"submit\" style={{ visibility: 'hidden', position: 'absolute' }} />\n          </Form>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  width: PropTypes.number,\n  onSelect: PropTypes.func,\n};\n\nSearchBar.defaultProps = {\n  width: 12,\n};\n\nconst mapDispatchToProps = {\n  searchTerm: searchTermAction,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}