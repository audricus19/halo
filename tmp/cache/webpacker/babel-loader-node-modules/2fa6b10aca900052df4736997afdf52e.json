{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/rfpForm/components/RFPForm/RFPForm.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { css, StyleSheet } from 'aphrodite';\nimport PropTypes from 'prop-types';\nimport { Container, Form, Dropdown, Icon, Input, Button, Checkbox, Radio, Message } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport { COLORS } from '../../../../constants';\nimport haloLogo from '../../../../images/logos/halo_logo.svg';\nimport { authenticityToken, getCookie } from '../../../marketplace/utils/requests';\nimport ResultRow from '../../../marketplace/components/ResultRow';\nvar expertiseOptions = gon.areas_of_expertise;\nvar innovationTypesOptions = gon.innovation_types;\nvar styles = StyleSheet.create({\n  RFPForm_logoBanner: {\n    textAlign: 'center',\n    backgroundColor: COLORS.snowWhite,\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    marginBottom: '50px',\n    borderBottom: \"1px solid \".concat(COLORS.transparentGray)\n  },\n  RFPForm_backButton: {\n    fontSize: '14px',\n    marginTop: '-20px',\n    marginLeft: '-50px'\n  },\n  RFPForm_backButtonLink: {\n    textDecoration: 'none',\n    color: COLORS.darkGray,\n    fontWeight: 600\n  },\n  RFPForm_form: {\n    width: '80%',\n    margin: 'auto'\n  },\n  RFPForm_datepicker: {\n    width: '100%',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    fontSize: '14px'\n  },\n  RFPForm_header: {\n    fontWeight: 600,\n    fontSize: '15px',\n    color: COLORS.darkGray,\n    marginBottom: '10px',\n    marginTop: '30px'\n  },\n  RFPForm_inputText: {\n    fontSize: '14px'\n  },\n  RFPForm_dropdown: {\n    margin: 'auto',\n    flexWrap: 'wrap',\n    fontSize: '14px',\n    height: '48px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  RFPForm_keywordDropdown: {\n    margin: 'auto',\n    fontSize: '14px',\n    minHeight: '48px',\n    paddingTop: '8px'\n  },\n  RFPForm_label: _defineProperty({\n    color: COLORS.gray,\n    fontWeight: 'regular',\n    fontSize: '14px'\n  }, \"fontWeight\", 700),\n  RFPForm_checkboxLabel: {\n    color: COLORS.gray,\n    fontWeight: 'regular',\n    display: 'block',\n    marginBottom: '-25px',\n    paddingLeft: '25px',\n    fontSize: '14px'\n  },\n  RFPForm_textarea: {\n    fontSize: '14px'\n  },\n  RFPForm_bulletField: {\n    fontSize: '14px',\n    width: '95%',\n    display: 'inline-block',\n    marginRight: '2%'\n  },\n  RFPForm_otherResourceField: {\n    width: '100%',\n    marginBottom: '20px',\n    fontSize: '14px'\n  },\n  RFPForm_deadlineContainer: {\n    marginTop: '20px',\n    fontSize: '14px'\n  },\n  RFPForm_deadlineField: {\n    width: '100%',\n    marginBottom: '20px',\n    fontSize: '14px'\n  },\n  RFPForm_submitButtonHolder: {\n    width: '100%'\n  },\n  RFPForm_submitButton: {\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    textAlign: 'center',\n    color: COLORS.white,\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    marginTop: '20px',\n    width: '100%'\n  },\n  RFPForm_needHelpContainer: {\n    marginTop: '20px',\n    marginBottom: '50px',\n    textAlign: 'center'\n  },\n  RFPForm_needHelpLink: {\n    color: COLORS.darkGray,\n    fontSize: '14px',\n    textDecoration: 'none'\n  },\n  RFPForm_plusIcon: {\n    cursor: 'pointer',\n    ':hover': {\n      transform: 'scale(1.1)'\n    }\n  }\n});\n\nvar RFPForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(RFPForm, _PureComponent);\n\n  function RFPForm(props) {\n    var _this;\n\n    _classCallCheck(this, RFPForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RFPForm).call(this, props));\n\n    _this.handleSubmit = function _callee(e) {\n      var _this$state, deadline, innovationTypes, whyItMatters, inScopeProposals, outOfScopeProposals, availableResources, otherResource, additionalResources, therapeuticArea, title, summary, formData, rfpResponse, responseJson;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _this$state = _this.state, deadline = _this$state.deadline, innovationTypes = _this$state.innovationTypes, whyItMatters = _this$state.whyItMatters, inScopeProposals = _this$state.inScopeProposals, outOfScopeProposals = _this$state.outOfScopeProposals, availableResources = _this$state.availableResources, otherResource = _this$state.otherResource, additionalResources = _this$state.additionalResources, therapeuticArea = _this$state.therapeuticArea, title = _this$state.title, summary = _this$state.summary;\n\n              _this.setState({\n                isSubmitting: true,\n                errors: {},\n                hasSubmitted: true\n              });\n\n              formData = new FormData();\n              formData.append('request_for_proposal[title]', title);\n              formData.append('request_for_proposal[summary]', summary);\n              formData.append('request_for_proposal[innovation_types]', innovationTypes);\n              formData.append('request_for_proposal[why_it_matters]', whyItMatters);\n              formData.append('request_for_proposal[in_scope_proposals]', inScopeProposals.filter(function (proposal) {\n                return proposal.length > 0;\n              }).join('****'));\n              formData.append('request_for_proposal[out_of_scope_proposals]', outOfScopeProposals.filter(function (proposal) {\n                return proposal.length > 0;\n              }).join('****'));\n              formData.append('request_for_proposal[available_resources]', availableResources);\n              formData.append('request_for_proposal[other_resource]', otherResource);\n              formData.append('request_for_proposal[additional_resources]', additionalResources);\n              formData.append('request_for_proposal[deadline]', deadline);\n              formData.append('request_for_proposal[therapeutic_area]', therapeuticArea);\n              _context.prev = 15;\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(fetch('/request_for_proposals', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  'Accept': 'application/json',\n                  'X-CSRF-Token': authenticityToken()\n                }\n              }));\n\n            case 18:\n              rfpResponse = _context.sent;\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(rfpResponse.json());\n\n            case 21:\n              responseJson = _context.sent;\n\n              if (responseJson.errors && Object.keys(responseJson.errors).length > 0) {\n                _this.setState({\n                  isSubmitting: false,\n                  errors: responseJson.errors\n                });\n              } else {\n                _this.setState({\n                  isSubmitting: false\n                });\n\n                window.location.href = '/';\n              }\n\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](15);\n\n              _this.setState({\n                isSubmitting: false\n              });\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[15, 25]]);\n    };\n\n    _this.handleChange = function (e, selection, maxLength) {\n      _this.setState(_defineProperty({\n        hasSubmitted: false\n      }, selection.name, maxLength ? selection.value.slice(0, maxLength) : selection.value));\n    };\n\n    _this.handleAppendingFields = function (e, selection, name, index) {\n      var fields = _this.state[name].slice();\n\n      fields[index] = selection.value;\n\n      _this.setState(_defineProperty({\n        hasSubmitted: false\n      }, name, fields));\n    };\n\n    _this.handleAddingNewField = function (name) {\n      var fields = _this.state[name].slice();\n\n      fields.push(\"\");\n\n      _this.setState(_defineProperty({\n        autoFocus: true,\n        hasSubmitted: false\n      }, name, fields));\n    };\n\n    _this.handleAvailableResources = function (resource) {\n      var availableResources = _this.state.availableResources;\n\n      if (!availableResources.includes(resource)) {\n        _this.setState({\n          hasSubmitted: false,\n          availableResources: availableResources.concat(resource)\n        });\n      } else {\n        _this.setState({\n          hasSubmitted: false,\n          availableResources: availableResources.filter(function (el) {\n            return el != resource;\n          })\n        });\n      }\n    };\n\n    _this.state = {\n      deadline: '',\n      innovationTypes: [],\n      therapeuticArea: '',\n      whyItMatters: '',\n      inScopeProposals: [''],\n      outOfScopeProposals: [''],\n      availableResources: [],\n      otherResource: '',\n      additionalResources: '',\n      title: '',\n      summary: '',\n      errors: {},\n      autoFocus: false\n    };\n    window.scrollTo(0, 0);\n    return _this;\n  }\n\n  _createClass(RFPForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          deadline = _this$state2.deadline,\n          title = _this$state2.title,\n          summary = _this$state2.summary,\n          innovationTypes = _this$state2.innovationTypes,\n          whyItMatters = _this$state2.whyItMatters,\n          therapeuticArea = _this$state2.therapeuticArea,\n          inScopeProposals = _this$state2.inScopeProposals,\n          outOfScopeProposals = _this$state2.outOfScopeProposals,\n          availableResources = _this$state2.availableResources,\n          otherResource = _this$state2.otherResource,\n          additionalResources = _this$state2.additionalResources,\n          isSubmitting = _this$state2.isSubmitting,\n          errors = _this$state2.errors,\n          autoFocus = _this$state2.autoFocus;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.RFPForm_logoBanner),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: haloLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.RFPForm_backButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        className: css(styles.RFPForm_backButtonLink),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"angle left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), \" Back\")), React.createElement(\"div\", {\n        className: css(styles.RFPForm_form),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        error: errors && Object.keys(errors).length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.RFPForm_header),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Request for Proposal Form\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"RFP Title and Summary\"), React.createElement(\"div\", {\n        className: css(styles.RFPForm_subheader),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Scientists see your RFP title and summary in search results.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), \"A concise, well-written description helps ensure you receive the most relevant proposals.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), \"Preview (will fill out as you complete the form):\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(ResultRow, {\n        company: gon.user_company_name,\n        title: title || \"Give a short title for the request here\",\n        summary: summary || \"This is a summary of the request for proposal with just a few short sentences.\",\n        therapeuticArea: gon.areas_of_expertise_mapping[therapeuticArea] || \"Research Area\",\n        innovationTypes: innovationTypes.length === 0 ? [\"Innovation\", \"Technology\"] : innovationTypes.map(function (itype) {\n          return gon.innovation_type_mapping[itype];\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: css(styles.RFPForm_inputText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Title (100 characters or less)\"), React.createElement(Form.Input, {\n        error: errors.title ? true : null,\n        name: \"title\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: function onChange(e, selection) {\n          return _this2.handleChange(e, selection, 100);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: css(styles.RFPForm_inputText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Summary (250 characters or less)\"), React.createElement(Form.TextArea, {\n        className: css(styles.RFPForm_textarea),\n        error: errors.summary ? true : null,\n        name: \"summary\",\n        rows: \"5\",\n        placeholder: \"Summary of request\",\n        value: summary,\n        onChange: function onChange(e, selection) {\n          return _this2.handleChange(e, selection, 250);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Innovation Type (3 or less)\"), React.createElement(\"div\", {\n        className: \"onboarding-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        className: css(styles.RFPForm_keywordDropdown),\n        placeholder: \"+ Select all innovation types\",\n        name: \"innovationTypes\",\n        fluid: true,\n        selection: true,\n        multiple: true,\n        search: true,\n        value: innovationTypes,\n        options: innovationTypesOptions,\n        onChange: function onChange(e, selection) {\n          return _this2.handleChange(e, selection, 3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"What is your area of expertise?\"), React.createElement(\"div\", {\n        className: \"custom-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        className: css(styles.RFPForm_dropdown),\n        icon: \"chevron down\",\n        error: errors.therapeutic_area ? true : null,\n        placeholder: \"Therapeutic Area\",\n        name: \"therapeuticArea\",\n        options: expertiseOptions,\n        fluid: true,\n        selection: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Why does it matter to your company?\"), React.createElement(Form.TextArea, {\n        className: css(styles.RFPForm_textarea),\n        name: \"whyItMatters\",\n        rows: \"5\",\n        placeholder: \"Why does it matter?\",\n        value: whyItMatters,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"What proposals are in scope?\"), inScopeProposals.map(function (inScopeProposal, i) {\n        return React.createElement(Form.Input, {\n          autoFocus: autoFocus,\n          key: \"inscope-\".concat(i),\n          className: css(styles.RFPForm_bulletField),\n          name: \"inScopeProposals\",\n          placeholder: \"Add bullet point here\",\n          value: inScopeProposals[i],\n          onKeyPress: function onKeyPress(e) {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n\n              _this2.handleAddingNewField('inScopeProposals');\n            }\n          },\n          onChange: function onChange(e, selection) {\n            return _this2.handleAppendingFields(e, selection, 'inScopeProposals', i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        });\n      }), React.createElement(Icon, {\n        className: css(styles.RFPForm_plusIcon),\n        name: \"plus\",\n        onClick: function onClick() {\n          return _this2.handleAddingNewField('inScopeProposals');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"What proposals are out of scope?\"), outOfScopeProposals.map(function (outOfScopeProposal, i) {\n        return React.createElement(Form.Input, {\n          autoFocus: autoFocus,\n          key: \"inscope-\".concat(i),\n          className: css(styles.RFPForm_bulletField),\n          name: \"outOfScopeProposals\",\n          placeholder: \"Add bullet point here\",\n          value: outOfScopeProposals[i],\n          onKeyPress: function onKeyPress(e) {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n\n              _this2.handleAddingNewField('outOfScopeProposals');\n            }\n          },\n          onChange: function onChange(e, selection) {\n            return _this2.handleAppendingFields(e, selection, 'outOfScopeProposals', i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        });\n      }), React.createElement(Icon, {\n        className: css(styles.RFPForm_plusIcon),\n        name: \"plus\",\n        onClick: function onClick() {\n          return _this2.handleAddingNewField('outOfScopeProposals');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"What resources are available to investigators?\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        grouped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(Form.Checkbox, {\n        label: React.createElement(\"label\", {\n          className: css(styles.RFPForm_checkboxLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, \"Funding\"),\n        name: \"availableResources\",\n        value: \"Funding\",\n        checked: availableResources.includes('funding'),\n        onChange: function onChange() {\n          return _this2.handleAvailableResources('funding');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }), React.createElement(Form.Checkbox, {\n        label: React.createElement(\"label\", {\n          className: css(styles.RFPForm_checkboxLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482\n          },\n          __self: this\n        }, \"Compounds / Reagents\"),\n        name: \"availableResources\",\n        value: \"Compounds / Reagents\",\n        checked: availableResources.includes('compounds_reagents'),\n        onChange: function onChange() {\n          return _this2.handleAvailableResources('compounds_reagents');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), React.createElement(Form.Checkbox, {\n        label: React.createElement(\"label\", {\n          className: css(styles.RFPForm_checkboxLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489\n          },\n          __self: this\n        }, \"Tools / Technologies\"),\n        name: \"availableResources\",\n        value: \"Tools / Technologies\",\n        checked: availableResources.includes('tools_technologies'),\n        onChange: function onChange() {\n          return _this2.handleAvailableResources('tools_technologies');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }), React.createElement(Form.Checkbox, {\n        label: React.createElement(\"label\", {\n          className: css(styles.RFPForm_checkboxLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        }, \"Mentorship / Expertise\"),\n        name: \"availableResources\",\n        value: \"Mentorship / Expertise\",\n        checked: availableResources.includes('mentorship_expertise'),\n        onChange: function onChange() {\n          return _this2.handleAvailableResources('mentorship_expertise');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }), React.createElement(Form.Checkbox, {\n        label: React.createElement(\"label\", {\n          className: css(styles.RFPForm_checkboxLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, \"Lab Space\"),\n        name: \"availableResources\",\n        value: \"Lab Space\",\n        checked: availableResources.includes('lab_space'),\n        onChange: function onChange() {\n          return _this2.handleAvailableResources('lab_space');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }), React.createElement(Form.Checkbox, {\n        label: React.createElement(\"label\", {\n          className: css(styles.RFPForm_checkboxLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, \"Other\"),\n        name: \"availableResources\",\n        value: \"Other\",\n        checked: availableResources.includes('other'),\n        onChange: function onChange() {\n          return _this2.handleAvailableResources('other');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: css(styles.RFPForm_inputText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        disabled: !availableResources.includes('other'),\n        name: \"otherResource\",\n        placeholder: \"Other resource\",\n        value: otherResource,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"Additional details on resources provided\"), React.createElement(Form.TextArea, {\n        className: css(styles.RFPForm_textarea),\n        name: \"additionalResources\",\n        rows: \"5\",\n        placeholder: \"Additional details on resources\",\n        value: additionalResources,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: css(styles.RFPForm_deadlineContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: css(styles.RFPForm_label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Proposal Deadline\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"Leave blank if you do not have a deadline\"), React.createElement(DatePicker, {\n        selected: deadline,\n        name: \"deadline\",\n        className: css(styles.RFPForm_datepicker),\n        onChange: function onChange(newDate) {\n          _this2.setState({\n            hasSubmitted: false,\n            deadline: newDate\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }))), React.createElement(Message, {\n        error: true,\n        header: \"Invalid form submission\",\n        list: Object.keys(errors).map(function (fieldName) {\n          return \"\".concat(fieldName.charAt(0).toUpperCase() + fieldName.slice(1).split('_').join(' '), \" \").concat(errors[fieldName], \", please try again\");\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: css(styles.RFPForm_submitButtonHolder),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, \"\\xA0\", React.createElement(Button, {\n        className: css(styles.RFPForm_submitButton),\n        disabled: isSubmitting,\n        loading: isSubmitting,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Submit Request for Proposal\"), React.createElement(\"div\", {\n        className: css(styles.RFPForm_needHelpContainer),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: css(styles.RFPForm_needHelpLink),\n        href: \"/\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \"Need Help?\"))))))));\n    }\n  }]);\n\n  return RFPForm;\n}(PureComponent);\n\nexport default RFPForm;","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/rfpForm/components/RFPForm/RFPForm.jsx"],"names":["React","PureComponent","css","StyleSheet","PropTypes","Container","Form","Dropdown","Icon","Input","Button","Checkbox","Radio","Message","DatePicker","COLORS","haloLogo","authenticityToken","getCookie","ResultRow","expertiseOptions","gon","areas_of_expertise","innovationTypesOptions","innovation_types","styles","create","RFPForm_logoBanner","textAlign","backgroundColor","snowWhite","paddingTop","paddingBottom","marginBottom","borderBottom","transparentGray","RFPForm_backButton","fontSize","marginTop","marginLeft","RFPForm_backButtonLink","textDecoration","color","darkGray","fontWeight","RFPForm_form","width","margin","RFPForm_datepicker","borderStyle","borderWidth","RFPForm_header","RFPForm_inputText","RFPForm_dropdown","flexWrap","height","display","alignItems","RFPForm_keywordDropdown","minHeight","RFPForm_label","gray","RFPForm_checkboxLabel","paddingLeft","RFPForm_textarea","RFPForm_bulletField","marginRight","RFPForm_otherResourceField","RFPForm_deadlineContainer","RFPForm_deadlineField","RFPForm_submitButtonHolder","RFPForm_submitButton","background","lightBlue","backgroundImage","white","lineHeight","RFPForm_needHelpContainer","RFPForm_needHelpLink","RFPForm_plusIcon","cursor","transform","RFPForm","props","handleSubmit","e","preventDefault","state","deadline","innovationTypes","whyItMatters","inScopeProposals","outOfScopeProposals","availableResources","otherResource","additionalResources","therapeuticArea","title","summary","setState","isSubmitting","errors","hasSubmitted","formData","FormData","append","filter","proposal","length","join","fetch","method","body","headers","rfpResponse","json","responseJson","Object","keys","window","location","href","handleChange","selection","maxLength","name","value","slice","handleAppendingFields","index","fields","handleAddingNewField","push","autoFocus","handleAvailableResources","resource","includes","concat","el","scrollTo","RFPForm_subheader","user_company_name","areas_of_expertise_mapping","map","itype","innovation_type_mapping","therapeutic_area","inScopeProposal","i","key","outOfScopeProposal","newDate","fieldName","charAt","toUpperCase","split"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { css, StyleSheet } from 'aphrodite';\nimport PropTypes from 'prop-types';\nimport { Container, Form, Dropdown, Icon, Input, Button, Checkbox, Radio, Message } from 'semantic-ui-react'\nimport DatePicker from \"react-datepicker\";\n\nimport { COLORS } from '../../../../constants';\nimport haloLogo from '../../../../images/logos/halo_logo.svg';\nimport { authenticityToken, getCookie } from '../../../marketplace/utils/requests';\n\nimport ResultRow from '../../../marketplace/components/ResultRow';\n\nconst expertiseOptions = gon.areas_of_expertise;\nconst innovationTypesOptions = gon.innovation_types;\n\nconst styles = StyleSheet.create({\n  RFPForm_logoBanner: {\n    textAlign: 'center',\n    backgroundColor: COLORS.snowWhite,\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    marginBottom: '50px',\n    borderBottom: `1px solid ${COLORS.transparentGray}`,\n  },\n  RFPForm_backButton: {\n    fontSize: '14px',\n    marginTop: '-20px',\n    marginLeft: '-50px',\n  },\n  RFPForm_backButtonLink: {\n    textDecoration: 'none',\n    color: COLORS.darkGray,\n    fontWeight: 600,\n  },\n  RFPForm_form: {\n    width: '80%',\n    margin: 'auto',\n  },\n  RFPForm_datepicker: {\n    width: '100%',\n    borderStyle: 'solid',\n    borderWidth: '1px',\n    fontSize: '14px',\n  },\n  RFPForm_header: {\n    fontWeight: 600,\n    fontSize: '15px',\n    color: COLORS.darkGray,\n    marginBottom: '10px',\n    marginTop: '30px',\n  },\n  RFPForm_inputText: {\n    fontSize: '14px',\n  },\n  RFPForm_dropdown: {\n    margin: 'auto',\n    flexWrap: 'wrap',\n    fontSize: '14px',\n    height: '48px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  RFPForm_keywordDropdown: {\n    margin: 'auto',\n    fontSize: '14px',\n    minHeight: '48px',\n    paddingTop: '8px',\n  },\n  RFPForm_label: {\n    color: COLORS.gray,\n    fontWeight: 'regular',\n    fontSize: '14px',\n    fontWeight: 700,\n  },\n  RFPForm_checkboxLabel: {\n    color: COLORS.gray,\n    fontWeight: 'regular',\n    display: 'block',\n    marginBottom: '-25px',\n    paddingLeft: '25px',\n    fontSize: '14px',\n  },\n  RFPForm_textarea: {\n    fontSize: '14px',\n  },\n  RFPForm_bulletField: {\n    fontSize: '14px',\n    width: '95%',\n    display: 'inline-block',\n    marginRight: '2%',\n  },\n  RFPForm_otherResourceField: {\n    width: '100%',\n    marginBottom: '20px',\n    fontSize: '14px',\n  },\n  RFPForm_deadlineContainer: {\n    marginTop: '20px',\n    fontSize: '14px',\n  },\n  RFPForm_deadlineField: {\n    width: '100%',\n    marginBottom: '20px',\n    fontSize: '14px',\n  },\n  RFPForm_submitButtonHolder: {\n    width: '100%',\n  },\n  RFPForm_submitButton: {\n    background: COLORS.lightBlue,\n    backgroundImage: 'linear-gradient(134.72deg, #4E9DF5 0%, #48B2F4 100%)',\n    textAlign: 'center',\n    color: COLORS.white,\n    fontSize: '14px',\n    fontWeight: 500,\n    lineHeight: '20px',\n    marginTop: '20px',\n    width: '100%',\n  },\n  RFPForm_needHelpContainer: {\n    marginTop: '20px',\n    marginBottom: '50px',\n    textAlign: 'center',\n  },\n  RFPForm_needHelpLink: {\n    color: COLORS.darkGray,\n    fontSize: '14px',\n    textDecoration: 'none',\n  },\n  RFPForm_plusIcon: {\n    cursor: 'pointer',\n    ':hover': {\n      transform: 'scale(1.1)',\n    },\n  },\n});\n\nclass RFPForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deadline: '',\n      innovationTypes: [],\n      therapeuticArea: '',\n      whyItMatters: '',\n      inScopeProposals: [''],\n      outOfScopeProposals: [''],\n      availableResources: [],\n      otherResource: '',\n      additionalResources: '',\n      title: '',\n      summary: '',\n      errors: {},\n      autoFocus: false,\n    };\n    window.scrollTo(0, 0);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const {\n      deadline,\n      innovationTypes,\n      whyItMatters,\n      inScopeProposals,\n      outOfScopeProposals,\n      availableResources,\n      otherResource,\n      additionalResources,\n      therapeuticArea,\n      title,\n      summary,\n    } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n      errors: {},\n      hasSubmitted: true,\n    });\n\n    const formData = new FormData();\n    formData.append('request_for_proposal[title]', title);\n    formData.append('request_for_proposal[summary]', summary);\n    formData.append('request_for_proposal[innovation_types]', innovationTypes);\n    formData.append('request_for_proposal[why_it_matters]', whyItMatters);\n    formData.append('request_for_proposal[in_scope_proposals]', inScopeProposals.filter((proposal) => proposal.length > 0).join('****'));\n    formData.append('request_for_proposal[out_of_scope_proposals]', outOfScopeProposals.filter((proposal) => proposal.length > 0).join('****'));\n    formData.append('request_for_proposal[available_resources]', availableResources);\n    formData.append('request_for_proposal[other_resource]', otherResource);\n    formData.append('request_for_proposal[additional_resources]', additionalResources);\n    formData.append('request_for_proposal[deadline]', deadline);\n    formData.append('request_for_proposal[therapeutic_area]', therapeuticArea);\n\n    try {\n      const rfpResponse = await fetch('/request_for_proposals', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n          'X-CSRF-Token': authenticityToken(),\n        }\n      });\n      const responseJson = await rfpResponse.json();\n      if (responseJson.errors && Object.keys(responseJson.errors).length > 0) {\n        this.setState({\n          isSubmitting: false,\n          errors: responseJson.errors,\n        });\n      } else {\n        this.setState({ isSubmitting: false });\n        window.location.href = '/';\n      }\n    } catch(err) {\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  handleChange = (e, selection, maxLength) => {\n    this.setState({\n      hasSubmitted: false,\n      [selection.name]: maxLength ? selection.value.slice(0, maxLength) : selection.value,\n    });\n  };\n\n  handleAppendingFields = (e, selection, name, index) => {\n    const fields = this.state[name].slice();\n    fields[index] = selection.value;\n    this.setState({\n      hasSubmitted: false,\n      [name]: fields,\n    });\n  };\n\n  handleAddingNewField = (name) => {\n    const fields = this.state[name].slice();\n    fields.push(\"\");\n    this.setState({\n      autoFocus: true,\n      hasSubmitted: false,\n      [name]: fields,\n    });\n  };\n\n  handleAvailableResources = (resource) => {\n    const {\n      availableResources,\n    } = this.state;\n\n    if (!availableResources.includes(resource)) {\n      this.setState({\n        hasSubmitted: false,\n        availableResources: availableResources.concat(resource)\n      });\n    } else {\n      this.setState({\n        hasSubmitted: false,\n        availableResources: availableResources.filter((el) => {\n          return el != resource;\n        }),\n      });\n    }\n  };\n\n  render() {\n    const {\n      deadline,\n      title,\n      summary,\n      innovationTypes,\n      whyItMatters,\n      therapeuticArea,\n      inScopeProposals,\n      outOfScopeProposals,\n      availableResources,\n      otherResource,\n      additionalResources,\n      isSubmitting,\n      errors,\n      autoFocus,\n    } = this.state;\n\n    return (\n      <div>\n        <div className={css(styles.RFPForm_logoBanner)}>\n          <img src={haloLogo} />\n        </div>\n        <Container>\n          <div className={css(styles.RFPForm_backButton)}>\n            <a href=\"/\" className={css(styles.RFPForm_backButtonLink)}>\n              <Icon name='angle left' /> Back\n            </a>\n          </div>\n          <div className={css(styles.RFPForm_form)}>\n            <Form onSubmit={this.handleSubmit} error={errors && Object.keys(errors).length > 0}>\n              <div className={css(styles.RFPForm_header)}>\n                Request for Proposal Form\n              </div>\n              <div>\n                <div className={css(styles.RFPForm_label)}>\n                  RFP Title and Summary\n                </div>\n                <div className={css(styles.RFPForm_subheader)}>\n                  Scientists see your RFP title and summary in search results.\n                  <br />\n                  A concise, well-written description helps ensure you receive the most relevant proposals.\n                  <br />\n                  <br />\n                  Preview (will fill out as you complete the form):\n                  <br />\n                  <ResultRow\n                    company={gon.user_company_name}\n                    title={title || \"Give a short title for the request here\"}\n                    summary={summary || \"This is a summary of the request for proposal with just a few short sentences.\"}\n                    therapeuticArea={gon.areas_of_expertise_mapping[therapeuticArea] || \"Research Area\"}\n                    innovationTypes={\n                      innovationTypes.length === 0 ?\n                        [\"Innovation\", \"Technology\"] :\n                        innovationTypes.map(itype => gon.innovation_type_mapping[itype])\n                    }\n                  />\n                  <div className={css(styles.RFPForm_inputText)}>\n                    <Form.Field>\n                      <label className={css(styles.RFPForm_label)}>Title (100 characters or less)</label>\n                      <Form.Input\n                        error={errors.title ? true : null}\n                        name='title'\n                        placeholder='Title'\n                        value={title}\n                        onChange={(e, selection) => this.handleChange(e, selection, 100)}\n                      />\n                    </Form.Field>\n                  </div>\n                  <div className={css(styles.RFPForm_inputText)}>\n                    <Form.Field>\n                      <label className={css(styles.RFPForm_label)}>\n                        Summary (250 characters or less)\n                      </label>\n                      <Form.TextArea\n                        className={css(styles.RFPForm_textarea)}\n                        error={errors.summary ? true : null}\n                        name='summary'\n                        rows='5'\n                        placeholder='Summary of request'\n                        value={summary}\n                        onChange={(e, selection) => this.handleChange(e, selection, 250)}\n                      />\n                    </Form.Field>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <div className={css(styles.RFPForm_label)}>\n                  Innovation Type (3 or less)\n                </div>\n                <div className=\"onboarding-dropdown\">\n                  <Dropdown\n                    className={css(styles.RFPForm_keywordDropdown)}\n                    placeholder='+ Select all innovation types'\n                    name=\"innovationTypes\"\n                    fluid\n                    selection\n                    multiple\n                    search\n                    value={innovationTypes}\n                    options={innovationTypesOptions}\n                    onChange={(e, selection) => this.handleChange(e, selection, 3)}\n                  />\n                </div>\n              </div>\n              <div >\n                <Form.Field>\n                <label className={css(styles.RFPForm_label)}>\n                  What is your area of expertise?\n                </label>\n                <div className=\"custom-dropdown\">\n                  <Dropdown\n                    className={css(styles.RFPForm_dropdown)}\n                    icon=\"chevron down\"\n                    error={errors.therapeutic_area ? true : null}\n                    placeholder='Therapeutic Area'\n                    name=\"therapeuticArea\"\n                    options={expertiseOptions}\n                    fluid\n                    selection\n                    onChange={this.handleChange}\n                  />\n                </div>\n                </Form.Field>\n                <div>\n                  <Form.Field>\n                    <label className={css(styles.RFPForm_label)}>\n                      Why does it matter to your company?\n                    </label>\n                    <Form.TextArea\n                      className={css(styles.RFPForm_textarea)}\n                      name='whyItMatters'\n                      rows='5'\n                      placeholder='Why does it matter?'\n                      value={whyItMatters}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                </div>\n                <br />\n                <div>\n                  <Form.Field>\n                    <label className={css(styles.RFPForm_label)}>\n                      What proposals are in scope?\n                    </label>\n                    {inScopeProposals.map((inScopeProposal, i) => {\n                      return (\n                        <Form.Input\n                          autoFocus={autoFocus}\n                          key={`inscope-${i}`}\n                          className={css(styles.RFPForm_bulletField)}\n                          name='inScopeProposals'\n                          placeholder='Add bullet point here'\n                          value={inScopeProposals[i]}\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              this.handleAddingNewField('inScopeProposals');\n                            }\n                          }}\n                          onChange={(e, selection) => this.handleAppendingFields(e, selection, 'inScopeProposals', i)}\n                        />\n                      );\n                    })}\n                    <Icon className={css(styles.RFPForm_plusIcon)} name=\"plus\" onClick={() => this.handleAddingNewField('inScopeProposals')} />\n                  </Form.Field>\n                </div>\n                <br />\n                <div>\n                  <Form.Field>\n                    <label className={css(styles.RFPForm_label)}>\n                      What proposals are out of scope?\n                    </label>\n                    {outOfScopeProposals.map((outOfScopeProposal, i) => {\n                      return (\n                        <Form.Input\n                          autoFocus={autoFocus}\n                          key={`inscope-${i}`}\n                          className={css(styles.RFPForm_bulletField)}\n                          name='outOfScopeProposals'\n                          placeholder='Add bullet point here'\n                          value={outOfScopeProposals[i]}\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              this.handleAddingNewField('outOfScopeProposals');\n                            }\n                          }}\n                          onChange={(e, selection) => this.handleAppendingFields(e, selection, 'outOfScopeProposals', i)}\n                        />\n                      );\n                    })}\n                    <Icon className={css(styles.RFPForm_plusIcon)} name=\"plus\" onClick={() => this.handleAddingNewField('outOfScopeProposals')} />\n                  </Form.Field>\n                </div>\n              </div>\n              <hr />\n              <div>\n                <div className={css(styles.RFPForm_label)}>\n                  What resources are available to investigators?\n                </div>\n                <div>\n                  <Form.Group grouped>\n                    <Form.Checkbox\n                      label={<label className={css(styles.RFPForm_checkboxLabel)}>Funding</label>}\n                      name='availableResources'\n                      value='Funding'\n                      checked={availableResources.includes('funding')}\n                      onChange={() => this.handleAvailableResources('funding')}\n                    />\n                    <Form.Checkbox\n                      label={<label className={css(styles.RFPForm_checkboxLabel)}>Compounds / Reagents</label>}\n                      name='availableResources'\n                      value='Compounds / Reagents'\n                      checked={availableResources.includes('compounds_reagents')}\n                      onChange={() => this.handleAvailableResources('compounds_reagents')}\n                    />\n                    <Form.Checkbox\n                      label={<label className={css(styles.RFPForm_checkboxLabel)}>Tools / Technologies</label>}\n                      name='availableResources'\n                      value='Tools / Technologies'\n                      checked={availableResources.includes('tools_technologies')}\n                      onChange={() => this.handleAvailableResources('tools_technologies')}\n                    />\n                    <Form.Checkbox\n                      label={<label className={css(styles.RFPForm_checkboxLabel)}>Mentorship / Expertise</label>}\n                      name='availableResources'\n                      value='Mentorship / Expertise'\n                      checked={availableResources.includes('mentorship_expertise')}\n                      onChange={() => this.handleAvailableResources('mentorship_expertise')}\n                    />\n                    <Form.Checkbox\n                      label={<label className={css(styles.RFPForm_checkboxLabel)}>Lab Space</label>}\n                      name='availableResources'\n                      value='Lab Space'\n                      checked={availableResources.includes('lab_space')}\n                      onChange={() => this.handleAvailableResources('lab_space')}\n                    />\n                    <Form.Checkbox\n                      label={<label className={css(styles.RFPForm_checkboxLabel)}>Other</label>}\n                      name='availableResources'\n                      value='Other'\n                      checked={availableResources.includes('other')}\n                      onChange={() => this.handleAvailableResources('other')}\n                    />\n                  </Form.Group>\n                  <div className={css(styles.RFPForm_inputText)}>\n                    <Form.Field>\n                      <Form.Input\n                        disabled={!availableResources.includes('other')}\n                        name='otherResource'\n                        placeholder='Other resource'\n                        value={otherResource}\n                        onChange={this.handleChange}\n                      />\n                    </Form.Field>\n                  </div>\n                  <br />\n                </div>\n                <div>\n                  <Form.Field>\n                    <label className={css(styles.RFPForm_label)}>Additional details on resources provided</label>\n                    <Form.TextArea\n                      className={css(styles.RFPForm_textarea)}\n                      name='additionalResources'\n                      rows='5'\n                      placeholder='Additional details on resources'\n                      value={additionalResources}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                </div>\n                <div className={css(styles.RFPForm_deadlineContainer)}>\n                  <Form.Field>\n                    <label className={css(styles.RFPForm_label)}>Proposal Deadline</label>\n                    <div>Leave blank if you do not have a deadline</div>\n                    <DatePicker\n                      selected={deadline}\n                      name='deadline'\n                      className={css(styles.RFPForm_datepicker)}\n                      onChange={(newDate) => {\n                        this.setState({ hasSubmitted: false, deadline: newDate });\n                      }}\n                    />\n                  </Form.Field>\n                </div>\n                <Message\n                  error\n                  header='Invalid form submission'\n                  list={Object.keys(errors).map(fieldName => {\n                    return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1).split('_').join(' ')} ${errors[fieldName]}, please try again`;\n                  })}\n                />\n                <div className={css(styles.RFPForm_submitButtonHolder)}> \n                  <Button\n                    className={css(styles.RFPForm_submitButton)}\n                    disabled={isSubmitting}\n                    loading={isSubmitting}\n                    type='submit'\n                  >\n                    Submit Request for Proposal\n                  </Button>\n                  <div className={css(styles.RFPForm_needHelpContainer)}>\n                    <a className={css(styles.RFPForm_needHelpLink)} href=\"/\" target=\"_blank\">\n                      Need Help?\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default RFPForm;\n"]},"metadata":{},"sourceType":"module"}