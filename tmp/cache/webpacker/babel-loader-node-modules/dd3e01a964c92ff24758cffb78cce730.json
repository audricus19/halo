{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { emptyActionGenerator, payloadActionGenerator } from '../utils/redux';\nimport { authenticityToken } from '../utils/requests';\nexport var SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport var LOAD_CURRENT_USER = 'LOAD_CURRENT_USER';\nexport var SET_PATENTS = 'SET_PATENTS';\nexport var LOAD_PATENTS = 'LOAD_PATENTS';\nexport var SET_PUBLICATIONS = 'SET_PUBLICATIONS';\nexport var LOAD_PUBLICATIONS = 'LOAD_PUBLICATIONS';\nexport var SET_FUNDINGS = 'SET_FUNDINGS';\nexport var LOAD_FUNDINGS = 'LOAD_FUNDINGS';\nexport var TOGGLE_FUNDING_MODAL = 'TOGGLE_FUNDING_MODAL';\nexport var TOGGLE_PUBLICATION_MODAL = 'TOGGLE_PUBLICATION_MODAL';\nexport var TOGGLE_PATENT_MODAL = 'TOGGLE_PATENT_MODAL';\nexport var TOGGLE_LOGIN_MODAL = 'TOGGLE_LOGIN_MODAL';\nexport var setCurrentUser = payloadActionGenerator(SET_CURRENT_USER);\nexport var loadCurrentUser = emptyActionGenerator(LOAD_CURRENT_USER);\nexport var setPatents = payloadActionGenerator(SET_PATENTS);\nexport var loadPatents = emptyActionGenerator(LOAD_PATENTS);\nexport var setPublications = payloadActionGenerator(SET_PUBLICATIONS);\nexport var loadPublications = emptyActionGenerator(LOAD_PUBLICATIONS);\nexport var setFundings = payloadActionGenerator(SET_FUNDINGS);\nexport var loadFundings = emptyActionGenerator(LOAD_FUNDINGS);\nexport var toggleFundingModal = payloadActionGenerator(TOGGLE_FUNDING_MODAL);\nexport var togglePublicationModal = payloadActionGenerator(TOGGLE_PUBLICATION_MODAL);\nexport var togglePatentModal = payloadActionGenerator(TOGGLE_PATENT_MODAL);\nexport var toggleLoginModal = payloadActionGenerator(TOGGLE_LOGIN_MODAL);\nexport var fetchUser = function fetchUser(id) {\n  return function _callee(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(loadCurrentUser());\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/users/\".concat(id), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            responseJson = _context.sent;\n            dispatch(setCurrentUser(responseJson.user));\n            return _context.abrupt(\"return\", responseJson.user);\n\n          case 12:\n            window.location = \"/\";\n            return _context.abrupt(\"return\");\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var fetchPatents = function fetchPatents(userId) {\n  return function _callee2(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch(loadPatents());\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/patents?user_id=\".concat(userId), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context2.sent;\n            dispatch(setPatents(responseJson.patents));\n            return _context2.abrupt(\"return\", responseJson.patents);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var fetchPublications = function fetchPublications(userId) {\n  return function _callee3(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch(loadPublications());\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/publications?user_id=\".concat(userId), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context3.sent;\n            dispatch(setPublications(responseJson.publications));\n            return _context3.abrupt(\"return\", responseJson.publications);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n};\nexport var fetchFundings = function fetchFundings(userId) {\n  return function _callee4(dispatch) {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch(loadFundings());\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/fundings?user_id=\".concat(userId), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context4.sent;\n            dispatch(setFundings(responseJson.fundings));\n            return _context4.abrupt(\"return\", responseJson.fundings);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/Work/work/dev/project/projects/halo/app/javascript/src/marketplace/actions/profileActions.jsx"],"names":["emptyActionGenerator","payloadActionGenerator","authenticityToken","SET_CURRENT_USER","LOAD_CURRENT_USER","SET_PATENTS","LOAD_PATENTS","SET_PUBLICATIONS","LOAD_PUBLICATIONS","SET_FUNDINGS","LOAD_FUNDINGS","TOGGLE_FUNDING_MODAL","TOGGLE_PUBLICATION_MODAL","TOGGLE_PATENT_MODAL","TOGGLE_LOGIN_MODAL","setCurrentUser","loadCurrentUser","setPatents","loadPatents","setPublications","loadPublications","setFundings","loadFundings","toggleFundingModal","togglePublicationModal","togglePatentModal","toggleLoginModal","fetchUser","id","dispatch","fetch","method","headers","response","ok","json","responseJson","user","window","location","fetchPatents","userId","patents","fetchPublications","publications","fetchFundings","fundings"],"mappings":"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","sourcesContent":["import {\n  emptyActionGenerator,\n  payloadActionGenerator\n} from '../utils/redux';\nimport { authenticityToken } from '../utils/requests';\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_CURRENT_USER = 'LOAD_CURRENT_USER';\nexport const SET_PATENTS = 'SET_PATENTS';\nexport const LOAD_PATENTS = 'LOAD_PATENTS';\nexport const SET_PUBLICATIONS = 'SET_PUBLICATIONS';\nexport const LOAD_PUBLICATIONS = 'LOAD_PUBLICATIONS';\nexport const SET_FUNDINGS = 'SET_FUNDINGS';\nexport const LOAD_FUNDINGS = 'LOAD_FUNDINGS';\nexport const TOGGLE_FUNDING_MODAL = 'TOGGLE_FUNDING_MODAL';\nexport const TOGGLE_PUBLICATION_MODAL = 'TOGGLE_PUBLICATION_MODAL';\nexport const TOGGLE_PATENT_MODAL = 'TOGGLE_PATENT_MODAL';\nexport const TOGGLE_LOGIN_MODAL = 'TOGGLE_LOGIN_MODAL';\n\nexport const setCurrentUser = payloadActionGenerator(SET_CURRENT_USER);\nexport const loadCurrentUser = emptyActionGenerator(LOAD_CURRENT_USER);\nexport const setPatents = payloadActionGenerator(SET_PATENTS);\nexport const loadPatents = emptyActionGenerator(LOAD_PATENTS);\nexport const setPublications = payloadActionGenerator(SET_PUBLICATIONS);\nexport const loadPublications = emptyActionGenerator(LOAD_PUBLICATIONS);\nexport const setFundings = payloadActionGenerator(SET_FUNDINGS);\nexport const loadFundings = emptyActionGenerator(LOAD_FUNDINGS);\nexport const toggleFundingModal = payloadActionGenerator(TOGGLE_FUNDING_MODAL);\nexport const togglePublicationModal = payloadActionGenerator(TOGGLE_PUBLICATION_MODAL);\nexport const togglePatentModal = payloadActionGenerator(TOGGLE_PATENT_MODAL);\nexport const toggleLoginModal = payloadActionGenerator(TOGGLE_LOGIN_MODAL);\n\nexport const fetchUser = (id) => {\n  return async (dispatch) => {\n    dispatch(loadCurrentUser());\n\n    const response = await fetch(`/users/${id}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n\n    if (response.ok) {\n      const responseJson = await response.json();\n\n      dispatch(setCurrentUser(responseJson.user));\n      return responseJson.user;\n    } else {\n      window.location = \"/\";\n      return;\n    }\n  }\n}\n\nexport const fetchPatents = (userId) => {\n  return async (dispatch) => {\n    dispatch(loadPatents());\n\n    const response = await fetch(`/patents?user_id=${userId}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n    const responseJson = await response.json();\n\n    dispatch(setPatents(responseJson.patents));\n\n    return responseJson.patents;\n  }\n}\n\nexport const fetchPublications = (userId) => {\n  return async (dispatch) => {\n    dispatch(loadPublications());\n\n    const response = await fetch(`/publications?user_id=${userId}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n    const responseJson = await response.json();\n\n    dispatch(setPublications(responseJson.publications));\n\n    return responseJson.publications;\n  }\n}\n\nexport const fetchFundings = (userId) => {\n  return async (dispatch) => {\n    dispatch(loadFundings());\n\n    const response = await fetch(`/fundings?user_id=${userId}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      }\n    });\n    const responseJson = await response.json();\n\n    dispatch(setFundings(responseJson.fundings));\n\n    return responseJson.fundings;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}